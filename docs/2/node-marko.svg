<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1061.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="117205"><g><title>exit_mm (22 samples, 0.02%)</title><rect x="0.0009%" y="933" width="0.0188%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="22"/><text x="0.2509%" y="943.50"></text></g><g><title>mmput (22 samples, 0.02%)</title><rect x="0.0009%" y="917" width="0.0188%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="22"/><text x="0.2509%" y="927.50"></text></g><g><title>__mmput (22 samples, 0.02%)</title><rect x="0.0009%" y="901" width="0.0188%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="22"/><text x="0.2509%" y="911.50"></text></g><g><title>exit_mmap (22 samples, 0.02%)</title><rect x="0.0009%" y="885" width="0.0188%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="22"/><text x="0.2509%" y="895.50"></text></g><g><title>unmap_vmas (20 samples, 0.02%)</title><rect x="0.0026%" y="869" width="0.0171%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="20"/><text x="0.2526%" y="879.50"></text></g><g><title>unmap_single_vma (20 samples, 0.02%)</title><rect x="0.0026%" y="853" width="0.0171%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="20"/><text x="0.2526%" y="863.50"></text></g><g><title>unmap_page_range (20 samples, 0.02%)</title><rect x="0.0026%" y="837" width="0.0171%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="20"/><text x="0.2526%" y="847.50"></text></g><g><title>zap_pmd_range.isra.0 (20 samples, 0.02%)</title><rect x="0.0026%" y="821" width="0.0171%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="20"/><text x="0.2526%" y="831.50"></text></g><g><title>zap_pte_range (12 samples, 0.01%)</title><rect x="0.0094%" y="805" width="0.0102%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="12"/><text x="0.2594%" y="815.50"></text></g><g><title>do_exit (24 samples, 0.02%)</title><rect x="0.0000%" y="949" width="0.0205%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="24"/><text x="0.2500%" y="959.50"></text></g><g><title>iou-sqp-1098963 (38 samples, 0.03%)</title><rect x="0.0000%" y="1013" width="0.0324%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="38"/><text x="0.2500%" y="1023.50"></text></g><g><title>ret_from_fork_asm (38 samples, 0.03%)</title><rect x="0.0000%" y="997" width="0.0324%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="38"/><text x="0.2500%" y="1007.50"></text></g><g><title>ret_from_fork (38 samples, 0.03%)</title><rect x="0.0000%" y="981" width="0.0324%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="38"/><text x="0.2500%" y="991.50"></text></g><g><title>io_sq_thread (38 samples, 0.03%)</title><rect x="0.0000%" y="965" width="0.0324%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="38"/><text x="0.2500%" y="975.50"></text></g><g><title>schedule (13 samples, 0.01%)</title><rect x="0.0213%" y="949" width="0.0111%" height="15" fill="rgb(217,207,13)" fg:x="25" fg:w="13"/><text x="0.2713%" y="959.50"></text></g><g><title>__schedule (13 samples, 0.01%)</title><rect x="0.0213%" y="933" width="0.0111%" height="15" fill="rgb(231,73,38)" fg:x="25" fg:w="13"/><text x="0.2713%" y="943.50"></text></g><g><title>finish_task_switch.isra.0 (13 samples, 0.01%)</title><rect x="0.0213%" y="917" width="0.0111%" height="15" fill="rgb(225,20,46)" fg:x="25" fg:w="13"/><text x="0.2713%" y="927.50"></text></g><g><title>__perf_event_task_sched_in (13 samples, 0.01%)</title><rect x="0.0213%" y="901" width="0.0111%" height="15" fill="rgb(210,31,41)" fg:x="25" fg:w="13"/><text x="0.2713%" y="911.50"></text></g><g><title>perf_ctx_enable (13 samples, 0.01%)</title><rect x="0.0213%" y="885" width="0.0111%" height="15" fill="rgb(221,200,47)" fg:x="25" fg:w="13"/><text x="0.2713%" y="895.50"></text></g><g><title>x86_pmu_enable (13 samples, 0.01%)</title><rect x="0.0213%" y="869" width="0.0111%" height="15" fill="rgb(226,26,5)" fg:x="25" fg:w="13"/><text x="0.2713%" y="879.50"></text></g><g><title>intel_pmu_enable_all (13 samples, 0.01%)</title><rect x="0.0213%" y="853" width="0.0111%" height="15" fill="rgb(249,33,26)" fg:x="25" fg:w="13"/><text x="0.2713%" y="863.50"></text></g><g><title>native_write_msr (13 samples, 0.01%)</title><rect x="0.0213%" y="837" width="0.0111%" height="15" fill="rgb(235,183,28)" fg:x="25" fg:w="13"/><text x="0.2713%" y="847.50"></text></g><g><title>finish_task_switch.isra.0 (18 samples, 0.02%)</title><rect x="0.0384%" y="901" width="0.0154%" height="15" fill="rgb(221,5,38)" fg:x="45" fg:w="18"/><text x="0.2884%" y="911.50"></text></g><g><title>__perf_event_task_sched_in (18 samples, 0.02%)</title><rect x="0.0384%" y="885" width="0.0154%" height="15" fill="rgb(247,18,42)" fg:x="45" fg:w="18"/><text x="0.2884%" y="895.50"></text></g><g><title>perf_ctx_enable (18 samples, 0.02%)</title><rect x="0.0384%" y="869" width="0.0154%" height="15" fill="rgb(241,131,45)" fg:x="45" fg:w="18"/><text x="0.2884%" y="879.50"></text></g><g><title>x86_pmu_enable (18 samples, 0.02%)</title><rect x="0.0384%" y="853" width="0.0154%" height="15" fill="rgb(249,31,29)" fg:x="45" fg:w="18"/><text x="0.2884%" y="863.50"></text></g><g><title>intel_pmu_enable_all (18 samples, 0.02%)</title><rect x="0.0384%" y="837" width="0.0154%" height="15" fill="rgb(225,111,53)" fg:x="45" fg:w="18"/><text x="0.2884%" y="847.50"></text></g><g><title>native_write_msr (18 samples, 0.02%)</title><rect x="0.0384%" y="821" width="0.0154%" height="15" fill="rgb(238,160,17)" fg:x="45" fg:w="18"/><text x="0.2884%" y="831.50"></text></g><g><title>__schedule (20 samples, 0.02%)</title><rect x="0.0384%" y="917" width="0.0171%" height="15" fill="rgb(214,148,48)" fg:x="45" fg:w="20"/><text x="0.2884%" y="927.50"></text></g><g><title>iou-wrk-1098972 (21 samples, 0.02%)</title><rect x="0.0384%" y="1013" width="0.0179%" height="15" fill="rgb(232,36,49)" fg:x="45" fg:w="21"/><text x="0.2884%" y="1023.50"></text></g><g><title>ret_from_fork_asm (21 samples, 0.02%)</title><rect x="0.0384%" y="997" width="0.0179%" height="15" fill="rgb(209,103,24)" fg:x="45" fg:w="21"/><text x="0.2884%" y="1007.50"></text></g><g><title>ret_from_fork (21 samples, 0.02%)</title><rect x="0.0384%" y="981" width="0.0179%" height="15" fill="rgb(229,88,8)" fg:x="45" fg:w="21"/><text x="0.2884%" y="991.50"></text></g><g><title>io_wq_worker (21 samples, 0.02%)</title><rect x="0.0384%" y="965" width="0.0179%" height="15" fill="rgb(213,181,19)" fg:x="45" fg:w="21"/><text x="0.2884%" y="975.50"></text></g><g><title>schedule_timeout (21 samples, 0.02%)</title><rect x="0.0384%" y="949" width="0.0179%" height="15" fill="rgb(254,191,54)" fg:x="45" fg:w="21"/><text x="0.2884%" y="959.50"></text></g><g><title>schedule (21 samples, 0.02%)</title><rect x="0.0384%" y="933" width="0.0179%" height="15" fill="rgb(241,83,37)" fg:x="45" fg:w="21"/><text x="0.2884%" y="943.50"></text></g><g><title>node::StreamBase::Write (31 samples, 0.03%)</title><rect x="0.0879%" y="981" width="0.0264%" height="15" fill="rgb(233,36,39)" fg:x="103" fg:w="31"/><text x="0.3379%" y="991.50"></text></g><g><title>non-virtual thunk to node::LibuvStreamWrap::DoTryWrite (31 samples, 0.03%)</title><rect x="0.0879%" y="965" width="0.0264%" height="15" fill="rgb(226,3,54)" fg:x="103" fg:w="31"/><text x="0.3379%" y="975.50"></text></g><g><title>uv__try_write (31 samples, 0.03%)</title><rect x="0.0879%" y="949" width="0.0264%" height="15" fill="rgb(245,192,40)" fg:x="103" fg:w="31"/><text x="0.3379%" y="959.50"></text></g><g><title>__GI___writev (31 samples, 0.03%)</title><rect x="0.0879%" y="933" width="0.0264%" height="15" fill="rgb(238,167,29)" fg:x="103" fg:w="31"/><text x="0.3379%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (31 samples, 0.03%)</title><rect x="0.0879%" y="917" width="0.0264%" height="15" fill="rgb(232,182,51)" fg:x="103" fg:w="31"/><text x="0.3379%" y="927.50"></text></g><g><title>[[heap]] (92 samples, 0.08%)</title><rect x="0.0572%" y="997" width="0.0785%" height="15" fill="rgb(231,60,39)" fg:x="67" fg:w="92"/><text x="0.3072%" y="1007.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (19 samples, 0.02%)</title><rect x="0.5256%" y="981" width="0.0162%" height="15" fill="rgb(208,69,12)" fg:x="616" fg:w="19"/><text x="0.7756%" y="991.50"></text></g><g><title>v8::internal::SaveContext::SaveContext (15 samples, 0.01%)</title><rect x="0.7184%" y="981" width="0.0128%" height="15" fill="rgb(235,93,37)" fg:x="842" fg:w="15"/><text x="0.9684%" y="991.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AddFreshPage (12 samples, 0.01%)</title><rect x="0.7355%" y="981" width="0.0102%" height="15" fill="rgb(213,116,39)" fg:x="862" fg:w="12"/><text x="0.9855%" y="991.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EnsureAllocation (14 samples, 0.01%)</title><rect x="0.7466%" y="981" width="0.0119%" height="15" fill="rgb(222,207,29)" fg:x="875" fg:w="14"/><text x="0.9966%" y="991.50"></text></g><g><title>v8::platform::tracing::TracingController::GetCategoryGroupEnabled (23 samples, 0.02%)</title><rect x="0.7849%" y="981" width="0.0196%" height="15" fill="rgb(206,96,30)" fg:x="920" fg:w="23"/><text x="1.0349%" y="991.50"></text></g><g><title>void v8::internal::CopyChars&lt;unsigned char, unsigned char&gt; (102 samples, 0.09%)</title><rect x="0.8071%" y="981" width="0.0870%" height="15" fill="rgb(218,138,4)" fg:x="946" fg:w="102"/><text x="1.0571%" y="991.50"></text></g><g><title>[[stack]] (918 samples, 0.78%)</title><rect x="0.1357%" y="997" width="0.7832%" height="15" fill="rgb(250,191,14)" fg:x="159" fg:w="918"/><text x="0.3857%" y="1007.50"></text></g><g><title>v8::internal::EvacuationAllocator::AllocateInNewSpace (18 samples, 0.02%)</title><rect x="0.9377%" y="981" width="0.0154%" height="15" fill="rgb(239,60,40)" fg:x="1099" fg:w="18"/><text x="1.1877%" y="991.50"></text></g><g><title>[anon] (70 samples, 0.06%)</title><rect x="0.9189%" y="997" width="0.0597%" height="15" fill="rgb(206,27,48)" fg:x="1077" fg:w="70"/><text x="1.1689%" y="1007.50"></text></g><g><title>v8::internal::(anonymous namespace)::ProbeInstantiationsCache (14 samples, 0.01%)</title><rect x="51.8485%" y="901" width="0.0119%" height="15" fill="rgb(225,35,8)" fg:x="60769" fg:w="14"/><text x="52.0985%" y="911.50"></text></g><g><title>v8::internal::(anonymous namespace)::InstantiateObject (60 samples, 0.05%)</title><rect x="51.8365%" y="917" width="0.0512%" height="15" fill="rgb(250,213,24)" fg:x="60755" fg:w="60"/><text x="52.0865%" y="927.50"></text></g><g><title>v8::internal::Factory::CopyJSObjectWithAllocationSite (29 samples, 0.02%)</title><rect x="51.8630%" y="901" width="0.0247%" height="15" fill="rgb(247,123,22)" fg:x="60786" fg:w="29"/><text x="52.1130%" y="911.50"></text></g><g><title>v8::internal::ApiNatives::InstantiateObject (63 samples, 0.05%)</title><rect x="51.8348%" y="933" width="0.0538%" height="15" fill="rgb(231,138,38)" fg:x="60753" fg:w="63"/><text x="52.0848%" y="943.50"></text></g><g><title>node::IsConstructCallCallback (26 samples, 0.02%)</title><rect x="51.9022%" y="917" width="0.0222%" height="15" fill="rgb(231,145,46)" fg:x="60832" fg:w="26"/><text x="52.1522%" y="927.50"></text></g><g><title>v8::Object::SetAlignedPointerInInternalField (25 samples, 0.02%)</title><rect x="51.9031%" y="901" width="0.0213%" height="15" fill="rgb(251,118,11)" fg:x="60833" fg:w="25"/><text x="52.1531%" y="911.50"></text></g><g><title>v8::InternalFieldOK (16 samples, 0.01%)</title><rect x="51.9108%" y="885" width="0.0137%" height="15" fill="rgb(217,147,25)" fg:x="60842" fg:w="16"/><text x="52.1608%" y="895.50"></text></g><g><title>v8::internal::FunctionCallbackArguments::Call (51 samples, 0.04%)</title><rect x="51.8886%" y="933" width="0.0435%" height="15" fill="rgb(247,81,37)" fg:x="60816" fg:w="51"/><text x="52.1386%" y="943.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (163 samples, 0.14%)</title><rect x="51.7947%" y="981" width="0.1391%" height="15" fill="rgb(209,12,38)" fg:x="60706" fg:w="163"/><text x="52.0447%" y="991.50"></text></g><g><title>v8::internal::Builtin_HandleApiCall (156 samples, 0.13%)</title><rect x="51.8007%" y="965" width="0.1331%" height="15" fill="rgb(227,1,9)" fg:x="60713" fg:w="156"/><text x="52.0507%" y="975.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;true&gt; (138 samples, 0.12%)</title><rect x="51.8160%" y="949" width="0.1177%" height="15" fill="rgb(248,47,43)" fg:x="60731" fg:w="138"/><text x="52.0660%" y="959.50"></text></g><g><title>Builtins_CompileLazy (54 samples, 0.05%)</title><rect x="51.9346%" y="981" width="0.0461%" height="15" fill="rgb(221,10,30)" fg:x="60870" fg:w="54"/><text x="52.1846%" y="991.50"></text></g><g><title>__common_interrupt (28 samples, 0.02%)</title><rect x="52.0046%" y="949" width="0.0239%" height="15" fill="rgb(210,229,1)" fg:x="60952" fg:w="28"/><text x="52.2546%" y="959.50"></text></g><g><title>handle_edge_irq (28 samples, 0.02%)</title><rect x="52.0046%" y="933" width="0.0239%" height="15" fill="rgb(222,148,37)" fg:x="60952" fg:w="28"/><text x="52.2546%" y="943.50"></text></g><g><title>handle_irq_event (27 samples, 0.02%)</title><rect x="52.0055%" y="917" width="0.0230%" height="15" fill="rgb(234,67,33)" fg:x="60953" fg:w="27"/><text x="52.2555%" y="927.50"></text></g><g><title>__handle_irq_event_percpu (27 samples, 0.02%)</title><rect x="52.0055%" y="901" width="0.0230%" height="15" fill="rgb(247,98,35)" fg:x="60953" fg:w="27"/><text x="52.2555%" y="911.50"></text></g><g><title>xhci_msi_irq (27 samples, 0.02%)</title><rect x="52.0055%" y="885" width="0.0230%" height="15" fill="rgb(247,138,52)" fg:x="60953" fg:w="27"/><text x="52.2555%" y="895.50"></text></g><g><title>xhci_irq (25 samples, 0.02%)</title><rect x="52.0072%" y="869" width="0.0213%" height="15" fill="rgb(213,79,30)" fg:x="60955" fg:w="25"/><text x="52.2572%" y="879.50"></text></g><g><title>xhci_update_erst_dequeue (12 samples, 0.01%)</title><rect x="52.0183%" y="853" width="0.0102%" height="15" fill="rgb(246,177,23)" fg:x="60968" fg:w="12"/><text x="52.2683%" y="863.50"></text></g><g><title>blk_done_softirq (12 samples, 0.01%)</title><rect x="52.0294%" y="901" width="0.0102%" height="15" fill="rgb(230,62,27)" fg:x="60981" fg:w="12"/><text x="52.2794%" y="911.50"></text></g><g><title>blk_complete_reqs (12 samples, 0.01%)</title><rect x="52.0294%" y="885" width="0.0102%" height="15" fill="rgb(216,154,8)" fg:x="60981" fg:w="12"/><text x="52.2794%" y="895.50"></text></g><g><title>scsi_complete (12 samples, 0.01%)</title><rect x="52.0294%" y="869" width="0.0102%" height="15" fill="rgb(244,35,45)" fg:x="60981" fg:w="12"/><text x="52.2794%" y="879.50"></text></g><g><title>__do_softirq (22 samples, 0.02%)</title><rect x="52.0285%" y="917" width="0.0188%" height="15" fill="rgb(251,115,12)" fg:x="60980" fg:w="22"/><text x="52.2785%" y="927.50"></text></g><g><title>irq_exit_rcu (23 samples, 0.02%)</title><rect x="52.0285%" y="949" width="0.0196%" height="15" fill="rgb(240,54,50)" fg:x="60980" fg:w="23"/><text x="52.2785%" y="959.50"></text></g><g><title>__irq_exit_rcu (23 samples, 0.02%)</title><rect x="52.0285%" y="933" width="0.0196%" height="15" fill="rgb(233,84,52)" fg:x="60980" fg:w="23"/><text x="52.2785%" y="943.50"></text></g><g><title>asm_common_interrupt (54 samples, 0.05%)</title><rect x="52.0046%" y="981" width="0.0461%" height="15" fill="rgb(207,117,47)" fg:x="60952" fg:w="54"/><text x="52.2546%" y="991.50"></text></g><g><title>common_interrupt (54 samples, 0.05%)</title><rect x="52.0046%" y="965" width="0.0461%" height="15" fill="rgb(249,43,39)" fg:x="60952" fg:w="54"/><text x="52.2546%" y="975.50"></text></g><g><title>enqueue_hrtimer (12 samples, 0.01%)</title><rect x="52.0618%" y="901" width="0.0102%" height="15" fill="rgb(209,38,44)" fg:x="61019" fg:w="12"/><text x="52.3118%" y="911.50"></text></g><g><title>timekeeping_update (19 samples, 0.02%)</title><rect x="52.0925%" y="821" width="0.0162%" height="15" fill="rgb(236,212,23)" fg:x="61055" fg:w="19"/><text x="52.3425%" y="831.50"></text></g><g><title>tick_do_update_jiffies64 (38 samples, 0.03%)</title><rect x="52.0771%" y="869" width="0.0324%" height="15" fill="rgb(242,79,21)" fg:x="61037" fg:w="38"/><text x="52.3271%" y="879.50"></text></g><g><title>update_wall_time (37 samples, 0.03%)</title><rect x="52.0780%" y="853" width="0.0316%" height="15" fill="rgb(211,96,35)" fg:x="61038" fg:w="37"/><text x="52.3280%" y="863.50"></text></g><g><title>timekeeping_advance (32 samples, 0.03%)</title><rect x="52.0822%" y="837" width="0.0273%" height="15" fill="rgb(253,215,40)" fg:x="61043" fg:w="32"/><text x="52.3322%" y="847.50"></text></g><g><title>tick_sched_do_timer (42 samples, 0.04%)</title><rect x="52.0763%" y="885" width="0.0358%" height="15" fill="rgb(211,81,21)" fg:x="61036" fg:w="42"/><text x="52.3263%" y="895.50"></text></g><g><title>account_process_tick (15 samples, 0.01%)</title><rect x="52.1172%" y="853" width="0.0128%" height="15" fill="rgb(208,190,38)" fg:x="61084" fg:w="15"/><text x="52.3672%" y="863.50"></text></g><g><title>account_user_time (14 samples, 0.01%)</title><rect x="52.1181%" y="837" width="0.0119%" height="15" fill="rgb(235,213,38)" fg:x="61085" fg:w="14"/><text x="52.3681%" y="847.50"></text></g><g><title>perf_event_task_tick (67 samples, 0.06%)</title><rect x="52.1420%" y="837" width="0.0572%" height="15" fill="rgb(237,122,38)" fg:x="61113" fg:w="67"/><text x="52.3920%" y="847.50"></text></g><g><title>perf_adjust_freq_unthr_context (67 samples, 0.06%)</title><rect x="52.1420%" y="821" width="0.0572%" height="15" fill="rgb(244,218,35)" fg:x="61113" fg:w="67"/><text x="52.3920%" y="831.50"></text></g><g><title>update_load_avg (13 samples, 0.01%)</title><rect x="52.2102%" y="821" width="0.0111%" height="15" fill="rgb(240,68,47)" fg:x="61193" fg:w="13"/><text x="52.4602%" y="831.50"></text></g><g><title>task_tick_fair (27 samples, 0.02%)</title><rect x="52.2000%" y="837" width="0.0230%" height="15" fill="rgb(210,16,53)" fg:x="61181" fg:w="27"/><text x="52.4500%" y="847.50"></text></g><g><title>trigger_load_balance (12 samples, 0.01%)</title><rect x="52.2230%" y="837" width="0.0102%" height="15" fill="rgb(235,124,12)" fg:x="61208" fg:w="12"/><text x="52.4730%" y="847.50"></text></g><g><title>scheduler_tick (120 samples, 0.10%)</title><rect x="52.1343%" y="853" width="0.1024%" height="15" fill="rgb(224,169,11)" fg:x="61104" fg:w="120"/><text x="52.3843%" y="863.50"></text></g><g><title>__hrtimer_run_queues (210 samples, 0.18%)</title><rect x="52.0592%" y="917" width="0.1792%" height="15" fill="rgb(250,166,2)" fg:x="61016" fg:w="210"/><text x="52.3092%" y="927.50"></text></g><g><title>tick_sched_timer (194 samples, 0.17%)</title><rect x="52.0729%" y="901" width="0.1655%" height="15" fill="rgb(242,216,29)" fg:x="61032" fg:w="194"/><text x="52.3229%" y="911.50"></text></g><g><title>tick_sched_handle (148 samples, 0.13%)</title><rect x="52.1121%" y="885" width="0.1263%" height="15" fill="rgb(230,116,27)" fg:x="61078" fg:w="148"/><text x="52.3621%" y="895.50"></text></g><g><title>update_process_times (142 samples, 0.12%)</title><rect x="52.1172%" y="869" width="0.1212%" height="15" fill="rgb(228,99,48)" fg:x="61084" fg:w="142"/><text x="52.3672%" y="879.50"></text></g><g><title>__sysvec_apic_timer_interrupt (225 samples, 0.19%)</title><rect x="52.0541%" y="949" width="0.1920%" height="15" fill="rgb(253,11,6)" fg:x="61010" fg:w="225"/><text x="52.3041%" y="959.50"></text></g><g><title>hrtimer_interrupt (223 samples, 0.19%)</title><rect x="52.0558%" y="933" width="0.1903%" height="15" fill="rgb(247,143,39)" fg:x="61012" fg:w="223"/><text x="52.3058%" y="943.50"></text></g><g><title>irq_exit_rcu (15 samples, 0.01%)</title><rect x="52.2461%" y="949" width="0.0128%" height="15" fill="rgb(236,97,10)" fg:x="61235" fg:w="15"/><text x="52.4961%" y="959.50"></text></g><g><title>__irq_exit_rcu (14 samples, 0.01%)</title><rect x="52.2469%" y="933" width="0.0119%" height="15" fill="rgb(233,208,19)" fg:x="61236" fg:w="14"/><text x="52.4969%" y="943.50"></text></g><g><title>exit_to_user_mode_loop (14 samples, 0.01%)</title><rect x="52.2640%" y="901" width="0.0119%" height="15" fill="rgb(216,164,2)" fg:x="61256" fg:w="14"/><text x="52.5140%" y="911.50"></text></g><g><title>schedule (14 samples, 0.01%)</title><rect x="52.2640%" y="885" width="0.0119%" height="15" fill="rgb(220,129,5)" fg:x="61256" fg:w="14"/><text x="52.5140%" y="895.50"></text></g><g><title>__schedule (14 samples, 0.01%)</title><rect x="52.2640%" y="869" width="0.0119%" height="15" fill="rgb(242,17,10)" fg:x="61256" fg:w="14"/><text x="52.5140%" y="879.50"></text></g><g><title>finish_task_switch.isra.0 (14 samples, 0.01%)</title><rect x="52.2640%" y="853" width="0.0119%" height="15" fill="rgb(242,107,0)" fg:x="61256" fg:w="14"/><text x="52.5140%" y="863.50"></text></g><g><title>__perf_event_task_sched_in (14 samples, 0.01%)</title><rect x="52.2640%" y="837" width="0.0119%" height="15" fill="rgb(251,28,31)" fg:x="61256" fg:w="14"/><text x="52.5140%" y="847.50"></text></g><g><title>perf_ctx_enable (14 samples, 0.01%)</title><rect x="52.2640%" y="821" width="0.0119%" height="15" fill="rgb(233,223,10)" fg:x="61256" fg:w="14"/><text x="52.5140%" y="831.50"></text></g><g><title>x86_pmu_enable (14 samples, 0.01%)</title><rect x="52.2640%" y="805" width="0.0119%" height="15" fill="rgb(215,21,27)" fg:x="61256" fg:w="14"/><text x="52.5140%" y="815.50"></text></g><g><title>intel_pmu_enable_all (14 samples, 0.01%)</title><rect x="52.2640%" y="789" width="0.0119%" height="15" fill="rgb(232,23,21)" fg:x="61256" fg:w="14"/><text x="52.5140%" y="799.50"></text></g><g><title>native_write_msr (14 samples, 0.01%)</title><rect x="52.2640%" y="773" width="0.0119%" height="15" fill="rgb(244,5,23)" fg:x="61256" fg:w="14"/><text x="52.5140%" y="783.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (265 samples, 0.23%)</title><rect x="52.0507%" y="981" width="0.2261%" height="15" fill="rgb(226,81,46)" fg:x="61006" fg:w="265"/><text x="52.3007%" y="991.50"></text></g><g><title>sysvec_apic_timer_interrupt (263 samples, 0.22%)</title><rect x="52.0524%" y="965" width="0.2244%" height="15" fill="rgb(247,70,30)" fg:x="61008" fg:w="263"/><text x="52.3024%" y="975.50"></text></g><g><title>irqentry_exit (21 samples, 0.02%)</title><rect x="52.2589%" y="949" width="0.0179%" height="15" fill="rgb(212,68,19)" fg:x="61250" fg:w="21"/><text x="52.5089%" y="959.50"></text></g><g><title>irqentry_exit_to_user_mode (21 samples, 0.02%)</title><rect x="52.2589%" y="933" width="0.0179%" height="15" fill="rgb(240,187,13)" fg:x="61250" fg:w="21"/><text x="52.5089%" y="943.50"></text></g><g><title>exit_to_user_mode_prepare (15 samples, 0.01%)</title><rect x="52.2640%" y="917" width="0.0128%" height="15" fill="rgb(223,113,26)" fg:x="61256" fg:w="15"/><text x="52.5140%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.01%)</title><rect x="52.2836%" y="981" width="0.0102%" height="15" fill="rgb(206,192,2)" fg:x="61279" fg:w="12"/><text x="52.5336%" y="991.50"></text></g><g><title>__sysvec_apic_timer_interrupt (18 samples, 0.02%)</title><rect x="57.8115%" y="917" width="0.0154%" height="15" fill="rgb(241,108,4)" fg:x="67758" fg:w="18"/><text x="58.0615%" y="927.50"></text></g><g><title>hrtimer_interrupt (18 samples, 0.02%)</title><rect x="57.8115%" y="901" width="0.0154%" height="15" fill="rgb(247,173,49)" fg:x="67758" fg:w="18"/><text x="58.0615%" y="911.50"></text></g><g><title>__hrtimer_run_queues (18 samples, 0.02%)</title><rect x="57.8115%" y="885" width="0.0154%" height="15" fill="rgb(224,114,35)" fg:x="67758" fg:w="18"/><text x="58.0615%" y="895.50"></text></g><g><title>tick_sched_timer (17 samples, 0.01%)</title><rect x="57.8124%" y="869" width="0.0145%" height="15" fill="rgb(245,159,27)" fg:x="67759" fg:w="17"/><text x="58.0624%" y="879.50"></text></g><g><title>tick_sched_handle (12 samples, 0.01%)</title><rect x="57.8166%" y="853" width="0.0102%" height="15" fill="rgb(245,172,44)" fg:x="67764" fg:w="12"/><text x="58.0666%" y="863.50"></text></g><g><title>update_process_times (12 samples, 0.01%)</title><rect x="57.8166%" y="837" width="0.0102%" height="15" fill="rgb(236,23,11)" fg:x="67764" fg:w="12"/><text x="58.0666%" y="847.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (20 samples, 0.02%)</title><rect x="57.8115%" y="949" width="0.0171%" height="15" fill="rgb(205,117,38)" fg:x="67758" fg:w="20"/><text x="58.0615%" y="959.50"></text></g><g><title>sysvec_apic_timer_interrupt (20 samples, 0.02%)</title><rect x="57.8115%" y="933" width="0.0171%" height="15" fill="rgb(237,72,25)" fg:x="67758" fg:w="20"/><text x="58.0615%" y="943.50"></text></g><g><title>__GI___printf_fp_l (19 samples, 0.02%)</title><rect x="57.9079%" y="741" width="0.0162%" height="15" fill="rgb(244,70,9)" fg:x="67871" fg:w="19"/><text x="58.1579%" y="751.50"></text></g><g><title>v8::internal::GCTracer::UpdateStatistics (38 samples, 0.03%)</title><rect x="57.8968%" y="837" width="0.0324%" height="15" fill="rgb(217,125,39)" fg:x="67858" fg:w="38"/><text x="58.1468%" y="847.50"></text></g><g><title>v8::internal::GCTracer::Print (38 samples, 0.03%)</title><rect x="57.8968%" y="821" width="0.0324%" height="15" fill="rgb(235,36,10)" fg:x="67858" fg:w="38"/><text x="58.1468%" y="831.50"></text></g><g><title>v8::internal::GCTracer::Output (35 samples, 0.03%)</title><rect x="57.8994%" y="805" width="0.0299%" height="15" fill="rgb(251,123,47)" fg:x="67861" fg:w="35"/><text x="58.1494%" y="815.50"></text></g><g><title>v8::base::OS::VSNPrintF (35 samples, 0.03%)</title><rect x="57.8994%" y="789" width="0.0299%" height="15" fill="rgb(221,13,13)" fg:x="67861" fg:w="35"/><text x="58.1494%" y="799.50"></text></g><g><title>__vsnprintf_internal (34 samples, 0.03%)</title><rect x="57.9003%" y="773" width="0.0290%" height="15" fill="rgb(238,131,9)" fg:x="67862" fg:w="34"/><text x="58.1503%" y="783.50"></text></g><g><title>__vfprintf_internal (33 samples, 0.03%)</title><rect x="57.9011%" y="757" width="0.0282%" height="15" fill="rgb(211,50,8)" fg:x="67863" fg:w="33"/><text x="58.1511%" y="767.50"></text></g><g><title>v8::internal::Heap::NewSpaceAllocationCounter (33 samples, 0.03%)</title><rect x="57.9395%" y="805" width="0.0282%" height="15" fill="rgb(245,182,24)" fg:x="67908" fg:w="33"/><text x="58.1895%" y="815.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AllocatedSinceLastGC (33 samples, 0.03%)</title><rect x="57.9395%" y="789" width="0.0282%" height="15" fill="rgb(242,14,37)" fg:x="67908" fg:w="33"/><text x="58.1895%" y="799.50"></text></g><g><title>v8::internal::GCTracer::StartInSafepoint (34 samples, 0.03%)</title><rect x="57.9395%" y="821" width="0.0290%" height="15" fill="rgb(246,228,12)" fg:x="67908" fg:w="34"/><text x="58.1895%" y="831.50"></text></g><g><title>v8::internal::(anonymous namespace)::IterateObjectCache (123 samples, 0.10%)</title><rect x="58.0521%" y="773" width="0.1049%" height="15" fill="rgb(213,55,15)" fg:x="68040" fg:w="123"/><text x="58.3021%" y="783.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (39 samples, 0.03%)</title><rect x="58.1238%" y="757" width="0.0333%" height="15" fill="rgb(209,9,3)" fg:x="68124" fg:w="39"/><text x="58.3738%" y="767.50"></text></g><g><title>v8::internal::Isolate::Iterate (23 samples, 0.02%)</title><rect x="58.1613%" y="773" width="0.0196%" height="15" fill="rgb(230,59,30)" fg:x="68168" fg:w="23"/><text x="58.4113%" y="783.50"></text></g><g><title>v8::internal::Heap::IterateRoots (154 samples, 0.13%)</title><rect x="58.0521%" y="789" width="0.1314%" height="15" fill="rgb(209,121,21)" fg:x="68040" fg:w="154"/><text x="58.3021%" y="799.50"></text></g><g><title>operator new (14 samples, 0.01%)</title><rect x="58.1963%" y="757" width="0.0119%" height="15" fill="rgb(220,109,13)" fg:x="68209" fg:w="14"/><text x="58.4463%" y="767.50"></text></g><g><title>malloc (14 samples, 0.01%)</title><rect x="58.1963%" y="741" width="0.0119%" height="15" fill="rgb(232,18,1)" fg:x="68209" fg:w="14"/><text x="58.4463%" y="751.50"></text></g><g><title>v8::internal::FreeList::CreateFreeList (18 samples, 0.02%)</title><rect x="58.1963%" y="773" width="0.0154%" height="15" fill="rgb(215,41,42)" fg:x="68209" fg:w="18"/><text x="58.4463%" y="783.50"></text></g><g><title>v8::internal::Scavenger::Scavenger (32 samples, 0.03%)</title><rect x="58.1904%" y="789" width="0.0273%" height="15" fill="rgb(224,123,36)" fg:x="68202" fg:w="32"/><text x="58.4404%" y="799.50"></text></g><g><title>v8::internal::Scavenger::~Scavenger (15 samples, 0.01%)</title><rect x="58.2177%" y="789" width="0.0128%" height="15" fill="rgb(240,125,3)" fg:x="68234" fg:w="15"/><text x="58.4677%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="58.2381%" y="693" width="0.0128%" height="15" fill="rgb(205,98,50)" fg:x="68258" fg:w="15"/><text x="58.4881%" y="703.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="58.2390%" y="677" width="0.0119%" height="15" fill="rgb(205,185,37)" fg:x="68259" fg:w="14"/><text x="58.4890%" y="687.50"></text></g><g><title>node::NodePlatform::CallOnWorkerThread (21 samples, 0.02%)</title><rect x="58.2364%" y="757" width="0.0179%" height="15" fill="rgb(238,207,15)" fg:x="68256" fg:w="21"/><text x="58.4864%" y="767.50"></text></g><g><title>node::TaskQueue&lt;v8::Task&gt;::Push (21 samples, 0.02%)</title><rect x="58.2364%" y="741" width="0.0179%" height="15" fill="rgb(213,199,42)" fg:x="68256" fg:w="21"/><text x="58.4864%" y="751.50"></text></g><g><title>uv_cond_signal (21 samples, 0.02%)</title><rect x="58.2364%" y="725" width="0.0179%" height="15" fill="rgb(235,201,11)" fg:x="68256" fg:w="21"/><text x="58.4864%" y="735.50"></text></g><g><title>pthread_cond_signal@@GLIBC_2.3.2 (21 samples, 0.02%)</title><rect x="58.2364%" y="709" width="0.0179%" height="15" fill="rgb(207,46,11)" fg:x="68256" fg:w="21"/><text x="58.4864%" y="719.50"></text></g><g><title>futex_wait_queue (26 samples, 0.02%)</title><rect x="58.2603%" y="645" width="0.0222%" height="15" fill="rgb(241,35,35)" fg:x="68284" fg:w="26"/><text x="58.5103%" y="655.50"></text></g><g><title>schedule (25 samples, 0.02%)</title><rect x="58.2612%" y="629" width="0.0213%" height="15" fill="rgb(243,32,47)" fg:x="68285" fg:w="25"/><text x="58.5112%" y="639.50"></text></g><g><title>__schedule (25 samples, 0.02%)</title><rect x="58.2612%" y="613" width="0.0213%" height="15" fill="rgb(247,202,23)" fg:x="68285" fg:w="25"/><text x="58.5112%" y="623.50"></text></g><g><title>__x64_sys_futex (29 samples, 0.02%)</title><rect x="58.2586%" y="693" width="0.0247%" height="15" fill="rgb(219,102,11)" fg:x="68282" fg:w="29"/><text x="58.5086%" y="703.50"></text></g><g><title>do_futex (29 samples, 0.02%)</title><rect x="58.2586%" y="677" width="0.0247%" height="15" fill="rgb(243,110,44)" fg:x="68282" fg:w="29"/><text x="58.5086%" y="687.50"></text></g><g><title>futex_wait (28 samples, 0.02%)</title><rect x="58.2595%" y="661" width="0.0239%" height="15" fill="rgb(222,74,54)" fg:x="68283" fg:w="28"/><text x="58.5095%" y="671.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (32 samples, 0.03%)</title><rect x="58.2578%" y="741" width="0.0273%" height="15" fill="rgb(216,99,12)" fg:x="68281" fg:w="32"/><text x="58.5078%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.03%)</title><rect x="58.2586%" y="725" width="0.0264%" height="15" fill="rgb(226,22,26)" fg:x="68282" fg:w="31"/><text x="58.5086%" y="735.50"></text></g><g><title>do_syscall_64 (31 samples, 0.03%)</title><rect x="58.2586%" y="709" width="0.0264%" height="15" fill="rgb(217,163,10)" fg:x="68282" fg:w="31"/><text x="58.5086%" y="719.50"></text></g><g><title>pthread_cond_wait@@GLIBC_2.3.2 (34 samples, 0.03%)</title><rect x="58.2569%" y="757" width="0.0290%" height="15" fill="rgb(213,25,53)" fg:x="68280" fg:w="34"/><text x="58.5069%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (284 samples, 0.24%)</title><rect x="58.3729%" y="677" width="0.2423%" height="15" fill="rgb(252,105,26)" fg:x="68416" fg:w="284"/><text x="58.6229%" y="687.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateShortcutCandidate&lt;v8::internal::FullHeapObjectSlot&gt; (308 samples, 0.26%)</title><rect x="58.3567%" y="693" width="0.2628%" height="15" fill="rgb(220,39,43)" fg:x="68397" fg:w="308"/><text x="58.6067%" y="703.50"></text></g><g><title>v8::internal::Scavenger::Process (411 samples, 0.35%)</title><rect x="58.2885%" y="741" width="0.3507%" height="15" fill="rgb(229,68,48)" fg:x="68317" fg:w="411"/><text x="58.5385%" y="751.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (389 samples, 0.33%)</title><rect x="58.3072%" y="725" width="0.3319%" height="15" fill="rgb(252,8,32)" fg:x="68339" fg:w="389"/><text x="58.5572%" y="735.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (372 samples, 0.32%)</title><rect x="58.3217%" y="709" width="0.3174%" height="15" fill="rgb(223,20,43)" fg:x="68356" fg:w="372"/><text x="58.5717%" y="719.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (16 samples, 0.01%)</title><rect x="58.6673%" y="709" width="0.0137%" height="15" fill="rgb(229,81,49)" fg:x="68761" fg:w="16"/><text x="58.9173%" y="719.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (465 samples, 0.40%)</title><rect x="58.2868%" y="757" width="0.3967%" height="15" fill="rgb(236,28,36)" fg:x="68315" fg:w="465"/><text x="58.5368%" y="767.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ConcurrentScavengePages (52 samples, 0.04%)</title><rect x="58.6391%" y="741" width="0.0444%" height="15" fill="rgb(249,185,26)" fg:x="68728" fg:w="52"/><text x="58.8891%" y="751.50"></text></g><g><title>v8::internal::Scavenger::ScavengePage (52 samples, 0.04%)</title><rect x="58.6391%" y="725" width="0.0444%" height="15" fill="rgb(249,174,33)" fg:x="68728" fg:w="52"/><text x="58.8891%" y="735.50"></text></g><g><title>v8::platform::DefaultJobState::Join (526 samples, 0.45%)</title><rect x="58.2356%" y="773" width="0.4488%" height="15" fill="rgb(233,201,37)" fg:x="68255" fg:w="526"/><text x="58.4856%" y="783.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (532 samples, 0.45%)</title><rect x="58.2339%" y="789" width="0.4539%" height="15" fill="rgb(221,78,26)" fg:x="68253" fg:w="532"/><text x="58.4839%" y="799.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (830 samples, 0.71%)</title><rect x="57.9839%" y="805" width="0.7082%" height="15" fill="rgb(250,127,30)" fg:x="67960" fg:w="830"/><text x="58.2339%" y="815.50"></text></g><g><title>v8::internal::Heap::Scavenge (951 samples, 0.81%)</title><rect x="57.9813%" y="821" width="0.8114%" height="15" fill="rgb(230,49,44)" fg:x="67957" fg:w="951"/><text x="58.2313%" y="831.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EvacuatePrologue (118 samples, 0.10%)</title><rect x="58.6920%" y="805" width="0.1007%" height="15" fill="rgb(229,67,23)" fg:x="68790" fg:w="118"/><text x="58.9420%" y="815.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1,008 samples, 0.86%)</title><rect x="57.9378%" y="837" width="0.8600%" height="15" fill="rgb(249,83,47)" fg:x="67906" fg:w="1008"/><text x="58.1878%" y="847.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1,065 samples, 0.91%)</title><rect x="57.8900%" y="853" width="0.9087%" height="15" fill="rgb(215,43,3)" fg:x="67850" fg:w="1065"/><text x="58.1400%" y="863.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1,067 samples, 0.91%)</title><rect x="57.8900%" y="885" width="0.9104%" height="15" fill="rgb(238,154,13)" fg:x="67850" fg:w="1067"/><text x="58.1400%" y="895.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1,067 samples, 0.91%)</title><rect x="57.8900%" y="869" width="0.9104%" height="15" fill="rgb(219,56,2)" fg:x="67850" fg:w="1067"/><text x="58.1400%" y="879.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (1,117 samples, 0.95%)</title><rect x="57.8482%" y="933" width="0.9530%" height="15" fill="rgb(233,0,4)" fg:x="67801" fg:w="1117"/><text x="58.0982%" y="943.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1,085 samples, 0.93%)</title><rect x="57.8755%" y="917" width="0.9257%" height="15" fill="rgb(235,30,7)" fg:x="67833" fg:w="1085"/><text x="58.1255%" y="927.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1,085 samples, 0.93%)</title><rect x="57.8755%" y="901" width="0.9257%" height="15" fill="rgb(250,79,13)" fg:x="67833" fg:w="1085"/><text x="58.1255%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (567 samples, 0.48%)</title><rect x="60.9488%" y="901" width="0.4838%" height="15" fill="rgb(211,146,34)" fg:x="71435" fg:w="567"/><text x="61.1988%" y="911.50"></text></g><g><title>memmove@plt (124 samples, 0.11%)</title><rect x="61.4428%" y="901" width="0.1058%" height="15" fill="rgb(228,22,38)" fg:x="72014" fg:w="124"/><text x="61.6928%" y="911.50"></text></g><g><title>void v8::internal::CopyChars&lt;unsigned char, unsigned char&gt; (339 samples, 0.29%)</title><rect x="61.5486%" y="901" width="0.2892%" height="15" fill="rgb(235,168,5)" fg:x="72138" fg:w="339"/><text x="61.7986%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,087 samples, 1.78%)</title><rect x="69.8144%" y="885" width="1.7806%" height="15" fill="rgb(221,155,16)" fg:x="81826" fg:w="2087"/><text x="70.0644%" y="895.50">_..</text></g><g><title>tick_sched_handle (17 samples, 0.01%)</title><rect x="71.6121%" y="789" width="0.0145%" height="15" fill="rgb(215,215,53)" fg:x="83933" fg:w="17"/><text x="71.8621%" y="799.50"></text></g><g><title>update_process_times (17 samples, 0.01%)</title><rect x="71.6121%" y="773" width="0.0145%" height="15" fill="rgb(223,4,10)" fg:x="83933" fg:w="17"/><text x="71.8621%" y="783.50"></text></g><g><title>scheduler_tick (14 samples, 0.01%)</title><rect x="71.6147%" y="757" width="0.0119%" height="15" fill="rgb(234,103,6)" fg:x="83936" fg:w="14"/><text x="71.8647%" y="767.50"></text></g><g><title>__sysvec_apic_timer_interrupt (27 samples, 0.02%)</title><rect x="71.6045%" y="853" width="0.0230%" height="15" fill="rgb(227,97,0)" fg:x="83924" fg:w="27"/><text x="71.8545%" y="863.50"></text></g><g><title>hrtimer_interrupt (27 samples, 0.02%)</title><rect x="71.6045%" y="837" width="0.0230%" height="15" fill="rgb(234,150,53)" fg:x="83924" fg:w="27"/><text x="71.8545%" y="847.50"></text></g><g><title>__hrtimer_run_queues (26 samples, 0.02%)</title><rect x="71.6053%" y="821" width="0.0222%" height="15" fill="rgb(228,201,54)" fg:x="83925" fg:w="26"/><text x="71.8553%" y="831.50"></text></g><g><title>tick_sched_timer (24 samples, 0.02%)</title><rect x="71.6070%" y="805" width="0.0205%" height="15" fill="rgb(222,22,37)" fg:x="83927" fg:w="24"/><text x="71.8570%" y="815.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (32 samples, 0.03%)</title><rect x="71.6027%" y="885" width="0.0273%" height="15" fill="rgb(237,53,32)" fg:x="83922" fg:w="32"/><text x="71.8527%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (31 samples, 0.03%)</title><rect x="71.6036%" y="869" width="0.0264%" height="15" fill="rgb(233,25,53)" fg:x="83923" fg:w="31"/><text x="71.8536%" y="879.50"></text></g><g><title>memmove@plt (368 samples, 0.31%)</title><rect x="71.6300%" y="885" width="0.3140%" height="15" fill="rgb(210,40,34)" fg:x="83954" fg:w="368"/><text x="71.8800%" y="895.50"></text></g><g><title>void v8::internal::CopyChars&lt;unsigned char, unsigned char&gt; (1,369 samples, 1.17%)</title><rect x="71.9440%" y="885" width="1.1680%" height="15" fill="rgb(241,220,44)" fg:x="84322" fg:w="1369"/><text x="72.1940%" y="895.50"></text></g><g><title>v8::internal::String::SlowFlatten (19,349 samples, 16.51%)</title><rect x="57.8294%" y="949" width="16.5087%" height="15" fill="rgb(235,28,35)" fg:x="67779" fg:w="19349"/><text x="58.0794%" y="959.50">v8::internal::String::Slo..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (18,199 samples, 15.53%)</title><rect x="58.8106%" y="933" width="15.5275%" height="15" fill="rgb(210,56,17)" fg:x="68929" fg:w="18199"/><text x="59.0606%" y="943.50">void v8::internal::Strin..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (18,195 samples, 15.52%)</title><rect x="58.8140%" y="917" width="15.5241%" height="15" fill="rgb(224,130,29)" fg:x="68933" fg:w="18195"/><text x="59.0640%" y="927.50">void v8::internal::Strin..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (14,651 samples, 12.50%)</title><rect x="61.8378%" y="901" width="12.5003%" height="15" fill="rgb(235,212,8)" fg:x="72477" fg:w="14651"/><text x="62.0878%" y="911.50">void v8::internal::..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (1,437 samples, 1.23%)</title><rect x="73.1121%" y="885" width="1.2261%" height="15" fill="rgb(223,33,50)" fg:x="85691" fg:w="1437"/><text x="73.3621%" y="895.50"></text></g><g><title>node::Buffer::(anonymous namespace)::SlowByteLengthUtf8 (25,822 samples, 22.03%)</title><rect x="52.3075%" y="981" width="22.0315%" height="15" fill="rgb(219,149,13)" fg:x="61307" fg:w="25822"/><text x="52.5575%" y="991.50">node::Buffer::(anonymous namespace)..</text></g><g><title>v8::String::Utf8Length (25,800 samples, 22.01%)</title><rect x="52.3263%" y="965" width="22.0127%" height="15" fill="rgb(250,156,29)" fg:x="61329" fg:w="25800"/><text x="52.5763%" y="975.50">v8::String::Utf8Length</text></g><g><title>node::task_queue::RunMicrotasks (47 samples, 0.04%)</title><rect x="74.3398%" y="981" width="0.0401%" height="15" fill="rgb(216,193,19)" fg:x="87130" fg:w="47"/><text x="74.5898%" y="991.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (24 samples, 0.02%)</title><rect x="74.4217%" y="917" width="0.0205%" height="15" fill="rgb(216,135,14)" fg:x="87226" fg:w="24"/><text x="74.6717%" y="927.50"></text></g><g><title>node::timers::BindingData::FastGetLibuvNow (74 samples, 0.06%)</title><rect x="74.3799%" y="981" width="0.0631%" height="15" fill="rgb(241,47,5)" fg:x="87177" fg:w="74"/><text x="74.6299%" y="991.50"></text></g><g><title>node::Environment::GetNowUint64 (51 samples, 0.04%)</title><rect x="74.3996%" y="965" width="0.0435%" height="15" fill="rgb(233,42,35)" fg:x="87200" fg:w="51"/><text x="74.6496%" y="975.50"></text></g><g><title>uv_update_time (30 samples, 0.03%)</title><rect x="74.4175%" y="949" width="0.0256%" height="15" fill="rgb(231,13,6)" fg:x="87221" fg:w="30"/><text x="74.6675%" y="959.50"></text></g><g><title>uv__hrtime (28 samples, 0.02%)</title><rect x="74.4192%" y="933" width="0.0239%" height="15" fill="rgb(207,181,40)" fg:x="87223" fg:w="28"/><text x="74.6692%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.01%)</title><rect x="74.4874%" y="965" width="0.0145%" height="15" fill="rgb(254,173,49)" fg:x="87303" fg:w="17"/><text x="74.7374%" y="975.50"></text></g><g><title>v8::internal::tracing::TraceEventHelper::GetTracingController (18 samples, 0.02%)</title><rect x="74.5164%" y="965" width="0.0154%" height="15" fill="rgb(221,1,38)" fg:x="87337" fg:w="18"/><text x="74.7664%" y="975.50"></text></g><g><title>v8::internal::V8::GetCurrentPlatform (17 samples, 0.01%)</title><rect x="74.5173%" y="949" width="0.0145%" height="15" fill="rgb(206,124,46)" fg:x="87338" fg:w="17"/><text x="74.7673%" y="959.50"></text></g><g><title>__strcmp_avx2 (164 samples, 0.14%)</title><rect x="74.5540%" y="949" width="0.1399%" height="15" fill="rgb(249,21,11)" fg:x="87381" fg:w="164"/><text x="74.8040%" y="959.50"></text></g><g><title>v8::internal::Builtin_IsTraceCategoryEnabled (303 samples, 0.26%)</title><rect x="74.4448%" y="981" width="0.2585%" height="15" fill="rgb(222,201,40)" fg:x="87253" fg:w="303"/><text x="74.6948%" y="991.50"></text></g><g><title>v8::platform::tracing::TracingController::GetCategoryGroupEnabled (201 samples, 0.17%)</title><rect x="74.5318%" y="965" width="0.1715%" height="15" fill="rgb(235,61,29)" fg:x="87355" fg:w="201"/><text x="74.7818%" y="975.50"></text></g><g><title>v8::internal::AllocationCounter::InvokeAllocationObservers (25 samples, 0.02%)</title><rect x="74.7929%" y="949" width="0.0213%" height="15" fill="rgb(219,207,3)" fg:x="87661" fg:w="25"/><text x="75.0429%" y="959.50"></text></g><g><title>v8::internal::ScheduleMinorGCTaskObserver::Step (23 samples, 0.02%)</title><rect x="74.7946%" y="933" width="0.0196%" height="15" fill="rgb(222,56,46)" fg:x="87663" fg:w="23"/><text x="75.0446%" y="943.50"></text></g><g><title>v8::internal::MinorGCJob::ScheduleTaskIfNeeded (22 samples, 0.02%)</title><rect x="74.7954%" y="917" width="0.0188%" height="15" fill="rgb(239,76,54)" fg:x="87664" fg:w="22"/><text x="75.0454%" y="927.50"></text></g><g><title>pthread_rwlock_unlock@@GLIBC_2.34 (14 samples, 0.01%)</title><rect x="74.8415%" y="933" width="0.0119%" height="15" fill="rgb(231,124,27)" fg:x="87718" fg:w="14"/><text x="75.0915%" y="943.50"></text></g><g><title>heap::base::ActiveSystemPages::Add (23 samples, 0.02%)</title><rect x="74.9883%" y="901" width="0.0196%" height="15" fill="rgb(249,195,6)" fg:x="87890" fg:w="23"/><text x="75.2383%" y="911.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AddFreshPage (185 samples, 0.16%)</title><rect x="74.8620%" y="933" width="0.1578%" height="15" fill="rgb(237,174,47)" fg:x="87742" fg:w="185"/><text x="75.1120%" y="943.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::UpdateLinearAllocationArea (161 samples, 0.14%)</title><rect x="74.8825%" y="917" width="0.1374%" height="15" fill="rgb(206,201,31)" fg:x="87766" fg:w="161"/><text x="75.1325%" y="927.50"></text></g><g><title>pthread_rwlock_wrlock@@GLIBC_2.34 (12 samples, 0.01%)</title><rect x="75.0352%" y="917" width="0.0102%" height="15" fill="rgb(231,57,52)" fg:x="87945" fg:w="12"/><text x="75.2852%" y="927.50"></text></g><g><title>v8::internal::SpaceWithLinearArea::AdvanceAllocationObservers (34 samples, 0.03%)</title><rect x="75.0258%" y="933" width="0.0290%" height="15" fill="rgb(248,177,22)" fg:x="87934" fg:w="34"/><text x="75.2758%" y="943.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EnsureAllocation (277 samples, 0.24%)</title><rect x="74.8219%" y="949" width="0.2363%" height="15" fill="rgb(215,211,37)" fg:x="87695" fg:w="277"/><text x="75.0719%" y="959.50"></text></g><g><title>v8::internal::Runtime_AllocateInYoungGeneration (375 samples, 0.32%)</title><rect x="74.7391%" y="981" width="0.3200%" height="15" fill="rgb(241,128,51)" fg:x="87598" fg:w="375"/><text x="74.9891%" y="991.50"></text></g><g><title>v8::internal::Factory::NewFillerObject (353 samples, 0.30%)</title><rect x="74.7579%" y="965" width="0.3012%" height="15" fill="rgb(227,165,31)" fg:x="87620" fg:w="353"/><text x="75.0079%" y="975.50"></text></g><g><title>v8::internal::Factory::TryNewFixedArray (25 samples, 0.02%)</title><rect x="75.1162%" y="917" width="0.0213%" height="15" fill="rgb(228,167,24)" fg:x="88040" fg:w="25"/><text x="75.3662%" y="927.50"></text></g><g><title>void v8::internal::Heap::CopyRange&lt;v8::internal::FullObjectSlot&gt; (22 samples, 0.02%)</title><rect x="75.1401%" y="917" width="0.0188%" height="15" fill="rgb(228,143,12)" fg:x="88068" fg:w="22"/><text x="75.3901%" y="927.50"></text></g><g><title>v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyNonextensibleObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)7&gt; &gt;::PrependElementIndices (70 samples, 0.06%)</title><rect x="75.1017%" y="933" width="0.0597%" height="15" fill="rgb(249,149,8)" fg:x="88023" fg:w="70"/><text x="75.3517%" y="943.50"></text></g><g><title>v8::internal::Dictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::NumberOfEnumerableProperties (24 samples, 0.02%)</title><rect x="75.2016%" y="917" width="0.0205%" height="15" fill="rgb(243,35,44)" fg:x="88140" fg:w="24"/><text x="75.4516%" y="927.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (17 samples, 0.01%)</title><rect x="75.2238%" y="917" width="0.0145%" height="15" fill="rgb(246,89,9)" fg:x="88166" fg:w="17"/><text x="75.4738%" y="927.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawArray (14 samples, 0.01%)</title><rect x="75.2263%" y="901" width="0.0119%" height="15" fill="rgb(233,213,13)" fg:x="88169" fg:w="14"/><text x="75.4763%" y="911.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (14 samples, 0.01%)</title><rect x="75.2263%" y="885" width="0.0119%" height="15" fill="rgb(233,141,41)" fg:x="88169" fg:w="14"/><text x="75.4763%" y="895.50"></text></g><g><title>v8::internal::Handle&lt;v8::internal::FixedArray&gt; v8::internal::(anonymous namespace)::GetOwnEnumPropertyDictionaryKeys&lt;v8::internal::NameDictionary&gt; (98 samples, 0.08%)</title><rect x="75.1615%" y="933" width="0.0836%" height="15" fill="rgb(239,167,4)" fg:x="88093" fg:w="98"/><text x="75.4115%" y="943.50"></text></g><g><title>v8::internal::FastKeyAccumulator::GetKeys (208 samples, 0.18%)</title><rect x="75.0719%" y="965" width="0.1775%" height="15" fill="rgb(209,217,16)" fg:x="87988" fg:w="208"/><text x="75.3219%" y="975.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::FixedArray&gt; v8::internal::(anonymous namespace)::GetOwnKeysWithElements&lt;false&gt; (204 samples, 0.17%)</title><rect x="75.0753%" y="949" width="0.1741%" height="15" fill="rgb(219,88,35)" fg:x="87992" fg:w="204"/><text x="75.3253%" y="959.50"></text></g><g><title>v8::internal::FastKeyAccumulator::Prepare (36 samples, 0.03%)</title><rect x="75.2493%" y="965" width="0.0307%" height="15" fill="rgb(220,193,23)" fg:x="88196" fg:w="36"/><text x="75.4993%" y="975.50"></text></g><g><title>v8::internal::JSObject::HasEnumerableElements (14 samples, 0.01%)</title><rect x="75.2681%" y="949" width="0.0119%" height="15" fill="rgb(230,90,52)" fg:x="88218" fg:w="14"/><text x="75.5181%" y="959.50"></text></g><g><title>v8::internal::Runtime_ForInEnumerate (280 samples, 0.24%)</title><rect x="75.0616%" y="981" width="0.2389%" height="15" fill="rgb(252,106,19)" fg:x="87976" fg:w="280"/><text x="75.3116%" y="991.50"></text></g><g><title>v8::internal::JSObject::MakePrototypesFast (24 samples, 0.02%)</title><rect x="75.2801%" y="965" width="0.0205%" height="15" fill="rgb(206,74,20)" fg:x="88232" fg:w="24"/><text x="75.5301%" y="975.50"></text></g><g><title>node::AsyncHooks::DefaultTriggerAsyncIdScope::DefaultTriggerAsyncIdScope (23 samples, 0.02%)</title><rect x="75.3415%" y="965" width="0.0196%" height="15" fill="rgb(230,138,44)" fg:x="88304" fg:w="23"/><text x="75.5915%" y="975.50"></text></g><g><title>node::ParseEncoding (50 samples, 0.04%)</title><rect x="75.4814%" y="933" width="0.0427%" height="15" fill="rgb(235,182,43)" fg:x="88468" fg:w="50"/><text x="75.7314%" y="943.50"></text></g><g><title>node::StringBytes::StorageSize (35 samples, 0.03%)</title><rect x="75.5446%" y="917" width="0.0299%" height="15" fill="rgb(242,16,51)" fg:x="88542" fg:w="35"/><text x="75.7946%" y="927.50"></text></g><g><title>v8::String::WriteUtf8 (84 samples, 0.07%)</title><rect x="75.5778%" y="917" width="0.0717%" height="15" fill="rgb(248,9,4)" fg:x="88581" fg:w="84"/><text x="75.8278%" y="927.50"></text></g><g><title>node::Utf8Value::Utf8Value (150 samples, 0.13%)</title><rect x="75.5241%" y="933" width="0.1280%" height="15" fill="rgb(210,31,22)" fg:x="88518" fg:w="150"/><text x="75.7741%" y="943.50"></text></g><g><title>node::ParseEncoding (218 samples, 0.19%)</title><rect x="75.4669%" y="949" width="0.1860%" height="15" fill="rgb(239,54,39)" fg:x="88451" fg:w="218"/><text x="75.7169%" y="959.50"></text></g><g><title>__GI___pthread_disable_asynccancel (14 samples, 0.01%)</title><rect x="75.7220%" y="885" width="0.0119%" height="15" fill="rgb(230,99,41)" fg:x="88750" fg:w="14"/><text x="75.9720%" y="895.50"></text></g><g><title>__GI___pthread_enable_asynccancel (15 samples, 0.01%)</title><rect x="75.7340%" y="885" width="0.0128%" height="15" fill="rgb(253,106,12)" fg:x="88764" fg:w="15"/><text x="75.9840%" y="895.50"></text></g><g><title>__x64_sys_writev (15 samples, 0.01%)</title><rect x="75.7928%" y="869" width="0.0128%" height="15" fill="rgb(213,46,41)" fg:x="88833" fg:w="15"/><text x="76.0428%" y="879.50"></text></g><g><title>__fget_light (48 samples, 0.04%)</title><rect x="75.8253%" y="805" width="0.0410%" height="15" fill="rgb(215,133,35)" fg:x="88871" fg:w="48"/><text x="76.0753%" y="815.50"></text></g><g><title>__fdget_pos (53 samples, 0.05%)</title><rect x="75.8253%" y="821" width="0.0452%" height="15" fill="rgb(213,28,5)" fg:x="88871" fg:w="53"/><text x="76.0753%" y="831.50"></text></g><g><title>_raw_spin_lock_bh (15 samples, 0.01%)</title><rect x="75.9908%" y="725" width="0.0128%" height="15" fill="rgb(215,77,49)" fg:x="89065" fg:w="15"/><text x="76.2408%" y="735.50"></text></g><g><title>tcp_push (25 samples, 0.02%)</title><rect x="76.0138%" y="725" width="0.0213%" height="15" fill="rgb(248,100,22)" fg:x="89092" fg:w="25"/><text x="76.2638%" y="735.50"></text></g><g><title>__check_object_size (13 samples, 0.01%)</title><rect x="76.2118%" y="709" width="0.0111%" height="15" fill="rgb(208,67,9)" fg:x="89324" fg:w="13"/><text x="76.4618%" y="719.50"></text></g><g><title>_copy_from_iter (14 samples, 0.01%)</title><rect x="76.2305%" y="709" width="0.0119%" height="15" fill="rgb(219,133,21)" fg:x="89346" fg:w="14"/><text x="76.4805%" y="719.50"></text></g><g><title>__next_zones_zonelist (14 samples, 0.01%)</title><rect x="76.3304%" y="645" width="0.0119%" height="15" fill="rgb(246,46,29)" fg:x="89463" fg:w="14"/><text x="76.5804%" y="655.50"></text></g><g><title>__zone_watermark_ok (13 samples, 0.01%)</title><rect x="76.3739%" y="629" width="0.0111%" height="15" fill="rgb(246,185,52)" fg:x="89514" fg:w="13"/><text x="76.6239%" y="639.50"></text></g><g><title>_raw_spin_trylock (19 samples, 0.02%)</title><rect x="76.3850%" y="629" width="0.0162%" height="15" fill="rgb(252,136,11)" fg:x="89527" fg:w="19"/><text x="76.6350%" y="639.50"></text></g><g><title>clear_page_erms (941 samples, 0.80%)</title><rect x="76.4046%" y="629" width="0.8029%" height="15" fill="rgb(219,138,53)" fg:x="89550" fg:w="941"/><text x="76.6546%" y="639.50"></text></g><g><title>post_alloc_hook (28 samples, 0.02%)</title><rect x="77.2075%" y="629" width="0.0239%" height="15" fill="rgb(211,51,23)" fg:x="90491" fg:w="28"/><text x="77.4575%" y="639.50"></text></g><g><title>prep_compound_page (32 samples, 0.03%)</title><rect x="77.2313%" y="629" width="0.0273%" height="15" fill="rgb(247,221,28)" fg:x="90519" fg:w="32"/><text x="77.4813%" y="639.50"></text></g><g><title>__rmqueue_pcplist (45 samples, 0.04%)</title><rect x="77.2834%" y="613" width="0.0384%" height="15" fill="rgb(251,222,45)" fg:x="90580" fg:w="45"/><text x="77.5334%" y="623.50"></text></g><g><title>get_page_from_freelist (1,147 samples, 0.98%)</title><rect x="76.3457%" y="645" width="0.9786%" height="15" fill="rgb(217,162,53)" fg:x="89481" fg:w="1147"/><text x="76.5957%" y="655.50"></text></g><g><title>rmqueue (77 samples, 0.07%)</title><rect x="77.2586%" y="629" width="0.0657%" height="15" fill="rgb(229,93,14)" fg:x="90551" fg:w="77"/><text x="77.5086%" y="639.50"></text></g><g><title>__alloc_pages (1,211 samples, 1.03%)</title><rect x="76.3031%" y="661" width="1.0332%" height="15" fill="rgb(209,67,49)" fg:x="89431" fg:w="1211"/><text x="76.5531%" y="671.50"></text></g><g><title>__next_zones_zonelist (20 samples, 0.02%)</title><rect x="77.3363%" y="661" width="0.0171%" height="15" fill="rgb(213,87,29)" fg:x="90642" fg:w="20"/><text x="77.5863%" y="671.50"></text></g><g><title>alloc_pages (1,283 samples, 1.09%)</title><rect x="76.2826%" y="677" width="1.0947%" height="15" fill="rgb(205,151,52)" fg:x="89407" fg:w="1283"/><text x="76.5326%" y="687.50"></text></g><g><title>sk_page_frag_refill (1,333 samples, 1.14%)</title><rect x="76.2485%" y="709" width="1.1373%" height="15" fill="rgb(253,215,39)" fg:x="89367" fg:w="1333"/><text x="76.4985%" y="719.50"></text></g><g><title>skb_page_frag_refill (1,329 samples, 1.13%)</title><rect x="76.2519%" y="693" width="1.1339%" height="15" fill="rgb(221,220,41)" fg:x="89371" fg:w="1329"/><text x="76.5019%" y="703.50"></text></g><g><title>__virt_addr_valid (49 samples, 0.04%)</title><rect x="77.4250%" y="645" width="0.0418%" height="15" fill="rgb(218,133,21)" fg:x="90746" fg:w="49"/><text x="77.6750%" y="655.50"></text></g><g><title>check_heap_object (59 samples, 0.05%)</title><rect x="77.4173%" y="661" width="0.0503%" height="15" fill="rgb(221,193,43)" fg:x="90737" fg:w="59"/><text x="77.6673%" y="671.50"></text></g><g><title>__check_object_size.part.0 (84 samples, 0.07%)</title><rect x="77.3977%" y="677" width="0.0717%" height="15" fill="rgb(240,128,52)" fg:x="90714" fg:w="84"/><text x="77.6477%" y="687.50"></text></g><g><title>check_heap_object (15 samples, 0.01%)</title><rect x="77.4694%" y="677" width="0.0128%" height="15" fill="rgb(253,114,12)" fg:x="90798" fg:w="15"/><text x="77.7194%" y="687.50"></text></g><g><title>__check_object_size (104 samples, 0.09%)</title><rect x="77.3977%" y="693" width="0.0887%" height="15" fill="rgb(215,223,47)" fg:x="90714" fg:w="104"/><text x="77.6477%" y="703.50"></text></g><g><title>_copy_from_iter (1,499 samples, 1.28%)</title><rect x="77.4865%" y="693" width="1.2790%" height="15" fill="rgb(248,225,23)" fg:x="90818" fg:w="1499"/><text x="77.7365%" y="703.50"></text></g><g><title>rep_movs_alternative (1,437 samples, 1.23%)</title><rect x="77.5394%" y="677" width="1.2261%" height="15" fill="rgb(250,108,0)" fg:x="90880" fg:w="1437"/><text x="77.7894%" y="687.50"></text></g><g><title>skb_do_copy_data_nocache (1,625 samples, 1.39%)</title><rect x="77.3858%" y="709" width="1.3865%" height="15" fill="rgb(228,208,7)" fg:x="90700" fg:w="1625"/><text x="77.6358%" y="719.50"></text></g><g><title>nf_conntrack_tcp_packet (49 samples, 0.04%)</title><rect x="78.9378%" y="517" width="0.0418%" height="15" fill="rgb(244,45,10)" fg:x="92519" fg:w="49"/><text x="79.1878%" y="527.50"></text></g><g><title>tcp_in_window (29 samples, 0.02%)</title><rect x="78.9548%" y="501" width="0.0247%" height="15" fill="rgb(207,125,25)" fg:x="92539" fg:w="29"/><text x="79.2048%" y="511.50"></text></g><g><title>nf_conntrack_handle_packet (62 samples, 0.05%)</title><rect x="78.9275%" y="533" width="0.0529%" height="15" fill="rgb(210,195,18)" fg:x="92507" fg:w="62"/><text x="79.1775%" y="543.50"></text></g><g><title>__nf_conntrack_find_get (24 samples, 0.02%)</title><rect x="78.9872%" y="517" width="0.0205%" height="15" fill="rgb(249,80,12)" fg:x="92577" fg:w="24"/><text x="79.2372%" y="527.50"></text></g><g><title>ipv4_conntrack_local (137 samples, 0.12%)</title><rect x="78.9122%" y="565" width="0.1169%" height="15" fill="rgb(221,65,9)" fg:x="92489" fg:w="137"/><text x="79.1622%" y="575.50"></text></g><g><title>nf_conntrack_in (134 samples, 0.11%)</title><rect x="78.9147%" y="549" width="0.1143%" height="15" fill="rgb(235,49,36)" fg:x="92492" fg:w="134"/><text x="79.1647%" y="559.50"></text></g><g><title>resolve_normal_ct (56 samples, 0.05%)</title><rect x="78.9813%" y="533" width="0.0478%" height="15" fill="rgb(225,32,20)" fg:x="92570" fg:w="56"/><text x="79.2313%" y="543.50"></text></g><g><title>nf_hook_slow (154 samples, 0.13%)</title><rect x="78.9070%" y="581" width="0.1314%" height="15" fill="rgb(215,141,46)" fg:x="92483" fg:w="154"/><text x="79.1570%" y="591.50"></text></g><g><title>__ip_local_out (187 samples, 0.16%)</title><rect x="78.8840%" y="597" width="0.1595%" height="15" fill="rgb(250,160,47)" fg:x="92456" fg:w="187"/><text x="79.1340%" y="607.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (16 samples, 0.01%)</title><rect x="79.1809%" y="373" width="0.0137%" height="15" fill="rgb(216,222,40)" fg:x="92804" fg:w="16"/><text x="79.4309%" y="383.50"></text></g><g><title>__tcp_ack_snd_check (23 samples, 0.02%)</title><rect x="79.3098%" y="261" width="0.0196%" height="15" fill="rgb(234,217,39)" fg:x="92955" fg:w="23"/><text x="79.5598%" y="271.50"></text></g><g><title>tcp_send_delayed_ack (12 samples, 0.01%)</title><rect x="79.3191%" y="245" width="0.0102%" height="15" fill="rgb(207,178,40)" fg:x="92966" fg:w="12"/><text x="79.5691%" y="255.50"></text></g><g><title>tcp_ack (19 samples, 0.02%)</title><rect x="79.3354%" y="261" width="0.0162%" height="15" fill="rgb(221,136,13)" fg:x="92985" fg:w="19"/><text x="79.5854%" y="271.50"></text></g><g><title>__wake_up_common (13 samples, 0.01%)</title><rect x="79.3720%" y="181" width="0.0111%" height="15" fill="rgb(249,199,10)" fg:x="93028" fg:w="13"/><text x="79.6220%" y="191.50"></text></g><g><title>__wake_up_common_lock (27 samples, 0.02%)</title><rect x="79.3703%" y="197" width="0.0230%" height="15" fill="rgb(249,222,13)" fg:x="93026" fg:w="27"/><text x="79.6203%" y="207.50"></text></g><g><title>tcp_data_ready (40 samples, 0.03%)</title><rect x="79.3609%" y="245" width="0.0341%" height="15" fill="rgb(244,185,38)" fg:x="93015" fg:w="40"/><text x="79.6109%" y="255.50"></text></g><g><title>sock_def_readable (37 samples, 0.03%)</title><rect x="79.3635%" y="229" width="0.0316%" height="15" fill="rgb(236,202,9)" fg:x="93018" fg:w="37"/><text x="79.6135%" y="239.50"></text></g><g><title>__wake_up_sync_key (29 samples, 0.02%)</title><rect x="79.3703%" y="213" width="0.0247%" height="15" fill="rgb(250,229,37)" fg:x="93026" fg:w="29"/><text x="79.6203%" y="223.50"></text></g><g><title>tcp_queue_rcv (20 samples, 0.02%)</title><rect x="79.4002%" y="245" width="0.0171%" height="15" fill="rgb(206,174,23)" fg:x="93061" fg:w="20"/><text x="79.6502%" y="255.50"></text></g><g><title>mod_memcg_state (13 samples, 0.01%)</title><rect x="79.4343%" y="181" width="0.0111%" height="15" fill="rgb(211,33,43)" fg:x="93101" fg:w="13"/><text x="79.6843%" y="191.50"></text></g><g><title>mem_cgroup_charge_skmem (38 samples, 0.03%)</title><rect x="79.4335%" y="197" width="0.0324%" height="15" fill="rgb(245,58,50)" fg:x="93100" fg:w="38"/><text x="79.6835%" y="207.50"></text></g><g><title>try_charge_memcg (24 samples, 0.02%)</title><rect x="79.4454%" y="181" width="0.0205%" height="15" fill="rgb(244,68,36)" fg:x="93114" fg:w="24"/><text x="79.6954%" y="191.50"></text></g><g><title>__sk_mem_raise_allocated (48 samples, 0.04%)</title><rect x="79.4266%" y="213" width="0.0410%" height="15" fill="rgb(232,229,15)" fg:x="93092" fg:w="48"/><text x="79.6766%" y="223.50"></text></g><g><title>tcp_data_queue (137 samples, 0.12%)</title><rect x="79.3516%" y="261" width="0.1169%" height="15" fill="rgb(254,30,23)" fg:x="93004" fg:w="137"/><text x="79.6016%" y="271.50"></text></g><g><title>tcp_try_rmem_schedule (55 samples, 0.05%)</title><rect x="79.4215%" y="245" width="0.0469%" height="15" fill="rgb(235,160,14)" fg:x="93086" fg:w="55"/><text x="79.6715%" y="255.50"></text></g><g><title>__sk_mem_schedule (52 samples, 0.04%)</title><rect x="79.4241%" y="229" width="0.0444%" height="15" fill="rgb(212,155,44)" fg:x="93089" fg:w="52"/><text x="79.6741%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (239 samples, 0.20%)</title><rect x="79.2876%" y="293" width="0.2039%" height="15" fill="rgb(226,2,50)" fg:x="92929" fg:w="239"/><text x="79.5376%" y="303.50"></text></g><g><title>tcp_rcv_established (223 samples, 0.19%)</title><rect x="79.3012%" y="277" width="0.1903%" height="15" fill="rgb(234,177,6)" fg:x="92945" fg:w="223"/><text x="79.5512%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (314 samples, 0.27%)</title><rect x="79.2253%" y="325" width="0.2679%" height="15" fill="rgb(217,24,9)" fg:x="92856" fg:w="314"/><text x="79.4753%" y="335.50"></text></g><g><title>tcp_v4_rcv (288 samples, 0.25%)</title><rect x="79.2475%" y="309" width="0.2457%" height="15" fill="rgb(220,13,46)" fg:x="92882" fg:w="288"/><text x="79.4975%" y="319.50"></text></g><g><title>ip_local_deliver_finish (318 samples, 0.27%)</title><rect x="79.2244%" y="341" width="0.2713%" height="15" fill="rgb(239,221,27)" fg:x="92855" fg:w="318"/><text x="79.4744%" y="351.50"></text></g><g><title>ip_local_deliver (340 samples, 0.29%)</title><rect x="79.2193%" y="357" width="0.2901%" height="15" fill="rgb(222,198,25)" fg:x="92849" fg:w="340"/><text x="79.4693%" y="367.50"></text></g><g><title>ip_rcv_core (12 samples, 0.01%)</title><rect x="79.5111%" y="357" width="0.0102%" height="15" fill="rgb(211,99,13)" fg:x="93191" fg:w="12"/><text x="79.7611%" y="367.50"></text></g><g><title>nf_hook_slow (17 samples, 0.01%)</title><rect x="79.5393%" y="357" width="0.0145%" height="15" fill="rgb(232,111,31)" fg:x="93224" fg:w="17"/><text x="79.7893%" y="367.50"></text></g><g><title>ip_rcv (418 samples, 0.36%)</title><rect x="79.1997%" y="373" width="0.3566%" height="15" fill="rgb(245,82,37)" fg:x="92826" fg:w="418"/><text x="79.4497%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (447 samples, 0.38%)</title><rect x="79.1792%" y="389" width="0.3814%" height="15" fill="rgb(227,149,46)" fg:x="92802" fg:w="447"/><text x="79.4292%" y="399.50"></text></g><g><title>__netif_receive_skb (454 samples, 0.39%)</title><rect x="79.1741%" y="405" width="0.3874%" height="15" fill="rgb(218,36,50)" fg:x="92796" fg:w="454"/><text x="79.4241%" y="415.50"></text></g><g><title>__napi_poll (487 samples, 0.42%)</title><rect x="79.1562%" y="437" width="0.4155%" height="15" fill="rgb(226,80,48)" fg:x="92775" fg:w="487"/><text x="79.4062%" y="447.50"></text></g><g><title>process_backlog (476 samples, 0.41%)</title><rect x="79.1656%" y="421" width="0.4061%" height="15" fill="rgb(238,224,15)" fg:x="92786" fg:w="476"/><text x="79.4156%" y="431.50"></text></g><g><title>__do_softirq (527 samples, 0.45%)</title><rect x="79.1263%" y="469" width="0.4496%" height="15" fill="rgb(241,136,10)" fg:x="92740" fg:w="527"/><text x="79.3763%" y="479.50"></text></g><g><title>net_rx_action (506 samples, 0.43%)</title><rect x="79.1442%" y="453" width="0.4317%" height="15" fill="rgb(208,32,45)" fg:x="92761" fg:w="506"/><text x="79.3942%" y="463.50"></text></g><g><title>__local_bh_enable_ip (544 samples, 0.46%)</title><rect x="79.1127%" y="501" width="0.4641%" height="15" fill="rgb(207,135,9)" fg:x="92724" fg:w="544"/><text x="79.3627%" y="511.50"></text></g><g><title>do_softirq.part.0 (538 samples, 0.46%)</title><rect x="79.1178%" y="485" width="0.4590%" height="15" fill="rgb(206,86,44)" fg:x="92730" fg:w="538"/><text x="79.3678%" y="495.50"></text></g><g><title>__netif_rx (21 samples, 0.02%)</title><rect x="79.5922%" y="469" width="0.0179%" height="15" fill="rgb(245,177,15)" fg:x="93286" fg:w="21"/><text x="79.8422%" y="479.50"></text></g><g><title>netif_rx_internal (18 samples, 0.02%)</title><rect x="79.5947%" y="453" width="0.0154%" height="15" fill="rgb(206,64,50)" fg:x="93289" fg:w="18"/><text x="79.8447%" y="463.50"></text></g><g><title>enqueue_to_backlog (16 samples, 0.01%)</title><rect x="79.5964%" y="437" width="0.0137%" height="15" fill="rgb(234,36,40)" fg:x="93291" fg:w="16"/><text x="79.8464%" y="447.50"></text></g><g><title>loopback_xmit (45 samples, 0.04%)</title><rect x="79.5828%" y="485" width="0.0384%" height="15" fill="rgb(213,64,8)" fg:x="93275" fg:w="45"/><text x="79.8328%" y="495.50"></text></g><g><title>dev_hard_start_xmit (53 samples, 0.05%)</title><rect x="79.5768%" y="501" width="0.0452%" height="15" fill="rgb(210,75,36)" fg:x="93268" fg:w="53"/><text x="79.8268%" y="511.50"></text></g><g><title>validate_xmit_skb (17 samples, 0.01%)</title><rect x="79.6306%" y="501" width="0.0145%" height="15" fill="rgb(229,88,21)" fg:x="93331" fg:w="17"/><text x="79.8806%" y="511.50"></text></g><g><title>__dev_queue_xmit (643 samples, 0.55%)</title><rect x="79.0982%" y="517" width="0.5486%" height="15" fill="rgb(252,204,47)" fg:x="92707" fg:w="643"/><text x="79.3482%" y="527.50"></text></g><g><title>ip_finish_output2 (673 samples, 0.57%)</title><rect x="79.0768%" y="549" width="0.5742%" height="15" fill="rgb(208,77,27)" fg:x="92682" fg:w="673"/><text x="79.3268%" y="559.50"></text></g><g><title>neigh_hh_output (651 samples, 0.56%)</title><rect x="79.0956%" y="533" width="0.5554%" height="15" fill="rgb(221,76,26)" fg:x="92704" fg:w="651"/><text x="79.3456%" y="543.50"></text></g><g><title>__ip_finish_output (681 samples, 0.58%)</title><rect x="79.0709%" y="565" width="0.5810%" height="15" fill="rgb(225,139,18)" fg:x="92675" fg:w="681"/><text x="79.3209%" y="575.50"></text></g><g><title>ip_finish_output (691 samples, 0.59%)</title><rect x="79.0632%" y="581" width="0.5896%" height="15" fill="rgb(230,137,11)" fg:x="92666" fg:w="691"/><text x="79.3132%" y="591.50"></text></g><g><title>ip_output (730 samples, 0.62%)</title><rect x="79.0453%" y="597" width="0.6228%" height="15" fill="rgb(212,28,1)" fg:x="92645" fg:w="730"/><text x="79.2953%" y="607.50"></text></g><g><title>__ip_queue_xmit (944 samples, 0.81%)</title><rect x="78.8644%" y="629" width="0.8054%" height="15" fill="rgb(248,164,17)" fg:x="92433" fg:w="944"/><text x="79.1144%" y="639.50"></text></g><g><title>ip_local_out (926 samples, 0.79%)</title><rect x="78.8797%" y="613" width="0.7901%" height="15" fill="rgb(222,171,42)" fg:x="92451" fg:w="926"/><text x="79.1297%" y="623.50"></text></g><g><title>ip_queue_xmit (947 samples, 0.81%)</title><rect x="78.8644%" y="645" width="0.8080%" height="15" fill="rgb(243,84,45)" fg:x="92433" fg:w="947"/><text x="79.1144%" y="655.50"></text></g><g><title>skb_clone (16 samples, 0.01%)</title><rect x="79.6724%" y="645" width="0.0137%" height="15" fill="rgb(252,49,23)" fg:x="93380" fg:w="16"/><text x="79.9224%" y="655.50"></text></g><g><title>__skb_clone (12 samples, 0.01%)</title><rect x="79.6758%" y="629" width="0.0102%" height="15" fill="rgb(215,19,7)" fg:x="93384" fg:w="12"/><text x="79.9258%" y="639.50"></text></g><g><title>__tcp_transmit_skb (1,022 samples, 0.87%)</title><rect x="78.8209%" y="661" width="0.8720%" height="15" fill="rgb(238,81,41)" fg:x="92382" fg:w="1022"/><text x="79.0709%" y="671.50"></text></g><g><title>tcp_event_new_data_sent (30 samples, 0.03%)</title><rect x="79.7167%" y="661" width="0.0256%" height="15" fill="rgb(210,199,37)" fg:x="93432" fg:w="30"/><text x="79.9667%" y="671.50"></text></g><g><title>tcp_rearm_rto (13 samples, 0.01%)</title><rect x="79.7312%" y="645" width="0.0111%" height="15" fill="rgb(244,192,49)" fg:x="93449" fg:w="13"/><text x="79.9812%" y="655.50"></text></g><g><title>__mod_timer (38 samples, 0.03%)</title><rect x="79.7551%" y="613" width="0.0324%" height="15" fill="rgb(226,211,11)" fg:x="93477" fg:w="38"/><text x="80.0051%" y="623.50"></text></g><g><title>tcp_schedule_loss_probe (56 samples, 0.05%)</title><rect x="79.7449%" y="661" width="0.0478%" height="15" fill="rgb(236,162,54)" fg:x="93465" fg:w="56"/><text x="79.9949%" y="671.50"></text></g><g><title>sk_reset_timer (45 samples, 0.04%)</title><rect x="79.7543%" y="645" width="0.0384%" height="15" fill="rgb(220,229,9)" fg:x="93476" fg:w="45"/><text x="80.0043%" y="655.50"></text></g><g><title>mod_timer (44 samples, 0.04%)</title><rect x="79.7551%" y="629" width="0.0375%" height="15" fill="rgb(250,87,22)" fg:x="93477" fg:w="44"/><text x="80.0051%" y="639.50"></text></g><g><title>__tcp_push_pending_frames (1,196 samples, 1.02%)</title><rect x="78.7867%" y="693" width="1.0204%" height="15" fill="rgb(239,43,17)" fg:x="92342" fg:w="1196"/><text x="79.0367%" y="703.50"></text></g><g><title>tcp_write_xmit (1,176 samples, 1.00%)</title><rect x="78.8038%" y="677" width="1.0034%" height="15" fill="rgb(231,177,25)" fg:x="92362" fg:w="1176"/><text x="79.0538%" y="687.50"></text></g><g><title>tcp_push (1,202 samples, 1.03%)</title><rect x="78.7867%" y="709" width="1.0256%" height="15" fill="rgb(219,179,1)" fg:x="92342" fg:w="1202"/><text x="79.0367%" y="719.50"></text></g><g><title>__tcp_select_window (15 samples, 0.01%)</title><rect x="79.9172%" y="661" width="0.0128%" height="15" fill="rgb(238,219,53)" fg:x="93667" fg:w="15"/><text x="80.1672%" y="671.50"></text></g><g><title>ipv4_conntrack_local (22 samples, 0.02%)</title><rect x="79.9966%" y="597" width="0.0188%" height="15" fill="rgb(232,167,36)" fg:x="93760" fg:w="22"/><text x="80.2466%" y="607.50"></text></g><g><title>ipv4_conntrack_defrag (12 samples, 0.01%)</title><rect x="80.0179%" y="581" width="0.0102%" height="15" fill="rgb(244,19,51)" fg:x="93785" fg:w="12"/><text x="80.2679%" y="591.50"></text></g><g><title>nf_conntrack_tcp_packet (95 samples, 0.08%)</title><rect x="80.0734%" y="533" width="0.0811%" height="15" fill="rgb(224,6,22)" fg:x="93850" fg:w="95"/><text x="80.3234%" y="543.50"></text></g><g><title>tcp_in_window (42 samples, 0.04%)</title><rect x="80.1186%" y="517" width="0.0358%" height="15" fill="rgb(224,145,5)" fg:x="93903" fg:w="42"/><text x="80.3686%" y="527.50"></text></g><g><title>nf_conntrack_handle_packet (114 samples, 0.10%)</title><rect x="80.0623%" y="549" width="0.0973%" height="15" fill="rgb(234,130,49)" fg:x="93837" fg:w="114"/><text x="80.3123%" y="559.50"></text></g><g><title>__nf_conntrack_find_get (61 samples, 0.05%)</title><rect x="80.1826%" y="533" width="0.0520%" height="15" fill="rgb(254,6,2)" fg:x="93978" fg:w="61"/><text x="80.4326%" y="543.50"></text></g><g><title>hash_conntrack_raw (14 samples, 0.01%)</title><rect x="80.2372%" y="533" width="0.0119%" height="15" fill="rgb(208,96,46)" fg:x="94042" fg:w="14"/><text x="80.4872%" y="543.50"></text></g><g><title>nf_conntrack_in (255 samples, 0.22%)</title><rect x="80.0410%" y="565" width="0.2176%" height="15" fill="rgb(239,3,39)" fg:x="93812" fg:w="255"/><text x="80.2910%" y="575.50"></text></g><g><title>resolve_normal_ct (101 samples, 0.09%)</title><rect x="80.1723%" y="549" width="0.0862%" height="15" fill="rgb(233,210,1)" fg:x="93966" fg:w="101"/><text x="80.4223%" y="559.50"></text></g><g><title>ipv4_conntrack_local (279 samples, 0.24%)</title><rect x="80.0282%" y="581" width="0.2380%" height="15" fill="rgb(244,137,37)" fg:x="93797" fg:w="279"/><text x="80.2782%" y="591.50"></text></g><g><title>nf_hook_slow (332 samples, 0.28%)</title><rect x="80.0154%" y="597" width="0.2833%" height="15" fill="rgb(240,136,2)" fg:x="93782" fg:w="332"/><text x="80.2654%" y="607.50"></text></g><g><title>nf_nat_ipv4_local_fn (17 samples, 0.01%)</title><rect x="80.2841%" y="581" width="0.0145%" height="15" fill="rgb(239,18,37)" fg:x="94097" fg:w="17"/><text x="80.5341%" y="591.50"></text></g><g><title>nf_nat_inet_fn (12 samples, 0.01%)</title><rect x="80.2884%" y="565" width="0.0102%" height="15" fill="rgb(218,185,22)" fg:x="94102" fg:w="12"/><text x="80.5384%" y="575.50"></text></g><g><title>__ip_local_out (383 samples, 0.33%)</title><rect x="79.9804%" y="613" width="0.3268%" height="15" fill="rgb(225,218,4)" fg:x="93741" fg:w="383"/><text x="80.2304%" y="623.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (27 samples, 0.02%)</title><rect x="80.5426%" y="389" width="0.0230%" height="15" fill="rgb(230,182,32)" fg:x="94400" fg:w="27"/><text x="80.7926%" y="399.50"></text></g><g><title>__inet_lookup_established (39 samples, 0.03%)</title><rect x="80.6655%" y="309" width="0.0333%" height="15" fill="rgb(242,56,43)" fg:x="94544" fg:w="39"/><text x="80.9155%" y="319.50"></text></g><g><title>tcp_filter (30 samples, 0.03%)</title><rect x="80.7150%" y="309" width="0.0256%" height="15" fill="rgb(233,99,24)" fg:x="94602" fg:w="30"/><text x="80.9650%" y="319.50"></text></g><g><title>sk_filter_trim_cap (25 samples, 0.02%)</title><rect x="80.7193%" y="293" width="0.0213%" height="15" fill="rgb(234,209,42)" fg:x="94607" fg:w="25"/><text x="80.9693%" y="303.50"></text></g><g><title>tcp_check_space (22 samples, 0.02%)</title><rect x="80.7602%" y="293" width="0.0188%" height="15" fill="rgb(227,7,12)" fg:x="94655" fg:w="22"/><text x="81.0102%" y="303.50"></text></g><g><title>__mod_timer (37 samples, 0.03%)</title><rect x="80.8387%" y="213" width="0.0316%" height="15" fill="rgb(245,203,43)" fg:x="94747" fg:w="37"/><text x="81.0887%" y="223.50"></text></g><g><title>__tcp_ack_snd_check (69 samples, 0.06%)</title><rect x="80.8191%" y="277" width="0.0589%" height="15" fill="rgb(238,205,33)" fg:x="94724" fg:w="69"/><text x="81.0691%" y="287.50"></text></g><g><title>tcp_send_delayed_ack (61 samples, 0.05%)</title><rect x="80.8259%" y="261" width="0.0520%" height="15" fill="rgb(231,56,7)" fg:x="94732" fg:w="61"/><text x="81.0759%" y="271.50"></text></g><g><title>sk_reset_timer (49 samples, 0.04%)</title><rect x="80.8361%" y="245" width="0.0418%" height="15" fill="rgb(244,186,29)" fg:x="94744" fg:w="49"/><text x="81.0861%" y="255.50"></text></g><g><title>mod_timer (46 samples, 0.04%)</title><rect x="80.8387%" y="229" width="0.0392%" height="15" fill="rgb(234,111,31)" fg:x="94747" fg:w="46"/><text x="81.0887%" y="239.50"></text></g><g><title>cubictcp_acked (13 samples, 0.01%)</title><rect x="80.9539%" y="261" width="0.0111%" height="15" fill="rgb(241,149,10)" fg:x="94882" fg:w="13"/><text x="81.2039%" y="271.50"></text></g><g><title>kfree_skbmem (32 samples, 0.03%)</title><rect x="81.0435%" y="229" width="0.0273%" height="15" fill="rgb(249,206,44)" fg:x="94987" fg:w="32"/><text x="81.2935%" y="239.50"></text></g><g><title>kmem_cache_free (28 samples, 0.02%)</title><rect x="81.0469%" y="213" width="0.0239%" height="15" fill="rgb(251,153,30)" fg:x="94991" fg:w="28"/><text x="81.2969%" y="223.50"></text></g><g><title>cache_from_obj (16 samples, 0.01%)</title><rect x="81.0571%" y="197" width="0.0137%" height="15" fill="rgb(239,152,38)" fg:x="95003" fg:w="16"/><text x="81.3071%" y="207.50"></text></g><g><title>__kfree_skb (72 samples, 0.06%)</title><rect x="81.0418%" y="245" width="0.0614%" height="15" fill="rgb(249,139,47)" fg:x="94985" fg:w="72"/><text x="81.2918%" y="255.50"></text></g><g><title>skb_release_data (38 samples, 0.03%)</title><rect x="81.0708%" y="229" width="0.0324%" height="15" fill="rgb(244,64,35)" fg:x="95019" fg:w="38"/><text x="81.3208%" y="239.50"></text></g><g><title>skb_free_head (25 samples, 0.02%)</title><rect x="81.0819%" y="213" width="0.0213%" height="15" fill="rgb(216,46,15)" fg:x="95032" fg:w="25"/><text x="81.3319%" y="223.50"></text></g><g><title>kmem_cache_free (21 samples, 0.02%)</title><rect x="81.0853%" y="197" width="0.0179%" height="15" fill="rgb(250,74,19)" fg:x="95036" fg:w="21"/><text x="81.3353%" y="207.50"></text></g><g><title>__sk_mem_reduce_allocated (16 samples, 0.01%)</title><rect x="81.1032%" y="229" width="0.0137%" height="15" fill="rgb(249,42,33)" fg:x="95057" fg:w="16"/><text x="81.3532%" y="239.50"></text></g><g><title>__sk_mem_reclaim (25 samples, 0.02%)</title><rect x="81.1032%" y="245" width="0.0213%" height="15" fill="rgb(242,149,17)" fg:x="95057" fg:w="25"/><text x="81.3532%" y="255.50"></text></g><g><title>tcp_ack_update_rtt (17 samples, 0.01%)</title><rect x="81.1339%" y="245" width="0.0145%" height="15" fill="rgb(244,29,21)" fg:x="95093" fg:w="17"/><text x="81.3839%" y="255.50"></text></g><g><title>tcp_clean_rtx_queue.constprop.0 (174 samples, 0.15%)</title><rect x="81.0085%" y="261" width="0.1485%" height="15" fill="rgb(220,130,37)" fg:x="94946" fg:w="174"/><text x="81.2585%" y="271.50"></text></g><g><title>tcp_ack (330 samples, 0.28%)</title><rect x="80.9044%" y="277" width="0.2816%" height="15" fill="rgb(211,67,2)" fg:x="94824" fg:w="330"/><text x="81.1544%" y="287.50"></text></g><g><title>page_counter_try_charge (12 samples, 0.01%)</title><rect x="81.2389%" y="213" width="0.0102%" height="15" fill="rgb(235,68,52)" fg:x="95216" fg:w="12"/><text x="81.4889%" y="223.50"></text></g><g><title>mem_cgroup_charge_skmem (36 samples, 0.03%)</title><rect x="81.2192%" y="245" width="0.0307%" height="15" fill="rgb(246,142,3)" fg:x="95193" fg:w="36"/><text x="81.4692%" y="255.50"></text></g><g><title>try_charge_memcg (26 samples, 0.02%)</title><rect x="81.2278%" y="229" width="0.0222%" height="15" fill="rgb(241,25,7)" fg:x="95203" fg:w="26"/><text x="81.4778%" y="239.50"></text></g><g><title>sk_forced_mem_schedule (42 samples, 0.04%)</title><rect x="81.2150%" y="261" width="0.0358%" height="15" fill="rgb(242,119,39)" fg:x="95188" fg:w="42"/><text x="81.4650%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (17 samples, 0.01%)</title><rect x="81.3779%" y="69" width="0.0145%" height="15" fill="rgb(241,98,45)" fg:x="95379" fg:w="17"/><text x="81.6279%" y="79.50"></text></g><g><title>__raw_spin_lock_irqsave (17 samples, 0.01%)</title><rect x="81.3779%" y="53" width="0.0145%" height="15" fill="rgb(254,28,30)" fg:x="95379" fg:w="17"/><text x="81.6279%" y="63.50"></text></g><g><title>select_task_rq_fair (39 samples, 0.03%)</title><rect x="81.3933%" y="69" width="0.0333%" height="15" fill="rgb(241,142,54)" fg:x="95397" fg:w="39"/><text x="81.6433%" y="79.50"></text></g><g><title>__smp_call_single_queue (12 samples, 0.01%)</title><rect x="81.4377%" y="53" width="0.0102%" height="15" fill="rgb(222,85,15)" fg:x="95449" fg:w="12"/><text x="81.6877%" y="63.50"></text></g><g><title>call_function_single_prep_ipi (12 samples, 0.01%)</title><rect x="81.4377%" y="37" width="0.0102%" height="15" fill="rgb(210,85,47)" fg:x="95449" fg:w="12"/><text x="81.6877%" y="47.50"></text></g><g><title>ttwu_queue_wakelist (44 samples, 0.04%)</title><rect x="81.4274%" y="69" width="0.0375%" height="15" fill="rgb(224,206,25)" fg:x="95437" fg:w="44"/><text x="81.6774%" y="79.50"></text></g><g><title>try_to_wake_up (126 samples, 0.11%)</title><rect x="81.3583%" y="85" width="0.1075%" height="15" fill="rgb(243,201,19)" fg:x="95356" fg:w="126"/><text x="81.6083%" y="95.50"></text></g><g><title>default_wake_function (138 samples, 0.12%)</title><rect x="81.3489%" y="101" width="0.1177%" height="15" fill="rgb(236,59,4)" fg:x="95345" fg:w="138"/><text x="81.5989%" y="111.50"></text></g><g><title>__wake_up_common (162 samples, 0.14%)</title><rect x="81.3353%" y="133" width="0.1382%" height="15" fill="rgb(254,179,45)" fg:x="95329" fg:w="162"/><text x="81.5853%" y="143.50"></text></g><g><title>ep_autoremove_wake_function (148 samples, 0.13%)</title><rect x="81.3472%" y="117" width="0.1263%" height="15" fill="rgb(226,14,10)" fg:x="95343" fg:w="148"/><text x="81.5972%" y="127.50"></text></g><g><title>__wake_up_common_lock (179 samples, 0.15%)</title><rect x="81.3327%" y="149" width="0.1527%" height="15" fill="rgb(244,27,41)" fg:x="95326" fg:w="179"/><text x="81.5827%" y="159.50"></text></g><g><title>__wake_up (180 samples, 0.15%)</title><rect x="81.3327%" y="165" width="0.1536%" height="15" fill="rgb(235,35,32)" fg:x="95326" fg:w="180"/><text x="81.5827%" y="175.50"></text></g><g><title>_raw_read_lock_irqsave (14 samples, 0.01%)</title><rect x="81.4863%" y="165" width="0.0119%" height="15" fill="rgb(218,68,31)" fg:x="95506" fg:w="14"/><text x="81.7363%" y="175.50"></text></g><g><title>__raw_read_lock_irqsave (14 samples, 0.01%)</title><rect x="81.4863%" y="149" width="0.0119%" height="15" fill="rgb(207,120,37)" fg:x="95506" fg:w="14"/><text x="81.7363%" y="159.50"></text></g><g><title>__wake_up_common (252 samples, 0.22%)</title><rect x="81.2858%" y="197" width="0.2150%" height="15" fill="rgb(227,98,0)" fg:x="95271" fg:w="252"/><text x="81.5358%" y="207.50"></text></g><g><title>ep_poll_callback (220 samples, 0.19%)</title><rect x="81.3131%" y="181" width="0.1877%" height="15" fill="rgb(207,7,3)" fg:x="95303" fg:w="220"/><text x="81.5631%" y="191.50"></text></g><g><title>__wake_up_common_lock (265 samples, 0.23%)</title><rect x="81.2824%" y="213" width="0.2261%" height="15" fill="rgb(206,98,19)" fg:x="95267" fg:w="265"/><text x="81.5324%" y="223.50"></text></g><g><title>tcp_data_ready (296 samples, 0.25%)</title><rect x="81.2576%" y="261" width="0.2525%" height="15" fill="rgb(217,5,26)" fg:x="95238" fg:w="296"/><text x="81.5076%" y="271.50"></text></g><g><title>sock_def_readable (284 samples, 0.24%)</title><rect x="81.2679%" y="245" width="0.2423%" height="15" fill="rgb(235,190,38)" fg:x="95250" fg:w="284"/><text x="81.5179%" y="255.50"></text></g><g><title>__wake_up_sync_key (267 samples, 0.23%)</title><rect x="81.2824%" y="229" width="0.2278%" height="15" fill="rgb(247,86,24)" fg:x="95267" fg:w="267"/><text x="81.5324%" y="239.50"></text></g><g><title>tcp_data_queue (399 samples, 0.34%)</title><rect x="81.1902%" y="277" width="0.3404%" height="15" fill="rgb(205,101,16)" fg:x="95159" fg:w="399"/><text x="81.4402%" y="287.50"></text></g><g><title>tcp_mstamp_refresh (16 samples, 0.01%)</title><rect x="81.5375%" y="277" width="0.0137%" height="15" fill="rgb(246,168,33)" fg:x="95566" fg:w="16"/><text x="81.7875%" y="287.50"></text></g><g><title>tcp_rcv_established (933 samples, 0.80%)</title><rect x="80.7892%" y="293" width="0.7960%" height="15" fill="rgb(231,114,1)" fg:x="94689" fg:w="933"/><text x="81.0392%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (984 samples, 0.84%)</title><rect x="80.7508%" y="309" width="0.8396%" height="15" fill="rgb(207,184,53)" fg:x="94644" fg:w="984"/><text x="81.0008%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (1,166 samples, 0.99%)</title><rect x="80.5964%" y="341" width="0.9948%" height="15" fill="rgb(224,95,51)" fg:x="94463" fg:w="1166"/><text x="80.8464%" y="351.50"></text></g><g><title>tcp_v4_rcv (1,112 samples, 0.95%)</title><rect x="80.6425%" y="325" width="0.9488%" height="15" fill="rgb(212,188,45)" fg:x="94517" fg:w="1112"/><text x="80.8925%" y="335.50"></text></g><g><title>ip_local_deliver_finish (1,173 samples, 1.00%)</title><rect x="80.5955%" y="357" width="1.0008%" height="15" fill="rgb(223,154,38)" fg:x="94462" fg:w="1173"/><text x="80.8455%" y="367.50"></text></g><g><title>nf_hook_slow (13 samples, 0.01%)</title><rect x="81.6040%" y="357" width="0.0111%" height="15" fill="rgb(251,22,52)" fg:x="95644" fg:w="13"/><text x="81.8540%" y="367.50"></text></g><g><title>ip_local_deliver (1,209 samples, 1.03%)</title><rect x="80.5862%" y="373" width="1.0315%" height="15" fill="rgb(229,209,22)" fg:x="94451" fg:w="1209"/><text x="80.8362%" y="383.50"></text></g><g><title>ip_rcv_core (21 samples, 0.02%)</title><rect x="81.6202%" y="373" width="0.0179%" height="15" fill="rgb(234,138,34)" fg:x="95663" fg:w="21"/><text x="81.8702%" y="383.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (33 samples, 0.03%)</title><rect x="81.6382%" y="373" width="0.0282%" height="15" fill="rgb(212,95,11)" fg:x="95684" fg:w="33"/><text x="81.8882%" y="383.50"></text></g><g><title>ip_sabotage_in (14 samples, 0.01%)</title><rect x="81.6663%" y="373" width="0.0119%" height="15" fill="rgb(240,179,47)" fg:x="95717" fg:w="14"/><text x="81.9163%" y="383.50"></text></g><g><title>ipv4_conntrack_in (13 samples, 0.01%)</title><rect x="81.6834%" y="373" width="0.0111%" height="15" fill="rgb(240,163,11)" fg:x="95737" fg:w="13"/><text x="81.9334%" y="383.50"></text></g><g><title>nf_hook_slow (34 samples, 0.03%)</title><rect x="81.6945%" y="373" width="0.0290%" height="15" fill="rgb(236,37,12)" fg:x="95750" fg:w="34"/><text x="81.9445%" y="383.50"></text></g><g><title>ip_rcv (1,357 samples, 1.16%)</title><rect x="80.5691%" y="389" width="1.1578%" height="15" fill="rgb(232,164,16)" fg:x="94431" fg:w="1357"/><text x="80.8191%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (1,414 samples, 1.21%)</title><rect x="80.5341%" y="405" width="1.2064%" height="15" fill="rgb(244,205,15)" fg:x="94390" fg:w="1414"/><text x="80.7841%" y="415.50"></text></g><g><title>__netif_receive_skb (1,420 samples, 1.21%)</title><rect x="80.5298%" y="421" width="1.2116%" height="15" fill="rgb(223,117,47)" fg:x="94385" fg:w="1420"/><text x="80.7798%" y="431.50"></text></g><g><title>__napi_poll (1,463 samples, 1.25%)</title><rect x="80.5051%" y="453" width="1.2482%" height="15" fill="rgb(244,107,35)" fg:x="94356" fg:w="1463"/><text x="80.7551%" y="463.50"></text></g><g><title>process_backlog (1,446 samples, 1.23%)</title><rect x="80.5196%" y="437" width="1.2337%" height="15" fill="rgb(205,140,8)" fg:x="94373" fg:w="1446"/><text x="80.7696%" y="447.50"></text></g><g><title>kfree_skbmem (35 samples, 0.03%)</title><rect x="81.7636%" y="437" width="0.0299%" height="15" fill="rgb(228,84,46)" fg:x="95831" fg:w="35"/><text x="82.0136%" y="447.50"></text></g><g><title>kmem_cache_free (24 samples, 0.02%)</title><rect x="81.7730%" y="421" width="0.0205%" height="15" fill="rgb(254,188,9)" fg:x="95842" fg:w="24"/><text x="82.0230%" y="431.50"></text></g><g><title>cache_from_obj (13 samples, 0.01%)</title><rect x="81.7823%" y="405" width="0.0111%" height="15" fill="rgb(206,112,54)" fg:x="95853" fg:w="13"/><text x="82.0323%" y="415.50"></text></g><g><title>free_unref_page (154 samples, 0.13%)</title><rect x="81.8813%" y="373" width="0.1314%" height="15" fill="rgb(216,84,49)" fg:x="95969" fg:w="154"/><text x="82.1313%" y="383.50"></text></g><g><title>free_unref_page_prepare (124 samples, 0.11%)</title><rect x="81.9069%" y="357" width="0.1058%" height="15" fill="rgb(214,194,35)" fg:x="95999" fg:w="124"/><text x="82.1569%" y="367.50"></text></g><g><title>free_tail_page_prepare (31 samples, 0.03%)</title><rect x="81.9863%" y="341" width="0.0264%" height="15" fill="rgb(249,28,3)" fg:x="96092" fg:w="31"/><text x="82.2363%" y="351.50"></text></g><g><title>free_compound_page (185 samples, 0.16%)</title><rect x="81.8591%" y="389" width="0.1578%" height="15" fill="rgb(222,56,52)" fg:x="95943" fg:w="185"/><text x="82.1091%" y="399.50"></text></g><g><title>destroy_large_folio (204 samples, 0.17%)</title><rect x="81.8489%" y="405" width="0.1741%" height="15" fill="rgb(245,217,50)" fg:x="95931" fg:w="204"/><text x="82.0989%" y="415.50"></text></g><g><title>__folio_put (231 samples, 0.20%)</title><rect x="81.8387%" y="421" width="0.1971%" height="15" fill="rgb(213,201,24)" fg:x="95919" fg:w="231"/><text x="82.0887%" y="431.50"></text></g><g><title>free_compound_page (15 samples, 0.01%)</title><rect x="82.0230%" y="405" width="0.0128%" height="15" fill="rgb(248,116,28)" fg:x="96135" fg:w="15"/><text x="82.2730%" y="415.50"></text></g><g><title>skb_release_data (330 samples, 0.28%)</title><rect x="81.7951%" y="437" width="0.2816%" height="15" fill="rgb(219,72,43)" fg:x="95868" fg:w="330"/><text x="82.0451%" y="447.50"></text></g><g><title>skb_free_head (33 samples, 0.03%)</title><rect x="82.0485%" y="421" width="0.0282%" height="15" fill="rgb(209,138,14)" fg:x="96165" fg:w="33"/><text x="82.2985%" y="431.50"></text></g><g><title>kmem_cache_free (29 samples, 0.02%)</title><rect x="82.0520%" y="405" width="0.0247%" height="15" fill="rgb(222,18,33)" fg:x="96169" fg:w="29"/><text x="82.3020%" y="415.50"></text></g><g><title>cache_from_obj (17 samples, 0.01%)</title><rect x="82.0622%" y="389" width="0.0145%" height="15" fill="rgb(213,199,7)" fg:x="96181" fg:w="17"/><text x="82.3122%" y="399.50"></text></g><g><title>napi_consume_skb (379 samples, 0.32%)</title><rect x="81.7550%" y="453" width="0.3234%" height="15" fill="rgb(250,110,10)" fg:x="95821" fg:w="379"/><text x="82.0050%" y="463.50"></text></g><g><title>__do_softirq (1,914 samples, 1.63%)</title><rect x="80.4590%" y="485" width="1.6330%" height="15" fill="rgb(248,123,6)" fg:x="94302" fg:w="1914"/><text x="80.7090%" y="495.50"></text></g><g><title>net_rx_action (1,883 samples, 1.61%)</title><rect x="80.4855%" y="469" width="1.6066%" height="15" fill="rgb(206,91,31)" fg:x="94333" fg:w="1883"/><text x="80.7355%" y="479.50"></text></g><g><title>__local_bh_enable_ip (1,943 samples, 1.66%)</title><rect x="80.4377%" y="517" width="1.6578%" height="15" fill="rgb(211,154,13)" fg:x="94277" fg:w="1943"/><text x="80.6877%" y="527.50"></text></g><g><title>do_softirq.part.0 (1,932 samples, 1.65%)</title><rect x="80.4471%" y="501" width="1.6484%" height="15" fill="rgb(225,148,7)" fg:x="94288" fg:w="1932"/><text x="80.6971%" y="511.50"></text></g><g><title>eth_type_trans (13 samples, 0.01%)</title><rect x="82.1032%" y="501" width="0.0111%" height="15" fill="rgb(220,160,43)" fg:x="96229" fg:w="13"/><text x="82.3532%" y="511.50"></text></g><g><title>__netif_rx (45 samples, 0.04%)</title><rect x="82.1202%" y="485" width="0.0384%" height="15" fill="rgb(213,52,39)" fg:x="96249" fg:w="45"/><text x="82.3702%" y="495.50"></text></g><g><title>netif_rx_internal (39 samples, 0.03%)</title><rect x="82.1253%" y="469" width="0.0333%" height="15" fill="rgb(243,137,7)" fg:x="96255" fg:w="39"/><text x="82.3753%" y="479.50"></text></g><g><title>enqueue_to_backlog (30 samples, 0.03%)</title><rect x="82.1330%" y="453" width="0.0256%" height="15" fill="rgb(230,79,13)" fg:x="96264" fg:w="30"/><text x="82.3830%" y="463.50"></text></g><g><title>loopback_xmit (83 samples, 0.07%)</title><rect x="82.1142%" y="501" width="0.0708%" height="15" fill="rgb(247,105,23)" fg:x="96242" fg:w="83"/><text x="82.3642%" y="511.50"></text></g><g><title>tcp_wfree (13 samples, 0.01%)</title><rect x="82.1740%" y="485" width="0.0111%" height="15" fill="rgb(223,179,41)" fg:x="96312" fg:w="13"/><text x="82.4240%" y="495.50"></text></g><g><title>dev_hard_start_xmit (118 samples, 0.10%)</title><rect x="82.0955%" y="517" width="0.1007%" height="15" fill="rgb(218,9,34)" fg:x="96220" fg:w="118"/><text x="82.3455%" y="527.50"></text></g><g><title>validate_xmit_skb (22 samples, 0.02%)</title><rect x="82.2098%" y="517" width="0.0188%" height="15" fill="rgb(222,106,8)" fg:x="96354" fg:w="22"/><text x="82.4598%" y="527.50"></text></g><g><title>__dev_queue_xmit (2,142 samples, 1.83%)</title><rect x="80.4044%" y="533" width="1.8276%" height="15" fill="rgb(211,220,0)" fg:x="94238" fg:w="2142"/><text x="80.6544%" y="543.50">_..</text></g><g><title>ip_finish_output2 (2,206 samples, 1.88%)</title><rect x="80.3583%" y="565" width="1.8822%" height="15" fill="rgb(229,52,16)" fg:x="94184" fg:w="2206"/><text x="80.6083%" y="575.50">i..</text></g><g><title>neigh_hh_output (2,160 samples, 1.84%)</title><rect x="80.3976%" y="549" width="1.8429%" height="15" fill="rgb(212,155,18)" fg:x="94230" fg:w="2160"/><text x="80.6476%" y="559.50">n..</text></g><g><title>__ip_finish_output (2,232 samples, 1.90%)</title><rect x="80.3438%" y="581" width="1.9044%" height="15" fill="rgb(242,21,14)" fg:x="94167" fg:w="2232"/><text x="80.5938%" y="591.50">_..</text></g><g><title>ip_finish_output (2,253 samples, 1.92%)</title><rect x="80.3362%" y="597" width="1.9223%" height="15" fill="rgb(222,19,48)" fg:x="94158" fg:w="2253"/><text x="80.5862%" y="607.50">i..</text></g><g><title>nf_hook_slow (26 samples, 0.02%)</title><rect x="82.2661%" y="597" width="0.0222%" height="15" fill="rgb(232,45,27)" fg:x="96420" fg:w="26"/><text x="82.5161%" y="607.50"></text></g><g><title>ip_output (2,317 samples, 1.98%)</title><rect x="80.3165%" y="613" width="1.9769%" height="15" fill="rgb(249,103,42)" fg:x="94135" fg:w="2317"/><text x="80.5665%" y="623.50">i..</text></g><g><title>__ip_queue_xmit (2,776 samples, 2.37%)</title><rect x="79.9386%" y="645" width="2.3685%" height="15" fill="rgb(246,81,33)" fg:x="93692" fg:w="2776"/><text x="80.1886%" y="655.50">__..</text></g><g><title>ip_local_out (2,732 samples, 2.33%)</title><rect x="79.9761%" y="629" width="2.3310%" height="15" fill="rgb(252,33,42)" fg:x="93736" fg:w="2732"/><text x="80.2261%" y="639.50">i..</text></g><g><title>nf_hook_slow (13 samples, 0.01%)</title><rect x="82.2960%" y="613" width="0.0111%" height="15" fill="rgb(209,212,41)" fg:x="96455" fg:w="13"/><text x="82.5460%" y="623.50"></text></g><g><title>ip_queue_xmit (2,791 samples, 2.38%)</title><rect x="79.9377%" y="661" width="2.3813%" height="15" fill="rgb(207,154,6)" fg:x="93691" fg:w="2791"/><text x="80.1877%" y="671.50">ip..</text></g><g><title>skb_clone (15 samples, 0.01%)</title><rect x="82.3190%" y="661" width="0.0128%" height="15" fill="rgb(223,64,47)" fg:x="96482" fg:w="15"/><text x="82.5690%" y="671.50"></text></g><g><title>__tcp_transmit_skb (2,918 samples, 2.49%)</title><rect x="79.8541%" y="677" width="2.4897%" height="15" fill="rgb(211,161,38)" fg:x="93593" fg:w="2918"/><text x="80.1041%" y="687.50">__..</text></g><g><title>__mod_timer (31 samples, 0.03%)</title><rect x="82.4325%" y="613" width="0.0264%" height="15" fill="rgb(219,138,40)" fg:x="96615" fg:w="31"/><text x="82.6825%" y="623.50"></text></g><g><title>tcp_event_new_data_sent (75 samples, 0.06%)</title><rect x="82.4035%" y="677" width="0.0640%" height="15" fill="rgb(241,228,46)" fg:x="96581" fg:w="75"/><text x="82.6535%" y="687.50"></text></g><g><title>tcp_rearm_rto (45 samples, 0.04%)</title><rect x="82.4291%" y="661" width="0.0384%" height="15" fill="rgb(223,209,38)" fg:x="96611" fg:w="45"/><text x="82.6791%" y="671.50"></text></g><g><title>sk_reset_timer (43 samples, 0.04%)</title><rect x="82.4308%" y="645" width="0.0367%" height="15" fill="rgb(236,164,45)" fg:x="96613" fg:w="43"/><text x="82.6808%" y="655.50"></text></g><g><title>mod_timer (41 samples, 0.03%)</title><rect x="82.4325%" y="629" width="0.0350%" height="15" fill="rgb(231,15,5)" fg:x="96615" fg:w="41"/><text x="82.6825%" y="639.50"></text></g><g><title>tcp_schedule_loss_probe (31 samples, 0.03%)</title><rect x="82.4769%" y="677" width="0.0264%" height="15" fill="rgb(252,35,15)" fg:x="96667" fg:w="31"/><text x="82.7269%" y="687.50"></text></g><g><title>tcp_push_one (3,177 samples, 2.71%)</title><rect x="79.8123%" y="709" width="2.7106%" height="15" fill="rgb(248,181,18)" fg:x="93544" fg:w="3177"/><text x="80.0623%" y="719.50">tc..</text></g><g><title>tcp_write_xmit (3,148 samples, 2.69%)</title><rect x="79.8370%" y="693" width="2.6859%" height="15" fill="rgb(233,39,42)" fg:x="93573" fg:w="3148"/><text x="80.0870%" y="703.50">tc..</text></g><g><title>tcp_send_mss (37 samples, 0.03%)</title><rect x="82.5255%" y="709" width="0.0316%" height="15" fill="rgb(238,110,33)" fg:x="96724" fg:w="37"/><text x="82.7755%" y="719.50"></text></g><g><title>tcp_current_mss (34 samples, 0.03%)</title><rect x="82.5280%" y="693" width="0.0290%" height="15" fill="rgb(233,195,10)" fg:x="96727" fg:w="34"/><text x="82.7780%" y="703.50"></text></g><g><title>tcp_skb_entail (23 samples, 0.02%)</title><rect x="82.5571%" y="709" width="0.0196%" height="15" fill="rgb(254,105,3)" fg:x="96761" fg:w="23"/><text x="82.8071%" y="719.50"></text></g><g><title>kmem_cache_alloc_node (25 samples, 0.02%)</title><rect x="82.6279%" y="661" width="0.0213%" height="15" fill="rgb(221,225,9)" fg:x="96844" fg:w="25"/><text x="82.8779%" y="671.50"></text></g><g><title>memset_orig (21 samples, 0.02%)</title><rect x="82.6492%" y="661" width="0.0179%" height="15" fill="rgb(224,227,45)" fg:x="96869" fg:w="21"/><text x="82.8992%" y="671.50"></text></g><g><title>kmalloc_reserve (54 samples, 0.05%)</title><rect x="82.6219%" y="677" width="0.0461%" height="15" fill="rgb(229,198,43)" fg:x="96837" fg:w="54"/><text x="82.8719%" y="687.50"></text></g><g><title>kmem_cache_alloc_node (55 samples, 0.05%)</title><rect x="82.6680%" y="677" width="0.0469%" height="15" fill="rgb(206,209,35)" fg:x="96891" fg:w="55"/><text x="82.9180%" y="687.50"></text></g><g><title>__alloc_skb (176 samples, 0.15%)</title><rect x="82.5852%" y="693" width="0.1502%" height="15" fill="rgb(245,195,53)" fg:x="96794" fg:w="176"/><text x="82.8352%" y="703.50"></text></g><g><title>should_failslab (16 samples, 0.01%)</title><rect x="82.7217%" y="677" width="0.0137%" height="15" fill="rgb(240,92,26)" fg:x="96954" fg:w="16"/><text x="82.9717%" y="687.50"></text></g><g><title>mod_memcg_state (33 samples, 0.03%)</title><rect x="82.7652%" y="661" width="0.0282%" height="15" fill="rgb(207,40,23)" fg:x="97005" fg:w="33"/><text x="83.0152%" y="671.50"></text></g><g><title>__mod_memcg_state (31 samples, 0.03%)</title><rect x="82.7669%" y="645" width="0.0264%" height="15" fill="rgb(223,111,35)" fg:x="97007" fg:w="31"/><text x="83.0169%" y="655.50"></text></g><g><title>mem_cgroup_charge_skmem (60 samples, 0.05%)</title><rect x="82.7524%" y="677" width="0.0512%" height="15" fill="rgb(229,147,28)" fg:x="96990" fg:w="60"/><text x="83.0024%" y="687.50"></text></g><g><title>try_charge_memcg (12 samples, 0.01%)</title><rect x="82.7934%" y="661" width="0.0102%" height="15" fill="rgb(211,29,28)" fg:x="97038" fg:w="12"/><text x="83.0434%" y="671.50"></text></g><g><title>tcp_stream_alloc_skb (273 samples, 0.23%)</title><rect x="82.5767%" y="709" width="0.2329%" height="15" fill="rgb(228,72,33)" fg:x="96784" fg:w="273"/><text x="82.8267%" y="719.50"></text></g><g><title>sk_forced_mem_schedule (74 samples, 0.06%)</title><rect x="82.7465%" y="693" width="0.0631%" height="15" fill="rgb(205,214,31)" fg:x="96983" fg:w="74"/><text x="82.9965%" y="703.50"></text></g><g><title>mod_memcg_state (38 samples, 0.03%)</title><rect x="82.8651%" y="645" width="0.0324%" height="15" fill="rgb(224,111,15)" fg:x="97122" fg:w="38"/><text x="83.1151%" y="655.50"></text></g><g><title>__mod_memcg_state (27 samples, 0.02%)</title><rect x="82.8745%" y="629" width="0.0230%" height="15" fill="rgb(253,21,26)" fg:x="97133" fg:w="27"/><text x="83.1245%" y="639.50"></text></g><g><title>page_counter_try_charge (25 samples, 0.02%)</title><rect x="82.9265%" y="629" width="0.0213%" height="15" fill="rgb(245,139,43)" fg:x="97194" fg:w="25"/><text x="83.1765%" y="639.50"></text></g><g><title>mem_cgroup_charge_skmem (108 samples, 0.09%)</title><rect x="82.8574%" y="661" width="0.0921%" height="15" fill="rgb(252,170,7)" fg:x="97113" fg:w="108"/><text x="83.1074%" y="671.50"></text></g><g><title>try_charge_memcg (59 samples, 0.05%)</title><rect x="82.8992%" y="645" width="0.0503%" height="15" fill="rgb(231,118,14)" fg:x="97162" fg:w="59"/><text x="83.1492%" y="655.50"></text></g><g><title>tcp_leave_memory_pressure (13 samples, 0.01%)</title><rect x="82.9504%" y="661" width="0.0111%" height="15" fill="rgb(238,83,0)" fg:x="97222" fg:w="13"/><text x="83.2004%" y="671.50"></text></g><g><title>__sk_mem_raise_allocated (151 samples, 0.13%)</title><rect x="82.8335%" y="677" width="0.1288%" height="15" fill="rgb(221,39,39)" fg:x="97085" fg:w="151"/><text x="83.0835%" y="687.50"></text></g><g><title>tcp_wmem_schedule (181 samples, 0.15%)</title><rect x="82.8105%" y="709" width="0.1544%" height="15" fill="rgb(222,119,46)" fg:x="97058" fg:w="181"/><text x="83.0605%" y="719.50"></text></g><g><title>__sk_mem_schedule (163 samples, 0.14%)</title><rect x="82.8258%" y="693" width="0.1391%" height="15" fill="rgb(222,165,49)" fg:x="97076" fg:w="163"/><text x="83.0758%" y="703.50"></text></g><g><title>tcp_sendmsg_locked (8,096 samples, 6.91%)</title><rect x="76.0590%" y="725" width="6.9076%" height="15" fill="rgb(219,113,52)" fg:x="89145" fg:w="8096"/><text x="76.3090%" y="735.50">tcp_sendm..</text></g><g><title>tcp_sendmsg (8,194 samples, 6.99%)</title><rect x="75.9840%" y="741" width="6.9912%" height="15" fill="rgb(214,7,15)" fg:x="89057" fg:w="8194"/><text x="76.2340%" y="751.50">tcp_sendm..</text></g><g><title>inet6_sendmsg (8,232 samples, 7.02%)</title><rect x="75.9567%" y="757" width="7.0236%" height="15" fill="rgb(235,32,4)" fg:x="89025" fg:w="8232"/><text x="76.2067%" y="767.50">inet6_sen..</text></g><g><title>security_socket_sendmsg (23 samples, 0.02%)</title><rect x="82.9862%" y="757" width="0.0196%" height="15" fill="rgb(238,90,54)" fg:x="97264" fg:w="23"/><text x="83.2362%" y="767.50"></text></g><g><title>apparmor_socket_sendmsg (18 samples, 0.02%)</title><rect x="82.9905%" y="741" width="0.0154%" height="15" fill="rgb(213,208,19)" fg:x="97269" fg:w="18"/><text x="83.2405%" y="751.50"></text></g><g><title>aa_sk_perm (16 samples, 0.01%)</title><rect x="82.9922%" y="725" width="0.0137%" height="15" fill="rgb(233,156,4)" fg:x="97271" fg:w="16"/><text x="83.2422%" y="735.50"></text></g><g><title>do_iter_readv_writev (8,318 samples, 7.10%)</title><rect x="75.9097%" y="789" width="7.0970%" height="15" fill="rgb(207,194,5)" fg:x="88970" fg:w="8318"/><text x="76.1597%" y="799.50">do_iter_re..</text></g><g><title>sock_write_iter (8,289 samples, 7.07%)</title><rect x="75.9345%" y="773" width="7.0722%" height="15" fill="rgb(206,111,30)" fg:x="88999" fg:w="8289"/><text x="76.1845%" y="783.50">sock_writ..</text></g><g><title>apparmor_file_permission (12 samples, 0.01%)</title><rect x="83.0067%" y="773" width="0.0102%" height="15" fill="rgb(243,70,54)" fg:x="97288" fg:w="12"/><text x="83.2567%" y="783.50"></text></g><g><title>rw_verify_area (49 samples, 0.04%)</title><rect x="83.0067%" y="789" width="0.0418%" height="15" fill="rgb(242,28,8)" fg:x="97288" fg:w="49"/><text x="83.2567%" y="799.50"></text></g><g><title>security_file_permission (37 samples, 0.03%)</title><rect x="83.0169%" y="773" width="0.0316%" height="15" fill="rgb(219,106,18)" fg:x="97300" fg:w="37"/><text x="83.2669%" y="783.50"></text></g><g><title>apparmor_file_permission (28 samples, 0.02%)</title><rect x="83.0246%" y="757" width="0.0239%" height="15" fill="rgb(244,222,10)" fg:x="97309" fg:w="28"/><text x="83.2746%" y="767.50"></text></g><g><title>do_iter_write (8,403 samples, 7.17%)</title><rect x="75.8884%" y="805" width="7.1695%" height="15" fill="rgb(236,179,52)" fg:x="88945" fg:w="8403"/><text x="76.1384%" y="815.50">do_iter_wr..</text></g><g><title>__import_iovec (20 samples, 0.02%)</title><rect x="83.0579%" y="789" width="0.0171%" height="15" fill="rgb(213,23,39)" fg:x="97348" fg:w="20"/><text x="83.3079%" y="799.50"></text></g><g><title>import_iovec (23 samples, 0.02%)</title><rect x="83.0579%" y="805" width="0.0196%" height="15" fill="rgb(238,48,10)" fg:x="97348" fg:w="23"/><text x="83.3079%" y="815.50"></text></g><g><title>do_writev (8,519 samples, 7.27%)</title><rect x="75.8150%" y="837" width="7.2685%" height="15" fill="rgb(251,196,23)" fg:x="88859" fg:w="8519"/><text x="76.0650%" y="847.50">do_writev</text></g><g><title>vfs_writev (8,451 samples, 7.21%)</title><rect x="75.8730%" y="821" width="7.2104%" height="15" fill="rgb(250,152,24)" fg:x="88927" fg:w="8451"/><text x="76.1230%" y="831.50">vfs_writev</text></g><g><title>__x64_sys_writev (8,529 samples, 7.28%)</title><rect x="75.8150%" y="853" width="7.2770%" height="15" fill="rgb(209,150,17)" fg:x="88859" fg:w="8529"/><text x="76.0650%" y="863.50">__x64_sys_..</text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.01%)</title><rect x="83.1748%" y="837" width="0.0111%" height="15" fill="rgb(234,202,34)" fg:x="97485" fg:w="13"/><text x="83.4248%" y="847.50"></text></g><g><title>do_syscall_64 (8,652 samples, 7.38%)</title><rect x="75.8056%" y="869" width="7.3819%" height="15" fill="rgb(253,148,53)" fg:x="88848" fg:w="8652"/><text x="76.0556%" y="879.50">do_syscall..</text></g><g><title>syscall_exit_to_user_mode (102 samples, 0.09%)</title><rect x="83.1006%" y="853" width="0.0870%" height="15" fill="rgb(218,129,16)" fg:x="97398" fg:w="102"/><text x="83.3506%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8,718 samples, 7.44%)</title><rect x="75.7519%" y="885" width="7.4382%" height="15" fill="rgb(216,85,19)" fg:x="88785" fg:w="8718"/><text x="76.0019%" y="895.50">entry_SYSC..</text></g><g><title>__GI___writev (8,838 samples, 7.54%)</title><rect x="75.7041%" y="901" width="7.5406%" height="15" fill="rgb(235,228,7)" fg:x="88729" fg:w="8838"/><text x="75.9541%" y="911.50">__GI___wri..</text></g><g><title>syscall_return_via_sysret (62 samples, 0.05%)</title><rect x="83.1918%" y="885" width="0.0529%" height="15" fill="rgb(245,175,0)" fg:x="97505" fg:w="62"/><text x="83.4418%" y="895.50"></text></g><g><title>uv__try_write (8,856 samples, 7.56%)</title><rect x="75.6973%" y="917" width="7.5560%" height="15" fill="rgb(208,168,36)" fg:x="88721" fg:w="8856"/><text x="75.9473%" y="927.50">uv__try_wr..</text></g><g><title>node::StreamBase::Write (8,913 samples, 7.60%)</title><rect x="75.6555%" y="949" width="7.6046%" height="15" fill="rgb(246,171,24)" fg:x="88672" fg:w="8913"/><text x="75.9055%" y="959.50">node::Stre..</text></g><g><title>non-virtual thunk to node::LibuvStreamWrap::DoTryWrite (8,884 samples, 7.58%)</title><rect x="75.6802%" y="933" width="7.5799%" height="15" fill="rgb(215,142,24)" fg:x="88701" fg:w="8884"/><text x="75.9302%" y="943.50">non-virtua..</text></g><g><title>asm_common_interrupt (12 samples, 0.01%)</title><rect x="88.6788%" y="917" width="0.0102%" height="15" fill="rgb(250,187,7)" fg:x="103936" fg:w="12"/><text x="88.9288%" y="927.50"></text></g><g><title>common_interrupt (12 samples, 0.01%)</title><rect x="88.6788%" y="901" width="0.0102%" height="15" fill="rgb(228,66,33)" fg:x="103936" fg:w="12"/><text x="88.9288%" y="911.50"></text></g><g><title>__hrtimer_run_queues (14 samples, 0.01%)</title><rect x="88.6899%" y="853" width="0.0119%" height="15" fill="rgb(234,215,21)" fg:x="103949" fg:w="14"/><text x="88.9399%" y="863.50"></text></g><g><title>tick_sched_timer (13 samples, 0.01%)</title><rect x="88.6908%" y="837" width="0.0111%" height="15" fill="rgb(222,191,20)" fg:x="103950" fg:w="13"/><text x="88.9408%" y="847.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (17 samples, 0.01%)</title><rect x="88.6890%" y="917" width="0.0145%" height="15" fill="rgb(245,79,54)" fg:x="103948" fg:w="17"/><text x="88.9390%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (17 samples, 0.01%)</title><rect x="88.6890%" y="901" width="0.0145%" height="15" fill="rgb(240,10,37)" fg:x="103948" fg:w="17"/><text x="88.9390%" y="911.50"></text></g><g><title>__sysvec_apic_timer_interrupt (17 samples, 0.01%)</title><rect x="88.6890%" y="885" width="0.0145%" height="15" fill="rgb(214,192,32)" fg:x="103948" fg:w="17"/><text x="88.9390%" y="895.50"></text></g><g><title>hrtimer_interrupt (16 samples, 0.01%)</title><rect x="88.6899%" y="869" width="0.0137%" height="15" fill="rgb(209,36,54)" fg:x="103949" fg:w="16"/><text x="88.9399%" y="879.50"></text></g><g><title>non-virtual thunk to node::PerIsolatePlatformData::PostNonNestableTask (13 samples, 0.01%)</title><rect x="88.7607%" y="805" width="0.0111%" height="15" fill="rgb(220,10,11)" fg:x="104032" fg:w="13"/><text x="89.0107%" y="815.50"></text></g><g><title>v8::internal::AllocationCounter::InvokeAllocationObservers (29 samples, 0.02%)</title><rect x="88.7522%" y="853" width="0.0247%" height="15" fill="rgb(221,106,17)" fg:x="104022" fg:w="29"/><text x="89.0022%" y="863.50"></text></g><g><title>v8::internal::ScheduleMinorGCTaskObserver::Step (28 samples, 0.02%)</title><rect x="88.7530%" y="837" width="0.0239%" height="15" fill="rgb(251,142,44)" fg:x="104023" fg:w="28"/><text x="89.0030%" y="847.50"></text></g><g><title>v8::internal::MinorGCJob::ScheduleTaskIfNeeded (26 samples, 0.02%)</title><rect x="88.7547%" y="821" width="0.0222%" height="15" fill="rgb(238,13,15)" fg:x="104025" fg:w="26"/><text x="89.0047%" y="831.50"></text></g><g><title>__GI___printf_fp_l (38 samples, 0.03%)</title><rect x="88.8187%" y="709" width="0.0324%" height="15" fill="rgb(208,107,27)" fg:x="104100" fg:w="38"/><text x="89.0687%" y="719.50"></text></g><g><title>__vsnprintf_internal (72 samples, 0.06%)</title><rect x="88.8000%" y="741" width="0.0614%" height="15" fill="rgb(205,136,37)" fg:x="104078" fg:w="72"/><text x="89.0500%" y="751.50"></text></g><g><title>__vfprintf_internal (67 samples, 0.06%)</title><rect x="88.8042%" y="725" width="0.0572%" height="15" fill="rgb(250,205,27)" fg:x="104083" fg:w="67"/><text x="89.0542%" y="735.50"></text></g><g><title>v8::base::OS::VSNPrintF (74 samples, 0.06%)</title><rect x="88.7991%" y="757" width="0.0631%" height="15" fill="rgb(210,80,43)" fg:x="104077" fg:w="74"/><text x="89.0491%" y="767.50"></text></g><g><title>v8::internal::GCTracer::Output (75 samples, 0.06%)</title><rect x="88.7991%" y="773" width="0.0640%" height="15" fill="rgb(247,160,36)" fg:x="104077" fg:w="75"/><text x="89.0491%" y="783.50"></text></g><g><title>v8::internal::GCTracer::Print (90 samples, 0.08%)</title><rect x="88.7897%" y="789" width="0.0768%" height="15" fill="rgb(234,13,49)" fg:x="104066" fg:w="90"/><text x="89.0397%" y="799.50"></text></g><g><title>v8::internal::GCTracer::UpdateStatistics (92 samples, 0.08%)</title><rect x="88.7889%" y="805" width="0.0785%" height="15" fill="rgb(234,122,0)" fg:x="104065" fg:w="92"/><text x="89.0389%" y="815.50"></text></g><g><title>v8::internal::Heap::NewSpaceAllocationCounter (83 samples, 0.07%)</title><rect x="88.8981%" y="773" width="0.0708%" height="15" fill="rgb(207,146,38)" fg:x="104193" fg:w="83"/><text x="89.1481%" y="783.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AllocatedSinceLastGC (83 samples, 0.07%)</title><rect x="88.8981%" y="757" width="0.0708%" height="15" fill="rgb(207,177,25)" fg:x="104193" fg:w="83"/><text x="89.1481%" y="767.50"></text></g><g><title>v8::internal::GCTracer::StartInSafepoint (93 samples, 0.08%)</title><rect x="88.8930%" y="789" width="0.0793%" height="15" fill="rgb(211,178,42)" fg:x="104187" fg:w="93"/><text x="89.1430%" y="799.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (29 samples, 0.02%)</title><rect x="88.9774%" y="789" width="0.0247%" height="15" fill="rgb(230,69,54)" fg:x="104286" fg:w="29"/><text x="89.2274%" y="799.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::MakeAllPagesInFromSpaceIterable (18 samples, 0.02%)</title><rect x="88.9868%" y="773" width="0.0154%" height="15" fill="rgb(214,135,41)" fg:x="104297" fg:w="18"/><text x="89.2368%" y="783.50"></text></g><g><title>v8::internal::Heap::CreateFillerObjectAt (17 samples, 0.01%)</title><rect x="88.9877%" y="757" width="0.0145%" height="15" fill="rgb(237,67,25)" fg:x="104298" fg:w="17"/><text x="89.2377%" y="767.50"></text></g><g><title>v8::internal::ConcurrentMarking::ClearMemoryChunkData (17 samples, 0.01%)</title><rect x="89.0721%" y="757" width="0.0145%" height="15" fill="rgb(222,189,50)" fg:x="104397" fg:w="17"/><text x="89.3221%" y="767.50"></text></g><g><title>v8::internal::(anonymous namespace)::IterateObjectCache (221 samples, 0.19%)</title><rect x="89.0909%" y="741" width="0.1886%" height="15" fill="rgb(245,148,34)" fg:x="104419" fg:w="221"/><text x="89.3409%" y="751.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (80 samples, 0.07%)</title><rect x="89.2112%" y="725" width="0.0683%" height="15" fill="rgb(222,29,6)" fg:x="104560" fg:w="80"/><text x="89.4612%" y="735.50"></text></g><g><title>v8::internal::HandleScopeImplementer::IterateThis (12 samples, 0.01%)</title><rect x="89.2820%" y="741" width="0.0102%" height="15" fill="rgb(221,189,43)" fg:x="104643" fg:w="12"/><text x="89.5320%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (29 samples, 0.02%)</title><rect x="89.2948%" y="661" width="0.0247%" height="15" fill="rgb(207,36,27)" fg:x="104658" fg:w="29"/><text x="89.5448%" y="671.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateShortcutCandidate&lt;v8::internal::FullHeapObjectSlot&gt; (31 samples, 0.03%)</title><rect x="89.2940%" y="677" width="0.0264%" height="15" fill="rgb(217,90,24)" fg:x="104657" fg:w="31"/><text x="89.5440%" y="687.50"></text></g><g><title>v8::internal::(anonymous namespace)::VisitSpillSlots (33 samples, 0.03%)</title><rect x="89.2931%" y="709" width="0.0282%" height="15" fill="rgb(224,66,35)" fg:x="104656" fg:w="33"/><text x="89.5431%" y="719.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (32 samples, 0.03%)</title><rect x="89.2940%" y="693" width="0.0273%" height="15" fill="rgb(221,13,50)" fg:x="104657" fg:w="32"/><text x="89.5440%" y="703.50"></text></g><g><title>v8::internal::CommonFrame::IterateTurbofanOptimizedFrame (40 samples, 0.03%)</title><rect x="89.2931%" y="725" width="0.0341%" height="15" fill="rgb(236,68,49)" fg:x="104656" fg:w="40"/><text x="89.5431%" y="735.50"></text></g><g><title>v8::internal::Isolate::Iterate (57 samples, 0.05%)</title><rect x="89.2923%" y="741" width="0.0486%" height="15" fill="rgb(229,146,28)" fg:x="104655" fg:w="57"/><text x="89.5423%" y="751.50"></text></g><g><title>v8::internal::Heap::IterateRoots (300 samples, 0.26%)</title><rect x="89.0901%" y="757" width="0.2560%" height="15" fill="rgb(225,31,38)" fg:x="104418" fg:w="300"/><text x="89.3401%" y="767.50"></text></g><g><title>v8::internal::Scavenger::Finalize (12 samples, 0.01%)</title><rect x="89.3486%" y="757" width="0.0102%" height="15" fill="rgb(250,208,3)" fg:x="104721" fg:w="12"/><text x="89.5986%" y="767.50"></text></g><g><title>malloc (15 samples, 0.01%)</title><rect x="89.3759%" y="709" width="0.0128%" height="15" fill="rgb(246,54,23)" fg:x="104753" fg:w="15"/><text x="89.6259%" y="719.50"></text></g><g><title>operator new (17 samples, 0.01%)</title><rect x="89.3759%" y="725" width="0.0145%" height="15" fill="rgb(243,76,11)" fg:x="104753" fg:w="17"/><text x="89.6259%" y="735.50"></text></g><g><title>v8::internal::FreeList::CreateFreeList (21 samples, 0.02%)</title><rect x="89.3759%" y="741" width="0.0179%" height="15" fill="rgb(245,21,50)" fg:x="104753" fg:w="21"/><text x="89.6259%" y="751.50"></text></g><g><title>v8::internal::Scavenger::Scavenger (56 samples, 0.05%)</title><rect x="89.3622%" y="757" width="0.0478%" height="15" fill="rgb(228,9,43)" fg:x="104737" fg:w="56"/><text x="89.6122%" y="767.50"></text></g><g><title>v8::internal::PagedSpaceBase::PagedSpaceBase (19 samples, 0.02%)</title><rect x="89.3938%" y="741" width="0.0162%" height="15" fill="rgb(208,100,47)" fg:x="104774" fg:w="19"/><text x="89.6438%" y="751.50"></text></g><g><title>v8::internal::Scavenger::~Scavenger (30 samples, 0.03%)</title><rect x="89.4100%" y="757" width="0.0256%" height="15" fill="rgb(232,26,8)" fg:x="104793" fg:w="30"/><text x="89.6600%" y="767.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.01%)</title><rect x="89.4424%" y="629" width="0.0119%" height="15" fill="rgb(216,166,38)" fg:x="104831" fg:w="14"/><text x="89.6924%" y="639.50"></text></g><g><title>do_futex (13 samples, 0.01%)</title><rect x="89.4433%" y="613" width="0.0111%" height="15" fill="rgb(251,202,51)" fg:x="104832" fg:w="13"/><text x="89.6933%" y="623.50"></text></g><g><title>futex_wake (12 samples, 0.01%)</title><rect x="89.4441%" y="597" width="0.0102%" height="15" fill="rgb(254,216,34)" fg:x="104833" fg:w="12"/><text x="89.6941%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="89.4416%" y="661" width="0.0171%" height="15" fill="rgb(251,32,27)" fg:x="104830" fg:w="20"/><text x="89.6916%" y="671.50"></text></g><g><title>do_syscall_64 (19 samples, 0.02%)</title><rect x="89.4424%" y="645" width="0.0162%" height="15" fill="rgb(208,127,28)" fg:x="104831" fg:w="19"/><text x="89.6924%" y="655.50"></text></g><g><title>pthread_cond_signal@@GLIBC_2.3.2 (28 samples, 0.02%)</title><rect x="89.4382%" y="677" width="0.0239%" height="15" fill="rgb(224,137,22)" fg:x="104826" fg:w="28"/><text x="89.6882%" y="687.50"></text></g><g><title>uv_cond_signal (29 samples, 0.02%)</title><rect x="89.4382%" y="693" width="0.0247%" height="15" fill="rgb(254,70,32)" fg:x="104826" fg:w="29"/><text x="89.6882%" y="703.50"></text></g><g><title>node::TaskQueue&lt;v8::Task&gt;::Push (30 samples, 0.03%)</title><rect x="89.4382%" y="709" width="0.0256%" height="15" fill="rgb(229,75,37)" fg:x="104826" fg:w="30"/><text x="89.6882%" y="719.50"></text></g><g><title>node::NodePlatform::CallOnWorkerThread (32 samples, 0.03%)</title><rect x="89.4382%" y="725" width="0.0273%" height="15" fill="rgb(252,64,23)" fg:x="104826" fg:w="32"/><text x="89.6882%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (374 samples, 0.32%)</title><rect x="89.5934%" y="645" width="0.3191%" height="15" fill="rgb(232,162,48)" fg:x="105008" fg:w="374"/><text x="89.8434%" y="655.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateShortcutCandidate&lt;v8::internal::FullHeapObjectSlot&gt; (404 samples, 0.34%)</title><rect x="89.5764%" y="661" width="0.3447%" height="15" fill="rgb(246,160,12)" fg:x="104988" fg:w="404"/><text x="89.8264%" y="671.50"></text></g><g><title>v8::internal::Scavenger::Process (551 samples, 0.47%)</title><rect x="89.4680%" y="709" width="0.4701%" height="15" fill="rgb(247,166,0)" fg:x="104861" fg:w="551"/><text x="89.7180%" y="719.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (523 samples, 0.45%)</title><rect x="89.4919%" y="693" width="0.4462%" height="15" fill="rgb(249,219,21)" fg:x="104889" fg:w="523"/><text x="89.7419%" y="703.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (508 samples, 0.43%)</title><rect x="89.5047%" y="677" width="0.4334%" height="15" fill="rgb(205,209,3)" fg:x="104904" fg:w="508"/><text x="89.7547%" y="687.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (14 samples, 0.01%)</title><rect x="89.9808%" y="677" width="0.0119%" height="15" fill="rgb(243,44,1)" fg:x="105462" fg:w="14"/><text x="90.2308%" y="687.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (619 samples, 0.53%)</title><rect x="89.4680%" y="725" width="0.5281%" height="15" fill="rgb(206,159,16)" fg:x="104861" fg:w="619"/><text x="89.7180%" y="735.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ConcurrentScavengePages (68 samples, 0.06%)</title><rect x="89.9381%" y="709" width="0.0580%" height="15" fill="rgb(244,77,30)" fg:x="105412" fg:w="68"/><text x="90.1881%" y="719.50"></text></g><g><title>v8::internal::Scavenger::ScavengePage (66 samples, 0.06%)</title><rect x="89.9398%" y="693" width="0.0563%" height="15" fill="rgb(218,69,12)" fg:x="105414" fg:w="66"/><text x="90.1898%" y="703.50"></text></g><g><title>v8::platform::DefaultJobState::Join (659 samples, 0.56%)</title><rect x="89.4373%" y="741" width="0.5623%" height="15" fill="rgb(212,87,7)" fg:x="104825" fg:w="659"/><text x="89.6873%" y="751.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (666 samples, 0.57%)</title><rect x="89.4373%" y="757" width="0.5682%" height="15" fill="rgb(245,114,25)" fg:x="104825" fg:w="666"/><text x="89.6873%" y="767.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1,161 samples, 0.99%)</title><rect x="89.0158%" y="773" width="0.9906%" height="15" fill="rgb(210,61,42)" fg:x="104331" fg:w="1161"/><text x="89.2658%" y="783.50"></text></g><g><title>v8::internal::ConcurrentMarking::ClearMemoryChunkData (20 samples, 0.02%)</title><rect x="90.1924%" y="757" width="0.0171%" height="15" fill="rgb(211,52,33)" fg:x="105710" fg:w="20"/><text x="90.4424%" y="767.50"></text></g><g><title>v8::internal::Heap::Scavenge (1,411 samples, 1.20%)</title><rect x="89.0064%" y="789" width="1.2039%" height="15" fill="rgb(234,58,33)" fg:x="104320" fg:w="1411"/><text x="89.2564%" y="799.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EvacuatePrologue (239 samples, 0.20%)</title><rect x="90.0064%" y="773" width="0.2039%" height="15" fill="rgb(220,115,36)" fg:x="105492" fg:w="239"/><text x="90.2564%" y="783.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1,574 samples, 1.34%)</title><rect x="88.8861%" y="805" width="1.3429%" height="15" fill="rgb(243,153,54)" fg:x="104179" fg:w="1574"/><text x="89.1361%" y="815.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1,707 samples, 1.46%)</title><rect x="88.7803%" y="821" width="1.4564%" height="15" fill="rgb(251,47,18)" fg:x="104055" fg:w="1707"/><text x="89.0303%" y="831.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1,712 samples, 1.46%)</title><rect x="88.7769%" y="853" width="1.4607%" height="15" fill="rgb(242,102,42)" fg:x="104051" fg:w="1712"/><text x="89.0269%" y="863.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1,711 samples, 1.46%)</title><rect x="88.7778%" y="837" width="1.4598%" height="15" fill="rgb(234,31,38)" fg:x="104052" fg:w="1711"/><text x="89.0278%" y="847.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AddFreshPage (75 samples, 0.06%)</title><rect x="90.2436%" y="837" width="0.0640%" height="15" fill="rgb(221,117,51)" fg:x="105770" fg:w="75"/><text x="90.4936%" y="847.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::UpdateLinearAllocationArea (68 samples, 0.06%)</title><rect x="90.2496%" y="821" width="0.0580%" height="15" fill="rgb(212,20,18)" fg:x="105777" fg:w="68"/><text x="90.4996%" y="831.50"></text></g><g><title>v8::internal::SpaceWithLinearArea::AdvanceAllocationObservers (12 samples, 0.01%)</title><rect x="90.3076%" y="837" width="0.0102%" height="15" fill="rgb(245,133,36)" fg:x="105845" fg:w="12"/><text x="90.5576%" y="847.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EnsureAllocation (95 samples, 0.08%)</title><rect x="90.2376%" y="853" width="0.0811%" height="15" fill="rgb(212,6,19)" fg:x="105763" fg:w="95"/><text x="90.4876%" y="863.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (1,886 samples, 1.61%)</title><rect x="88.7104%" y="901" width="1.6091%" height="15" fill="rgb(218,1,36)" fg:x="103973" fg:w="1886"/><text x="88.9604%" y="911.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1,858 samples, 1.59%)</title><rect x="88.7343%" y="885" width="1.5853%" height="15" fill="rgb(246,84,54)" fg:x="104001" fg:w="1858"/><text x="88.9843%" y="895.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1,853 samples, 1.58%)</title><rect x="88.7385%" y="869" width="1.5810%" height="15" fill="rgb(242,110,6)" fg:x="104006" fg:w="1853"/><text x="88.9885%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,510 samples, 2.14%)</title><rect x="90.3221%" y="885" width="2.1415%" height="15" fill="rgb(214,47,5)" fg:x="105862" fg:w="2510"/><text x="90.5721%" y="895.50">_..</text></g><g><title>v8::internal::String::SlowFlatten (4,507 samples, 3.85%)</title><rect x="88.7044%" y="917" width="3.8454%" height="15" fill="rgb(218,159,25)" fg:x="103966" fg:w="4507"/><text x="88.9544%" y="927.50">v8::..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (2,612 samples, 2.23%)</title><rect x="90.3212%" y="901" width="2.2286%" height="15" fill="rgb(215,211,28)" fg:x="105861" fg:w="2612"/><text x="90.5712%" y="911.50">v..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (100 samples, 0.09%)</title><rect x="92.4645%" y="885" width="0.0853%" height="15" fill="rgb(238,59,32)" fg:x="108373" fg:w="100"/><text x="92.7145%" y="895.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (91 samples, 0.08%)</title><rect x="92.4722%" y="869" width="0.0776%" height="15" fill="rgb(226,82,3)" fg:x="108382" fg:w="91"/><text x="92.7222%" y="879.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (49 samples, 0.04%)</title><rect x="92.5080%" y="853" width="0.0418%" height="15" fill="rgb(240,164,32)" fg:x="108424" fg:w="49"/><text x="92.7580%" y="863.50"></text></g><g><title>v8::String::Utf8Length (10,877 samples, 9.28%)</title><rect x="83.2703%" y="933" width="9.2803%" height="15" fill="rgb(232,46,7)" fg:x="97597" fg:w="10877"/><text x="83.5203%" y="943.50">v8::String::U..</text></g><g><title>node::StringBytes::Size (10,890 samples, 9.29%)</title><rect x="83.2601%" y="949" width="9.2914%" height="15" fill="rgb(229,129,53)" fg:x="97585" fg:w="10890"/><text x="83.5101%" y="959.50">node::StringB..</text></g><g><title>node::StringBytes::StorageSize (24 samples, 0.02%)</title><rect x="92.5515%" y="949" width="0.0205%" height="15" fill="rgb(234,188,29)" fg:x="108475" fg:w="24"/><text x="92.8015%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,163 samples, 0.99%)</title><rect x="93.5583%" y="917" width="0.9923%" height="15" fill="rgb(246,141,4)" fg:x="109655" fg:w="1163"/><text x="93.8083%" y="927.50"></text></g><g><title>node::StringBytes::Write (2,323 samples, 1.98%)</title><rect x="92.5720%" y="949" width="1.9820%" height="15" fill="rgb(229,23,39)" fg:x="108499" fg:w="2323"/><text x="92.8220%" y="959.50">n..</text></g><g><title>v8::String::WriteUtf8 (2,287 samples, 1.95%)</title><rect x="92.6027%" y="933" width="1.9513%" height="15" fill="rgb(206,12,3)" fg:x="108535" fg:w="2287"/><text x="92.8527%" y="943.50">v..</text></g><g><title>v8::Array::Length (12 samples, 0.01%)</title><rect x="94.5600%" y="949" width="0.0102%" height="15" fill="rgb(252,226,20)" fg:x="110829" fg:w="12"/><text x="94.8100%" y="959.50"></text></g><g><title>operator new (22 samples, 0.02%)</title><rect x="94.5975%" y="917" width="0.0188%" height="15" fill="rgb(216,123,35)" fg:x="110873" fg:w="22"/><text x="94.8475%" y="927.50"></text></g><g><title>malloc (71 samples, 0.06%)</title><rect x="94.6521%" y="885" width="0.0606%" height="15" fill="rgb(212,68,40)" fg:x="110937" fg:w="71"/><text x="94.9021%" y="895.50"></text></g><g><title>_int_malloc (39 samples, 0.03%)</title><rect x="94.6794%" y="869" width="0.0333%" height="15" fill="rgb(254,125,32)" fg:x="110969" fg:w="39"/><text x="94.9294%" y="879.50"></text></g><g><title>node::NodeArrayBufferAllocator::Allocate (98 samples, 0.08%)</title><rect x="94.6342%" y="901" width="0.0836%" height="15" fill="rgb(253,97,22)" fg:x="110916" fg:w="98"/><text x="94.8842%" y="911.50"></text></g><g><title>v8::internal::Heap::YoungArrayBufferBytes (14 samples, 0.01%)</title><rect x="94.7229%" y="901" width="0.0119%" height="15" fill="rgb(241,101,14)" fg:x="111020" fg:w="14"/><text x="94.9729%" y="911.50"></text></g><g><title>v8::ArrayBuffer::NewBackingStore (203 samples, 0.17%)</title><rect x="94.5702%" y="949" width="0.1732%" height="15" fill="rgb(238,103,29)" fg:x="110841" fg:w="203"/><text x="94.8202%" y="959.50"></text></g><g><title>v8::internal::BackingStore::Allocate (200 samples, 0.17%)</title><rect x="94.5728%" y="933" width="0.1706%" height="15" fill="rgb(233,195,47)" fg:x="110844" fg:w="200"/><text x="94.8228%" y="943.50"></text></g><g><title>v8::internal::Heap::AllocateExternalBackingStore (144 samples, 0.12%)</title><rect x="94.6205%" y="917" width="0.1229%" height="15" fill="rgb(246,218,30)" fg:x="110900" fg:w="144"/><text x="94.8705%" y="927.50"></text></g><g><title>v8::CallDepthScope&lt;false&gt;::CallDepthScope (17 samples, 0.01%)</title><rect x="94.7954%" y="933" width="0.0145%" height="15" fill="rgb(219,145,47)" fg:x="111105" fg:w="17"/><text x="95.0454%" y="943.50"></text></g><g><title>v8::EscapableHandleScope::EscapableHandleScope (20 samples, 0.02%)</title><rect x="94.8099%" y="933" width="0.0171%" height="15" fill="rgb(243,12,26)" fg:x="111122" fg:w="20"/><text x="95.0599%" y="943.50"></text></g><g><title>v8::internal::Object::GetProperty (32 samples, 0.03%)</title><rect x="94.8398%" y="933" width="0.0273%" height="15" fill="rgb(214,87,16)" fg:x="111157" fg:w="32"/><text x="95.0898%" y="943.50"></text></g><g><title>v8::internal::LookupIterator::FetchValue (12 samples, 0.01%)</title><rect x="94.8569%" y="917" width="0.0102%" height="15" fill="rgb(208,99,42)" fg:x="111177" fg:w="12"/><text x="95.1069%" y="927.50"></text></g><g><title>v8::Object::Get (214 samples, 0.18%)</title><rect x="94.7588%" y="949" width="0.1826%" height="15" fill="rgb(253,99,2)" fg:x="111062" fg:w="214"/><text x="95.0088%" y="959.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;true&gt; (87 samples, 0.07%)</title><rect x="94.8671%" y="933" width="0.0742%" height="15" fill="rgb(220,168,23)" fg:x="111189" fg:w="87"/><text x="95.1171%" y="943.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (60 samples, 0.05%)</title><rect x="94.8901%" y="917" width="0.0512%" height="15" fill="rgb(242,38,24)" fg:x="111216" fg:w="60"/><text x="95.1401%" y="927.50"></text></g><g><title>v8::Value::IsArrayBufferView (12 samples, 0.01%)</title><rect x="94.9507%" y="949" width="0.0102%" height="15" fill="rgb(225,182,9)" fg:x="111287" fg:w="12"/><text x="95.2007%" y="959.50"></text></g><g><title>cfree@GLIBC_2.2.5 (40 samples, 0.03%)</title><rect x="94.9925%" y="933" width="0.0341%" height="15" fill="rgb(243,178,37)" fg:x="111336" fg:w="40"/><text x="95.2425%" y="943.50"></text></g><g><title>_int_free (30 samples, 0.03%)</title><rect x="95.0011%" y="917" width="0.0256%" height="15" fill="rgb(232,139,19)" fg:x="111346" fg:w="30"/><text x="95.2511%" y="927.50"></text></g><g><title>node::NodeArrayBufferAllocator::Free (13 samples, 0.01%)</title><rect x="95.0309%" y="933" width="0.0111%" height="15" fill="rgb(225,201,24)" fg:x="111381" fg:w="13"/><text x="95.2809%" y="943.50"></text></g><g><title>node::StreamBase::Writev (23,062 samples, 19.68%)</title><rect x="75.3705%" y="965" width="19.6766%" height="15" fill="rgb(221,47,46)" fg:x="88338" fg:w="23062"/><text x="75.6205%" y="975.50">node::StreamBase::Writev</text></g><g><title>v8::internal::BackingStore::~BackingStore (76 samples, 0.06%)</title><rect x="94.9823%" y="949" width="0.0648%" height="15" fill="rgb(249,23,13)" fg:x="111324" fg:w="76"/><text x="95.2323%" y="959.50"></text></g><g><title>[perf-1098963.map] (110,262 samples, 94.08%)</title><rect x="0.9795%" y="997" width="94.0762%" height="15" fill="rgb(219,9,5)" fg:x="1148" fg:w="110262"/><text x="1.2295%" y="1007.50">[perf-1098963.map]</text></g><g><title>void node::StreamBase::JSMethod&lt;&amp;node::StreamBase::Writev&gt; (23,139 samples, 19.74%)</title><rect x="75.3133%" y="981" width="19.7423%" height="15" fill="rgb(254,171,16)" fg:x="88271" fg:w="23139"/><text x="75.5633%" y="991.50">void node::StreamBase::JSMethod..</text></g><g><title>node::SpinEventLoopInternal (40 samples, 0.03%)</title><rect x="95.0659%" y="981" width="0.0341%" height="15" fill="rgb(230,171,20)" fg:x="111422" fg:w="40"/><text x="95.3159%" y="991.50"></text></g><g><title>uv_run (40 samples, 0.03%)</title><rect x="95.0659%" y="965" width="0.0341%" height="15" fill="rgb(210,71,41)" fg:x="111422" fg:w="40"/><text x="95.3159%" y="975.50"></text></g><g><title>uv__io_poll (40 samples, 0.03%)</title><rect x="95.0659%" y="949" width="0.0341%" height="15" fill="rgb(206,173,20)" fg:x="111422" fg:w="40"/><text x="95.3159%" y="959.50"></text></g><g><title>uv__stream_io (40 samples, 0.03%)</title><rect x="95.0659%" y="933" width="0.0341%" height="15" fill="rgb(233,88,34)" fg:x="111422" fg:w="40"/><text x="95.3159%" y="943.50"></text></g><g><title>uv__read (40 samples, 0.03%)</title><rect x="95.0659%" y="917" width="0.0341%" height="15" fill="rgb(223,209,46)" fg:x="111422" fg:w="40"/><text x="95.3159%" y="927.50"></text></g><g><title>__fdget (17 samples, 0.01%)</title><rect x="95.1888%" y="789" width="0.0145%" height="15" fill="rgb(250,43,18)" fg:x="111566" fg:w="17"/><text x="95.4388%" y="799.50"></text></g><g><title>__fget_light (16 samples, 0.01%)</title><rect x="95.1896%" y="773" width="0.0137%" height="15" fill="rgb(208,13,10)" fg:x="111567" fg:w="16"/><text x="95.4396%" y="783.50"></text></g><g><title>sock_poll (60 samples, 0.05%)</title><rect x="95.2314%" y="741" width="0.0512%" height="15" fill="rgb(212,200,36)" fg:x="111616" fg:w="60"/><text x="95.4814%" y="751.50"></text></g><g><title>tcp_poll (23 samples, 0.02%)</title><rect x="95.2630%" y="725" width="0.0196%" height="15" fill="rgb(225,90,30)" fg:x="111653" fg:w="23"/><text x="95.5130%" y="735.50"></text></g><g><title>ep_item_poll.isra.0 (69 samples, 0.06%)</title><rect x="95.2246%" y="757" width="0.0589%" height="15" fill="rgb(236,182,39)" fg:x="111608" fg:w="69"/><text x="95.4746%" y="767.50"></text></g><g><title>ep_send_events (92 samples, 0.08%)</title><rect x="95.2118%" y="773" width="0.0785%" height="15" fill="rgb(212,144,35)" fg:x="111593" fg:w="92"/><text x="95.4618%" y="783.50"></text></g><g><title>do_epoll_wait (125 samples, 0.11%)</title><rect x="95.1854%" y="805" width="0.1067%" height="15" fill="rgb(228,63,44)" fg:x="111562" fg:w="125"/><text x="95.4354%" y="815.50"></text></g><g><title>ep_poll (104 samples, 0.09%)</title><rect x="95.2033%" y="789" width="0.0887%" height="15" fill="rgb(228,109,6)" fg:x="111583" fg:w="104"/><text x="95.4533%" y="799.50"></text></g><g><title>do_epoll_pwait.part.0 (136 samples, 0.12%)</title><rect x="95.1785%" y="821" width="0.1160%" height="15" fill="rgb(238,117,24)" fg:x="111554" fg:w="136"/><text x="95.4285%" y="831.50"></text></g><g><title>__x64_sys_epoll_pwait (138 samples, 0.12%)</title><rect x="95.1777%" y="837" width="0.1177%" height="15" fill="rgb(242,26,26)" fg:x="111553" fg:w="138"/><text x="95.4277%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (161 samples, 0.14%)</title><rect x="95.1683%" y="869" width="0.1374%" height="15" fill="rgb(221,92,48)" fg:x="111542" fg:w="161"/><text x="95.4183%" y="879.50"></text></g><g><title>do_syscall_64 (157 samples, 0.13%)</title><rect x="95.1717%" y="853" width="0.1340%" height="15" fill="rgb(209,209,32)" fg:x="111546" fg:w="157"/><text x="95.4217%" y="863.50"></text></g><g><title>epoll_pwait (185 samples, 0.16%)</title><rect x="95.1555%" y="885" width="0.1578%" height="15" fill="rgb(221,70,22)" fg:x="111527" fg:w="185"/><text x="95.4055%" y="895.50"></text></g><g><title>node::Start (273 samples, 0.23%)</title><rect x="95.1000%" y="981" width="0.2329%" height="15" fill="rgb(248,145,5)" fg:x="111462" fg:w="273"/><text x="95.3500%" y="991.50"></text></g><g><title>node::NodeMainInstance::Run (273 samples, 0.23%)</title><rect x="95.1000%" y="965" width="0.2329%" height="15" fill="rgb(226,116,26)" fg:x="111462" fg:w="273"/><text x="95.3500%" y="975.50"></text></g><g><title>node::NodeMainInstance::Run (273 samples, 0.23%)</title><rect x="95.1000%" y="949" width="0.2329%" height="15" fill="rgb(244,5,17)" fg:x="111462" fg:w="273"/><text x="95.3500%" y="959.50"></text></g><g><title>node::SpinEventLoopInternal (273 samples, 0.23%)</title><rect x="95.1000%" y="933" width="0.2329%" height="15" fill="rgb(252,159,33)" fg:x="111462" fg:w="273"/><text x="95.3500%" y="943.50"></text></g><g><title>uv_run (273 samples, 0.23%)</title><rect x="95.1000%" y="917" width="0.2329%" height="15" fill="rgb(206,71,0)" fg:x="111462" fg:w="273"/><text x="95.3500%" y="927.50"></text></g><g><title>uv__io_poll (273 samples, 0.23%)</title><rect x="95.1000%" y="901" width="0.2329%" height="15" fill="rgb(233,118,54)" fg:x="111462" fg:w="273"/><text x="95.3500%" y="911.50"></text></g><g><title>uv__stream_io (19 samples, 0.02%)</title><rect x="95.3168%" y="885" width="0.0162%" height="15" fill="rgb(234,83,48)" fg:x="111716" fg:w="19"/><text x="95.5668%" y="895.50"></text></g><g><title>epoll_pwait (15 samples, 0.01%)</title><rect x="95.3406%" y="965" width="0.0128%" height="15" fill="rgb(228,3,54)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="95.3406%" y="949" width="0.0128%" height="15" fill="rgb(226,155,13)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="959.50"></text></g><g><title>do_syscall_64 (15 samples, 0.01%)</title><rect x="95.3406%" y="933" width="0.0128%" height="15" fill="rgb(241,28,37)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="943.50"></text></g><g><title>__x64_sys_epoll_pwait (15 samples, 0.01%)</title><rect x="95.3406%" y="917" width="0.0128%" height="15" fill="rgb(233,93,10)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="927.50"></text></g><g><title>do_epoll_pwait.part.0 (15 samples, 0.01%)</title><rect x="95.3406%" y="901" width="0.0128%" height="15" fill="rgb(225,113,19)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="911.50"></text></g><g><title>do_epoll_wait (15 samples, 0.01%)</title><rect x="95.3406%" y="885" width="0.0128%" height="15" fill="rgb(241,2,18)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="895.50"></text></g><g><title>ep_poll (15 samples, 0.01%)</title><rect x="95.3406%" y="869" width="0.0128%" height="15" fill="rgb(228,207,21)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="879.50"></text></g><g><title>schedule_hrtimeout_range (15 samples, 0.01%)</title><rect x="95.3406%" y="853" width="0.0128%" height="15" fill="rgb(213,211,35)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="863.50"></text></g><g><title>schedule_hrtimeout_range_clock (15 samples, 0.01%)</title><rect x="95.3406%" y="837" width="0.0128%" height="15" fill="rgb(209,83,10)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="847.50"></text></g><g><title>schedule (15 samples, 0.01%)</title><rect x="95.3406%" y="821" width="0.0128%" height="15" fill="rgb(209,164,1)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="831.50"></text></g><g><title>__schedule (15 samples, 0.01%)</title><rect x="95.3406%" y="805" width="0.0128%" height="15" fill="rgb(213,184,43)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="815.50"></text></g><g><title>finish_task_switch.isra.0 (15 samples, 0.01%)</title><rect x="95.3406%" y="789" width="0.0128%" height="15" fill="rgb(231,61,34)" fg:x="111744" fg:w="15"/><text x="95.5906%" y="799.50"></text></g><g><title>__perf_event_task_sched_in (14 samples, 0.01%)</title><rect x="95.3415%" y="773" width="0.0119%" height="15" fill="rgb(235,75,3)" fg:x="111745" fg:w="14"/><text x="95.5915%" y="783.50"></text></g><g><title>perf_ctx_enable (14 samples, 0.01%)</title><rect x="95.3415%" y="757" width="0.0119%" height="15" fill="rgb(220,106,47)" fg:x="111745" fg:w="14"/><text x="95.5915%" y="767.50"></text></g><g><title>x86_pmu_enable (14 samples, 0.01%)</title><rect x="95.3415%" y="741" width="0.0119%" height="15" fill="rgb(210,196,33)" fg:x="111745" fg:w="14"/><text x="95.5915%" y="751.50"></text></g><g><title>intel_pmu_enable_all (14 samples, 0.01%)</title><rect x="95.3415%" y="725" width="0.0119%" height="15" fill="rgb(229,154,42)" fg:x="111745" fg:w="14"/><text x="95.5915%" y="735.50"></text></g><g><title>native_write_msr (14 samples, 0.01%)</title><rect x="95.3415%" y="709" width="0.0119%" height="15" fill="rgb(228,114,26)" fg:x="111745" fg:w="14"/><text x="95.5915%" y="719.50"></text></g><g><title>node::PerIsolatePlatformData::RunForegroundTask (16 samples, 0.01%)</title><rect x="95.3577%" y="933" width="0.0137%" height="15" fill="rgb(208,144,1)" fg:x="111764" fg:w="16"/><text x="95.6077%" y="943.50"></text></g><g><title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (24 samples, 0.02%)</title><rect x="95.3560%" y="949" width="0.0205%" height="15" fill="rgb(239,112,37)" fg:x="111762" fg:w="24"/><text x="95.6060%" y="959.50"></text></g><g><title>uv__async_io.part.0 (44 samples, 0.04%)</title><rect x="95.3534%" y="965" width="0.0375%" height="15" fill="rgb(210,96,50)" fg:x="111759" fg:w="44"/><text x="95.6034%" y="975.50"></text></g><g><title>read (15 samples, 0.01%)</title><rect x="95.3782%" y="949" width="0.0128%" height="15" fill="rgb(222,178,2)" fg:x="111788" fg:w="15"/><text x="95.6282%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="95.3782%" y="933" width="0.0128%" height="15" fill="rgb(226,74,18)" fg:x="111788" fg:w="15"/><text x="95.6282%" y="943.50"></text></g><g><title>do_syscall_64 (15 samples, 0.01%)</title><rect x="95.3782%" y="917" width="0.0128%" height="15" fill="rgb(225,67,54)" fg:x="111788" fg:w="15"/><text x="95.6282%" y="927.50"></text></g><g><title>llhttp__after_headers_complete (13 samples, 0.01%)</title><rect x="95.6725%" y="853" width="0.0111%" height="15" fill="rgb(251,92,32)" fg:x="112133" fg:w="13"/><text x="95.9225%" y="863.50"></text></g><g><title>llhttp__on_header_field (25 samples, 0.02%)</title><rect x="95.6888%" y="853" width="0.0213%" height="15" fill="rgb(228,149,22)" fg:x="112152" fg:w="25"/><text x="95.9388%" y="863.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &amp;node::(anonymous namespace)::Parser::on_header_field&gt;::Raw (21 samples, 0.02%)</title><rect x="95.6922%" y="837" width="0.0179%" height="15" fill="rgb(243,54,13)" fg:x="112156" fg:w="21"/><text x="95.9422%" y="847.50"></text></g><g><title>llhttp__on_header_value (30 samples, 0.03%)</title><rect x="95.7118%" y="853" width="0.0256%" height="15" fill="rgb(243,180,28)" fg:x="112179" fg:w="30"/><text x="95.9618%" y="863.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &amp;node::(anonymous namespace)::Parser::on_header_value&gt;::Raw (26 samples, 0.02%)</title><rect x="95.7152%" y="837" width="0.0222%" height="15" fill="rgb(208,167,24)" fg:x="112183" fg:w="26"/><text x="95.9652%" y="847.50"></text></g><g><title>llhttp__on_message_complete (12 samples, 0.01%)</title><rect x="95.7510%" y="853" width="0.0102%" height="15" fill="rgb(245,73,45)" fg:x="112225" fg:w="12"/><text x="96.0010%" y="863.50"></text></g><g><title>node::AsyncHooks::push_async_context (12 samples, 0.01%)</title><rect x="95.8534%" y="805" width="0.0102%" height="15" fill="rgb(237,203,48)" fg:x="112345" fg:w="12"/><text x="96.1034%" y="815.50"></text></g><g><title>node::InternalCallbackScope::InternalCallbackScope (30 samples, 0.03%)</title><rect x="95.8449%" y="821" width="0.0256%" height="15" fill="rgb(211,197,16)" fg:x="112335" fg:w="30"/><text x="96.0949%" y="831.50"></text></g><g><title>node::AsyncHooks::pop_async_context (28 samples, 0.02%)</title><rect x="95.8799%" y="789" width="0.0239%" height="15" fill="rgb(243,99,51)" fg:x="112376" fg:w="28"/><text x="96.1299%" y="799.50"></text></g><g><title>v8::Array::Length (22 samples, 0.02%)</title><rect x="95.8850%" y="773" width="0.0188%" height="15" fill="rgb(215,123,29)" fg:x="112382" fg:w="22"/><text x="96.1350%" y="783.50"></text></g><g><title>node::AsyncWrap::EmitAfter (21 samples, 0.02%)</title><rect x="95.9038%" y="789" width="0.0179%" height="15" fill="rgb(239,186,37)" fg:x="112404" fg:w="21"/><text x="96.1538%" y="799.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (62 samples, 0.05%)</title><rect x="95.8705%" y="821" width="0.0529%" height="15" fill="rgb(252,136,39)" fg:x="112365" fg:w="62"/><text x="96.1205%" y="831.50"></text></g><g><title>node::InternalCallbackScope::Close (58 samples, 0.05%)</title><rect x="95.8739%" y="805" width="0.0495%" height="15" fill="rgb(223,213,32)" fg:x="112369" fg:w="58"/><text x="96.1239%" y="815.50"></text></g><g><title>v8::internal::Factory::AllocateRawWithAllocationSite (21 samples, 0.02%)</title><rect x="95.9558%" y="773" width="0.0179%" height="15" fill="rgb(233,115,5)" fg:x="112465" fg:w="21"/><text x="96.2058%" y="783.50"></text></g><g><title>v8::internal::Factory::InitializeJSObjectBody (14 samples, 0.01%)</title><rect x="95.9737%" y="773" width="0.0119%" height="15" fill="rgb(207,226,44)" fg:x="112486" fg:w="14"/><text x="96.2237%" y="783.50"></text></g><g><title>v8::internal::Factory::NewJSArrayWithElements (75 samples, 0.06%)</title><rect x="95.9362%" y="805" width="0.0640%" height="15" fill="rgb(208,126,0)" fg:x="112442" fg:w="75"/><text x="96.1862%" y="815.50"></text></g><g><title>v8::internal::Factory::NewJSArrayWithUnverifiedElements (62 samples, 0.05%)</title><rect x="95.9473%" y="789" width="0.0529%" height="15" fill="rgb(244,66,21)" fg:x="112455" fg:w="62"/><text x="96.1973%" y="799.50"></text></g><g><title>v8::internal::Factory::InitializeJSObjectFromMap (17 samples, 0.01%)</title><rect x="95.9857%" y="773" width="0.0145%" height="15" fill="rgb(222,97,12)" fg:x="112500" fg:w="17"/><text x="96.2357%" y="783.50"></text></g><g><title>v8::Array::New (98 samples, 0.08%)</title><rect x="95.9285%" y="821" width="0.0836%" height="15" fill="rgb(219,213,19)" fg:x="112433" fg:w="98"/><text x="96.1785%" y="831.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (13 samples, 0.01%)</title><rect x="96.0010%" y="805" width="0.0111%" height="15" fill="rgb(252,169,30)" fg:x="112518" fg:w="13"/><text x="96.2510%" y="815.50"></text></g><g><title>Builtins_CallFunction_ReceiverIsAny (14 samples, 0.01%)</title><rect x="96.0949%" y="757" width="0.0119%" height="15" fill="rgb(206,32,51)" fg:x="112628" fg:w="14"/><text x="96.3449%" y="767.50"></text></g><g><title>Builtins_JSEntry (32 samples, 0.03%)</title><rect x="96.0898%" y="773" width="0.0273%" height="15" fill="rgb(250,172,42)" fg:x="112622" fg:w="32"/><text x="96.3398%" y="783.50"></text></g><g><title>v8::internal::SaveContext::~SaveContext (12 samples, 0.01%)</title><rect x="96.1196%" y="773" width="0.0102%" height="15" fill="rgb(209,34,43)" fg:x="112657" fg:w="12"/><text x="96.3696%" y="783.50"></text></g><g><title>v8::internal::Execution::Call (88 samples, 0.08%)</title><rect x="96.0556%" y="805" width="0.0751%" height="15" fill="rgb(223,11,35)" fg:x="112582" fg:w="88"/><text x="96.3056%" y="815.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (83 samples, 0.07%)</title><rect x="96.0599%" y="789" width="0.0708%" height="15" fill="rgb(251,219,26)" fg:x="112587" fg:w="83"/><text x="96.3099%" y="799.50"></text></g><g><title>v8::Function::Call (146 samples, 0.12%)</title><rect x="96.0130%" y="821" width="0.1246%" height="15" fill="rgb(231,119,3)" fg:x="112532" fg:w="146"/><text x="96.2630%" y="831.50"></text></g><g><title>v8::Object::Get (29 samples, 0.02%)</title><rect x="96.1444%" y="821" width="0.0247%" height="15" fill="rgb(216,97,11)" fg:x="112686" fg:w="29"/><text x="96.3944%" y="831.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (17 samples, 0.01%)</title><rect x="96.2032%" y="773" width="0.0145%" height="15" fill="rgb(223,59,9)" fg:x="112755" fg:w="17"/><text x="96.4532%" y="783.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (15 samples, 0.01%)</title><rect x="96.2049%" y="757" width="0.0128%" height="15" fill="rgb(233,93,31)" fg:x="112757" fg:w="15"/><text x="96.4549%" y="767.50"></text></g><g><title>v8::String::NewFromOneByte (58 samples, 0.05%)</title><rect x="96.1691%" y="821" width="0.0495%" height="15" fill="rgb(239,81,33)" fg:x="112715" fg:w="58"/><text x="96.4191%" y="831.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewStringFromOneByte (55 samples, 0.05%)</title><rect x="96.1717%" y="805" width="0.0469%" height="15" fill="rgb(213,120,34)" fg:x="112718" fg:w="55"/><text x="96.4217%" y="815.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (23 samples, 0.02%)</title><rect x="96.1990%" y="789" width="0.0196%" height="15" fill="rgb(243,49,53)" fg:x="112750" fg:w="23"/><text x="96.4490%" y="799.50"></text></g><g><title>node::(anonymous namespace)::Parser::on_headers_complete (500 samples, 0.43%)</title><rect x="95.7997%" y="837" width="0.4266%" height="15" fill="rgb(247,216,33)" fg:x="112282" fg:w="500"/><text x="96.0497%" y="847.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(), &amp;node::(anonymous namespace)::Parser::on_headers_complete&gt;::Raw (515 samples, 0.44%)</title><rect x="95.7877%" y="853" width="0.4394%" height="15" fill="rgb(226,26,14)" fg:x="112268" fg:w="515"/><text x="96.0377%" y="863.50"></text></g><g><title>cfree@GLIBC_2.2.5 (21 samples, 0.02%)</title><rect x="96.2467%" y="837" width="0.0179%" height="15" fill="rgb(215,49,53)" fg:x="112806" fg:w="21"/><text x="96.4967%" y="847.50"></text></g><g><title>cfree@GLIBC_2.2.5 (13 samples, 0.01%)</title><rect x="96.3022%" y="821" width="0.0111%" height="15" fill="rgb(245,162,40)" fg:x="112871" fg:w="13"/><text x="96.5522%" y="831.50"></text></g><g><title>operator delete (15 samples, 0.01%)</title><rect x="96.3167%" y="821" width="0.0128%" height="15" fill="rgb(229,68,17)" fg:x="112888" fg:w="15"/><text x="96.5667%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;node::(anonymous namespace)::Parser*, node::(anonymous namespace)::Parser*, std::_Identity&lt;node::(anonymous namespace)::Parser*&gt;, node::(anonymous namespace)::ParserComparator, std::allocator&lt;node::(anonymous namespace)::Parser*&gt; &gt;::erase (102 samples, 0.09%)</title><rect x="96.2732%" y="837" width="0.0870%" height="15" fill="rgb(213,182,10)" fg:x="112837" fg:w="102"/><text x="96.5232%" y="847.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (25 samples, 0.02%)</title><rect x="96.3389%" y="821" width="0.0213%" height="15" fill="rgb(245,125,30)" fg:x="112914" fg:w="25"/><text x="96.5889%" y="831.50"></text></g><g><title>operator new (21 samples, 0.02%)</title><rect x="96.3713%" y="821" width="0.0179%" height="15" fill="rgb(232,202,2)" fg:x="112952" fg:w="21"/><text x="96.6213%" y="831.50"></text></g><g><title>std::pair&lt;std::_Rb_tree_iterator&lt;node::(anonymous namespace)::Parser*&gt;, bool&gt; std::_Rb_tree&lt;node::(anonymous namespace)::Parser*, node::(anonymous namespace)::Parser*, std::_Identity&lt;node::(anonymous namespace)::Parser*&gt;, node::(anonymous namespace)::ParserComparator, std::allocator&lt;node::(anonymous namespace)::Parser*&gt; &gt;::_M_insert_unique&lt;node::(anonymous namespace)::Parser* const&amp;&gt; (50 samples, 0.04%)</title><rect x="96.3602%" y="837" width="0.0427%" height="15" fill="rgb(237,140,51)" fg:x="112939" fg:w="50"/><text x="96.6102%" y="847.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (16 samples, 0.01%)</title><rect x="96.3892%" y="821" width="0.0137%" height="15" fill="rgb(236,157,25)" fg:x="112973" fg:w="16"/><text x="96.6392%" y="831.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (13 samples, 0.01%)</title><rect x="96.4063%" y="821" width="0.0111%" height="15" fill="rgb(219,209,0)" fg:x="112993" fg:w="13"/><text x="96.6563%" y="831.50"></text></g><g><title>uv__hrtime (21 samples, 0.02%)</title><rect x="96.4029%" y="837" width="0.0179%" height="15" fill="rgb(240,116,54)" fg:x="112989" fg:w="21"/><text x="96.6529%" y="847.50"></text></g><g><title>v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyNonextensibleObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)7&gt; &gt;::GetEntryForIndex (16 samples, 0.01%)</title><rect x="96.4746%" y="789" width="0.0137%" height="15" fill="rgb(216,10,36)" fg:x="113073" fg:w="16"/><text x="96.7246%" y="799.50"></text></g><g><title>v8::Object::Get (75 samples, 0.06%)</title><rect x="96.4251%" y="837" width="0.0640%" height="15" fill="rgb(222,72,44)" fg:x="113015" fg:w="75"/><text x="96.6751%" y="847.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;true&gt; (58 samples, 0.05%)</title><rect x="96.4396%" y="821" width="0.0495%" height="15" fill="rgb(232,159,9)" fg:x="113032" fg:w="58"/><text x="96.6896%" y="831.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (35 samples, 0.03%)</title><rect x="96.4592%" y="805" width="0.0299%" height="15" fill="rgb(210,39,32)" fg:x="113055" fg:w="35"/><text x="96.7092%" y="815.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(), &amp;node::(anonymous namespace)::Parser::on_message_begin&gt;::Raw (312 samples, 0.27%)</title><rect x="96.2271%" y="853" width="0.2662%" height="15" fill="rgb(216,194,45)" fg:x="112783" fg:w="312"/><text x="96.4771%" y="863.50"></text></g><g><title>__memset_avx2_unaligned_erms (21 samples, 0.02%)</title><rect x="96.5368%" y="789" width="0.0179%" height="15" fill="rgb(218,18,35)" fg:x="113146" fg:w="21"/><text x="96.7868%" y="799.50"></text></g><g><title>node::AsyncHooks::push_async_context (45 samples, 0.04%)</title><rect x="96.5240%" y="821" width="0.0384%" height="15" fill="rgb(207,83,51)" fg:x="113131" fg:w="45"/><text x="96.7740%" y="831.50"></text></g><g><title>std::vector&lt;v8::Local&lt;v8::Object&gt;, std::allocator&lt;v8::Local&lt;v8::Object&gt; &gt; &gt;::_M_default_append (33 samples, 0.03%)</title><rect x="96.5343%" y="805" width="0.0282%" height="15" fill="rgb(225,63,43)" fg:x="113143" fg:w="33"/><text x="96.7843%" y="815.50"></text></g><g><title>node::InternalCallbackScope::InternalCallbackScope (73 samples, 0.06%)</title><rect x="96.5112%" y="837" width="0.0623%" height="15" fill="rgb(207,57,36)" fg:x="113116" fg:w="73"/><text x="96.7612%" y="847.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (18 samples, 0.02%)</title><rect x="96.5735%" y="837" width="0.0154%" height="15" fill="rgb(216,99,33)" fg:x="113189" fg:w="18"/><text x="96.8235%" y="847.50"></text></g><g><title>node::InternalCallbackScope::Close (17 samples, 0.01%)</title><rect x="96.5744%" y="821" width="0.0145%" height="15" fill="rgb(225,42,16)" fg:x="113190" fg:w="17"/><text x="96.8244%" y="831.50"></text></g><g><title>operator delete (18 samples, 0.02%)</title><rect x="96.6230%" y="821" width="0.0154%" height="15" fill="rgb(220,201,45)" fg:x="113247" fg:w="18"/><text x="96.8730%" y="831.50"></text></g><g><title>std::_Rb_tree_increment (13 samples, 0.01%)</title><rect x="96.6460%" y="821" width="0.0111%" height="15" fill="rgb(225,33,4)" fg:x="113274" fg:w="13"/><text x="96.8960%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;node::(anonymous namespace)::Parser*, node::(anonymous namespace)::Parser*, std::_Identity&lt;node::(anonymous namespace)::Parser*&gt;, node::(anonymous namespace)::ParserComparator, std::allocator&lt;node::(anonymous namespace)::Parser*&gt; &gt;::erase (106 samples, 0.09%)</title><rect x="96.5914%" y="837" width="0.0904%" height="15" fill="rgb(224,33,50)" fg:x="113210" fg:w="106"/><text x="96.8414%" y="847.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (29 samples, 0.02%)</title><rect x="96.6571%" y="821" width="0.0247%" height="15" fill="rgb(246,198,51)" fg:x="113287" fg:w="29"/><text x="96.9071%" y="831.50"></text></g><g><title>operator new (37 samples, 0.03%)</title><rect x="96.7015%" y="821" width="0.0316%" height="15" fill="rgb(205,22,4)" fg:x="113339" fg:w="37"/><text x="96.9515%" y="831.50"></text></g><g><title>malloc@plt (13 samples, 0.01%)</title><rect x="96.7220%" y="805" width="0.0111%" height="15" fill="rgb(206,3,8)" fg:x="113363" fg:w="13"/><text x="96.9720%" y="815.50"></text></g><g><title>std::pair&lt;std::_Rb_tree_iterator&lt;node::(anonymous namespace)::Parser*&gt;, bool&gt; std::_Rb_tree&lt;node::(anonymous namespace)::Parser*, node::(anonymous namespace)::Parser*, std::_Identity&lt;node::(anonymous namespace)::Parser*&gt;, node::(anonymous namespace)::ParserComparator, std::allocator&lt;node::(anonymous namespace)::Parser*&gt; &gt;::_M_insert_unique&lt;node::(anonymous namespace)::Parser* const&amp;&gt; (80 samples, 0.07%)</title><rect x="96.6819%" y="837" width="0.0683%" height="15" fill="rgb(251,23,15)" fg:x="113316" fg:w="80"/><text x="96.9319%" y="847.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (15 samples, 0.01%)</title><rect x="96.7373%" y="821" width="0.0128%" height="15" fill="rgb(252,88,28)" fg:x="113381" fg:w="15"/><text x="96.9873%" y="831.50"></text></g><g><title>v8::CallDepthScope&lt;true&gt;::CallDepthScope (13 samples, 0.01%)</title><rect x="96.7621%" y="821" width="0.0111%" height="15" fill="rgb(212,127,14)" fg:x="113410" fg:w="13"/><text x="97.0121%" y="831.50"></text></g><g><title>Builtins_CallFunction_ReceiverIsAny (19 samples, 0.02%)</title><rect x="96.8440%" y="773" width="0.0162%" height="15" fill="rgb(247,145,37)" fg:x="113506" fg:w="19"/><text x="97.0940%" y="783.50"></text></g><g><title>Builtins_JSEntry (34 samples, 0.03%)</title><rect x="96.8397%" y="789" width="0.0290%" height="15" fill="rgb(209,117,53)" fg:x="113501" fg:w="34"/><text x="97.0897%" y="799.50"></text></g><g><title>v8::Function::Call (164 samples, 0.14%)</title><rect x="96.7501%" y="837" width="0.1399%" height="15" fill="rgb(212,90,42)" fg:x="113396" fg:w="164"/><text x="97.0001%" y="847.50"></text></g><g><title>v8::internal::Execution::Call (134 samples, 0.11%)</title><rect x="96.7757%" y="821" width="0.1143%" height="15" fill="rgb(218,164,37)" fg:x="113426" fg:w="134"/><text x="97.0257%" y="831.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (126 samples, 0.11%)</title><rect x="96.7826%" y="805" width="0.1075%" height="15" fill="rgb(246,65,34)" fg:x="113434" fg:w="126"/><text x="97.0326%" y="815.50"></text></g><g><title>v8::internal::Object::GetProperty (13 samples, 0.01%)</title><rect x="96.9208%" y="821" width="0.0111%" height="15" fill="rgb(231,100,33)" fg:x="113596" fg:w="13"/><text x="97.1708%" y="831.50"></text></g><g><title>v8::Object::Get (89 samples, 0.08%)</title><rect x="96.8969%" y="837" width="0.0759%" height="15" fill="rgb(228,126,14)" fg:x="113568" fg:w="89"/><text x="97.1469%" y="847.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;true&gt; (48 samples, 0.04%)</title><rect x="96.9319%" y="821" width="0.0410%" height="15" fill="rgb(215,173,21)" fg:x="113609" fg:w="48"/><text x="97.1819%" y="831.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (29 samples, 0.02%)</title><rect x="96.9481%" y="805" width="0.0247%" height="15" fill="rgb(210,6,40)" fg:x="113628" fg:w="29"/><text x="97.1981%" y="815.50"></text></g><g><title>llhttp__internal_execute (1,797 samples, 1.53%)</title><rect x="95.4507%" y="869" width="1.5332%" height="15" fill="rgb(212,48,18)" fg:x="111873" fg:w="1797"/><text x="95.7007%" y="879.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(), &amp;node::(anonymous namespace)::Parser::on_message_complete&gt;::Raw (575 samples, 0.49%)</title><rect x="96.4933%" y="853" width="0.4906%" height="15" fill="rgb(230,214,11)" fg:x="113095" fg:w="575"/><text x="96.7433%" y="863.50"></text></g><g><title>v8::Value::IsFunction (13 samples, 0.01%)</title><rect x="96.9728%" y="837" width="0.0111%" height="15" fill="rgb(254,105,39)" fg:x="113657" fg:w="13"/><text x="97.2228%" y="847.50"></text></g><g><title>operator new (26 samples, 0.02%)</title><rect x="96.9924%" y="869" width="0.0222%" height="15" fill="rgb(245,158,5)" fg:x="113680" fg:w="26"/><text x="97.2424%" y="879.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="97.0044%" y="853" width="0.0102%" height="15" fill="rgb(249,208,11)" fg:x="113694" fg:w="12"/><text x="97.2544%" y="863.50"></text></g><g><title>operator new[] (15 samples, 0.01%)</title><rect x="97.0146%" y="869" width="0.0128%" height="15" fill="rgb(210,39,28)" fg:x="113706" fg:w="15"/><text x="97.2646%" y="879.50"></text></g><g><title>node::(anonymous namespace)::Parser::Execute (1,894 samples, 1.62%)</title><rect x="95.4251%" y="885" width="1.6160%" height="15" fill="rgb(211,56,53)" fg:x="111843" fg:w="1894"/><text x="95.6751%" y="895.50"></text></g><g><title>node::AsyncWrap::EmitTraceEventAfter (14 samples, 0.01%)</title><rect x="97.0505%" y="869" width="0.0119%" height="15" fill="rgb(226,201,30)" fg:x="113748" fg:w="14"/><text x="97.3005%" y="879.50"></text></g><g><title>node::AsyncWrap::EmitTraceEventBefore (17 samples, 0.01%)</title><rect x="97.0624%" y="869" width="0.0145%" height="15" fill="rgb(239,101,34)" fg:x="113762" fg:w="17"/><text x="97.3124%" y="879.50"></text></g><g><title>node::PrincipalRealm::process_object (16 samples, 0.01%)</title><rect x="97.1255%" y="837" width="0.0137%" height="15" fill="rgb(226,209,5)" fg:x="113836" fg:w="16"/><text x="97.3755%" y="847.50"></text></g><g><title>v8::internal::Execution::Call (39 samples, 0.03%)</title><rect x="97.1571%" y="821" width="0.0333%" height="15" fill="rgb(250,105,47)" fg:x="113873" fg:w="39"/><text x="97.4071%" y="831.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (37 samples, 0.03%)</title><rect x="97.1588%" y="805" width="0.0316%" height="15" fill="rgb(230,72,3)" fg:x="113875" fg:w="37"/><text x="97.4088%" y="815.50"></text></g><g><title>v8::Function::Call (61 samples, 0.05%)</title><rect x="97.1426%" y="837" width="0.0520%" height="15" fill="rgb(232,218,39)" fg:x="113856" fg:w="61"/><text x="97.3926%" y="847.50"></text></g><g><title>node::InternalCallbackScope::Close (121 samples, 0.10%)</title><rect x="97.1000%" y="853" width="0.1032%" height="15" fill="rgb(248,166,6)" fg:x="113806" fg:w="121"/><text x="97.3500%" y="863.50"></text></g><g><title>node::AsyncHooks::push_async_context (13 samples, 0.01%)</title><rect x="97.2083%" y="837" width="0.0111%" height="15" fill="rgb(247,89,20)" fg:x="113933" fg:w="13"/><text x="97.4583%" y="847.50"></text></g><g><title>node::InternalCallbackScope::InternalCallbackScope (42 samples, 0.04%)</title><rect x="97.2032%" y="853" width="0.0358%" height="15" fill="rgb(248,130,54)" fg:x="113927" fg:w="42"/><text x="97.4532%" y="863.50"></text></g><g><title>Builtins_CallBoundFunction (15 samples, 0.01%)</title><rect x="97.2714%" y="789" width="0.0128%" height="15" fill="rgb(234,196,4)" fg:x="114007" fg:w="15"/><text x="97.5214%" y="799.50"></text></g><g><title>Builtins_JSEntry (32 samples, 0.03%)</title><rect x="97.2706%" y="805" width="0.0273%" height="15" fill="rgb(250,143,31)" fg:x="114006" fg:w="32"/><text x="97.5206%" y="815.50"></text></g><g><title>v8::internal::Execution::Call (55 samples, 0.05%)</title><rect x="97.2569%" y="837" width="0.0469%" height="15" fill="rgb(211,110,34)" fg:x="113990" fg:w="55"/><text x="97.5069%" y="847.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (53 samples, 0.05%)</title><rect x="97.2586%" y="821" width="0.0452%" height="15" fill="rgb(215,124,48)" fg:x="113992" fg:w="53"/><text x="97.5086%" y="831.50"></text></g><g><title>node::AsyncWrap::MakeCallback (312 samples, 0.27%)</title><rect x="97.0411%" y="885" width="0.2662%" height="15" fill="rgb(216,46,13)" fg:x="113737" fg:w="312"/><text x="97.2911%" y="895.50"></text></g><g><title>node::InternalMakeCallback (270 samples, 0.23%)</title><rect x="97.0769%" y="869" width="0.2304%" height="15" fill="rgb(205,184,25)" fg:x="113779" fg:w="270"/><text x="97.3269%" y="879.50"></text></g><g><title>v8::Function::Call (76 samples, 0.06%)</title><rect x="97.2424%" y="853" width="0.0648%" height="15" fill="rgb(228,1,10)" fg:x="113973" fg:w="76"/><text x="97.4924%" y="863.50"></text></g><g><title>v8::Object::Get (21 samples, 0.02%)</title><rect x="97.3081%" y="885" width="0.0179%" height="15" fill="rgb(213,116,27)" fg:x="114050" fg:w="21"/><text x="97.5581%" y="895.50"></text></g><g><title>non-virtual thunk to node::(anonymous namespace)::Parser::OnStreamRead (2,273 samples, 1.94%)</title><rect x="95.4012%" y="901" width="1.9393%" height="15" fill="rgb(241,95,50)" fg:x="111815" fg:w="2273"/><text x="95.6512%" y="911.50">n..</text></g><g><title>v8::internal::HandleScope::DeleteExtensions (13 samples, 0.01%)</title><rect x="97.3295%" y="885" width="0.0111%" height="15" fill="rgb(238,48,32)" fg:x="114075" fg:w="13"/><text x="97.5795%" y="895.50"></text></g><g><title>node::LibuvStreamWrap::OnUvRead (2,304 samples, 1.97%)</title><rect x="95.3910%" y="917" width="1.9658%" height="15" fill="rgb(235,113,49)" fg:x="111803" fg:w="2304"/><text x="95.6410%" y="927.50">n..</text></g><g><title>uv__io_poll (2,382 samples, 2.03%)</title><rect x="95.3406%" y="981" width="2.0323%" height="15" fill="rgb(205,127,43)" fg:x="111744" fg:w="2382"/><text x="95.5906%" y="991.50">u..</text></g><g><title>uv__stream_io (2,323 samples, 1.98%)</title><rect x="95.3910%" y="965" width="1.9820%" height="15" fill="rgb(250,162,2)" fg:x="111803" fg:w="2323"/><text x="95.6410%" y="975.50">u..</text></g><g><title>uv__read (2,323 samples, 1.98%)</title><rect x="95.3910%" y="949" width="1.9820%" height="15" fill="rgb(220,13,41)" fg:x="111803" fg:w="2323"/><text x="95.6410%" y="959.50">u..</text></g><g><title>node::LibuvStreamWrap::ReadStart (2,323 samples, 1.98%)</title><rect x="95.3910%" y="933" width="1.9820%" height="15" fill="rgb(249,221,25)" fg:x="111803" fg:w="2323"/><text x="95.6410%" y="943.50">n..</text></g><g><title>node::LibuvStreamWrap::ReadStart (61 samples, 0.05%)</title><rect x="97.3730%" y="917" width="0.0520%" height="15" fill="rgb(215,208,19)" fg:x="114126" fg:w="61"/><text x="97.6230%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.02%)</title><rect x="97.4412%" y="901" width="0.0213%" height="15" fill="rgb(236,175,2)" fg:x="114206" fg:w="25"/><text x="97.6912%" y="911.50"></text></g><g><title>__fdget_pos (38 samples, 0.03%)</title><rect x="97.5206%" y="837" width="0.0324%" height="15" fill="rgb(241,52,2)" fg:x="114299" fg:w="38"/><text x="97.7706%" y="847.50"></text></g><g><title>__fget_light (37 samples, 0.03%)</title><rect x="97.5214%" y="821" width="0.0316%" height="15" fill="rgb(248,140,14)" fg:x="114300" fg:w="37"/><text x="97.7714%" y="831.50"></text></g><g><title>apparmor_file_permission (25 samples, 0.02%)</title><rect x="97.5991%" y="789" width="0.0213%" height="15" fill="rgb(253,22,42)" fg:x="114391" fg:w="25"/><text x="97.8491%" y="799.50"></text></g><g><title>rw_verify_area (57 samples, 0.05%)</title><rect x="97.5829%" y="821" width="0.0486%" height="15" fill="rgb(234,61,47)" fg:x="114372" fg:w="57"/><text x="97.8329%" y="831.50"></text></g><g><title>security_file_permission (46 samples, 0.04%)</title><rect x="97.5923%" y="805" width="0.0392%" height="15" fill="rgb(208,226,15)" fg:x="114383" fg:w="46"/><text x="97.8423%" y="815.50"></text></g><g><title>fsnotify_perm.part.0 (13 samples, 0.01%)</title><rect x="97.6204%" y="789" width="0.0111%" height="15" fill="rgb(217,221,4)" fg:x="114416" fg:w="13"/><text x="97.8704%" y="799.50"></text></g><g><title>apparmor_socket_recvmsg (19 samples, 0.02%)</title><rect x="97.6545%" y="789" width="0.0162%" height="15" fill="rgb(212,174,34)" fg:x="114456" fg:w="19"/><text x="97.9045%" y="799.50"></text></g><g><title>_raw_spin_lock_bh (17 samples, 0.01%)</title><rect x="97.6921%" y="757" width="0.0145%" height="15" fill="rgb(253,83,4)" fg:x="114500" fg:w="17"/><text x="97.9421%" y="767.50"></text></g><g><title>skb_attempt_defer_free (13 samples, 0.01%)</title><rect x="97.7902%" y="741" width="0.0111%" height="15" fill="rgb(250,195,49)" fg:x="114615" fg:w="13"/><text x="98.0402%" y="751.50"></text></g><g><title>__check_object_size.part.0 (27 samples, 0.02%)</title><rect x="97.8218%" y="677" width="0.0230%" height="15" fill="rgb(241,192,25)" fg:x="114652" fg:w="27"/><text x="98.0718%" y="687.50"></text></g><g><title>check_heap_object (25 samples, 0.02%)</title><rect x="97.8235%" y="661" width="0.0213%" height="15" fill="rgb(208,124,10)" fg:x="114654" fg:w="25"/><text x="98.0735%" y="671.50"></text></g><g><title>__virt_addr_valid (16 samples, 0.01%)</title><rect x="97.8312%" y="645" width="0.0137%" height="15" fill="rgb(222,33,0)" fg:x="114663" fg:w="16"/><text x="98.0812%" y="655.50"></text></g><g><title>__check_object_size (28 samples, 0.02%)</title><rect x="97.8218%" y="693" width="0.0239%" height="15" fill="rgb(234,209,28)" fg:x="114652" fg:w="28"/><text x="98.0718%" y="703.50"></text></g><g><title>_copy_to_iter (25 samples, 0.02%)</title><rect x="97.8457%" y="693" width="0.0213%" height="15" fill="rgb(224,11,23)" fg:x="114680" fg:w="25"/><text x="98.0957%" y="703.50"></text></g><g><title>rep_movs_alternative (22 samples, 0.02%)</title><rect x="97.8482%" y="677" width="0.0188%" height="15" fill="rgb(232,99,1)" fg:x="114683" fg:w="22"/><text x="98.0982%" y="687.50"></text></g><g><title>skb_copy_datagram_iter (84 samples, 0.07%)</title><rect x="97.8013%" y="741" width="0.0717%" height="15" fill="rgb(237,95,45)" fg:x="114628" fg:w="84"/><text x="98.0513%" y="751.50"></text></g><g><title>__skb_datagram_iter (80 samples, 0.07%)</title><rect x="97.8047%" y="725" width="0.0683%" height="15" fill="rgb(208,109,11)" fg:x="114632" fg:w="80"/><text x="98.0547%" y="735.50"></text></g><g><title>simple_copy_to_iter (61 samples, 0.05%)</title><rect x="97.8209%" y="709" width="0.0520%" height="15" fill="rgb(216,190,48)" fg:x="114651" fg:w="61"/><text x="98.0709%" y="719.50"></text></g><g><title>__mod_memcg_state (22 samples, 0.02%)</title><rect x="97.8823%" y="677" width="0.0188%" height="15" fill="rgb(251,171,36)" fg:x="114723" fg:w="22"/><text x="98.1323%" y="687.50"></text></g><g><title>cgroup_rstat_updated (12 samples, 0.01%)</title><rect x="97.8909%" y="661" width="0.0102%" height="15" fill="rgb(230,62,22)" fg:x="114733" fg:w="12"/><text x="98.1409%" y="671.50"></text></g><g><title>mod_memcg_state (31 samples, 0.03%)</title><rect x="97.8806%" y="693" width="0.0264%" height="15" fill="rgb(225,114,35)" fg:x="114721" fg:w="31"/><text x="98.1306%" y="703.50"></text></g><g><title>mem_cgroup_uncharge_skmem (41 samples, 0.03%)</title><rect x="97.8789%" y="709" width="0.0350%" height="15" fill="rgb(215,118,42)" fg:x="114719" fg:w="41"/><text x="98.1289%" y="719.50"></text></g><g><title>sock_rfree (49 samples, 0.04%)</title><rect x="97.8730%" y="741" width="0.0418%" height="15" fill="rgb(243,119,21)" fg:x="114712" fg:w="49"/><text x="98.1230%" y="751.50"></text></g><g><title>__sk_mem_reduce_allocated (49 samples, 0.04%)</title><rect x="97.8730%" y="725" width="0.0418%" height="15" fill="rgb(252,177,53)" fg:x="114712" fg:w="49"/><text x="98.1230%" y="735.50"></text></g><g><title>__tcp_cleanup_rbuf (19 samples, 0.02%)</title><rect x="97.9165%" y="725" width="0.0162%" height="15" fill="rgb(237,209,29)" fg:x="114763" fg:w="19"/><text x="98.1665%" y="735.50"></text></g><g><title>tcp_cleanup_rbuf (23 samples, 0.02%)</title><rect x="97.9148%" y="741" width="0.0196%" height="15" fill="rgb(212,65,23)" fg:x="114761" fg:w="23"/><text x="98.1648%" y="751.50"></text></g><g><title>tcp_recvmsg_locked (285 samples, 0.24%)</title><rect x="97.7271%" y="757" width="0.2432%" height="15" fill="rgb(230,222,46)" fg:x="114541" fg:w="285"/><text x="97.9771%" y="767.50"></text></g><g><title>tcp_rcv_space_adjust (40 samples, 0.03%)</title><rect x="97.9361%" y="741" width="0.0341%" height="15" fill="rgb(215,135,32)" fg:x="114786" fg:w="40"/><text x="98.1861%" y="751.50"></text></g><g><title>tcp_mstamp_refresh (20 samples, 0.02%)</title><rect x="97.9532%" y="725" width="0.0171%" height="15" fill="rgb(246,101,22)" fg:x="114806" fg:w="20"/><text x="98.2032%" y="735.50"></text></g><g><title>tcp_recvmsg (343 samples, 0.29%)</title><rect x="97.6793%" y="773" width="0.2926%" height="15" fill="rgb(206,107,13)" fg:x="114485" fg:w="343"/><text x="97.9293%" y="783.50"></text></g><g><title>inet6_recvmsg (354 samples, 0.30%)</title><rect x="97.6707%" y="789" width="0.3020%" height="15" fill="rgb(250,100,44)" fg:x="114475" fg:w="354"/><text x="97.9207%" y="799.50"></text></g><g><title>security_socket_recvmsg (38 samples, 0.03%)</title><rect x="97.9728%" y="789" width="0.0324%" height="15" fill="rgb(231,147,38)" fg:x="114829" fg:w="38"/><text x="98.2228%" y="799.50"></text></g><g><title>apparmor_socket_recvmsg (25 samples, 0.02%)</title><rect x="97.9839%" y="773" width="0.0213%" height="15" fill="rgb(229,8,40)" fg:x="114842" fg:w="25"/><text x="98.2339%" y="783.50"></text></g><g><title>aa_sk_perm (24 samples, 0.02%)</title><rect x="97.9847%" y="757" width="0.0205%" height="15" fill="rgb(221,135,30)" fg:x="114843" fg:w="24"/><text x="98.2347%" y="767.50"></text></g><g><title>__x64_sys_read (581 samples, 0.50%)</title><rect x="97.5103%" y="869" width="0.4957%" height="15" fill="rgb(249,193,18)" fg:x="114287" fg:w="581"/><text x="97.7603%" y="879.50"></text></g><g><title>ksys_read (575 samples, 0.49%)</title><rect x="97.5155%" y="853" width="0.4906%" height="15" fill="rgb(209,133,39)" fg:x="114293" fg:w="575"/><text x="97.7655%" y="863.50"></text></g><g><title>vfs_read (518 samples, 0.44%)</title><rect x="97.5641%" y="837" width="0.4420%" height="15" fill="rgb(232,100,14)" fg:x="114350" fg:w="518"/><text x="97.8141%" y="847.50"></text></g><g><title>sock_read_iter (438 samples, 0.37%)</title><rect x="97.6324%" y="821" width="0.3737%" height="15" fill="rgb(224,185,1)" fg:x="114430" fg:w="438"/><text x="97.8824%" y="831.50"></text></g><g><title>sock_recvmsg (419 samples, 0.36%)</title><rect x="97.6486%" y="805" width="0.3575%" height="15" fill="rgb(223,139,8)" fg:x="114449" fg:w="419"/><text x="97.8986%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (723 samples, 0.62%)</title><rect x="97.4626%" y="901" width="0.6169%" height="15" fill="rgb(232,213,38)" fg:x="114231" fg:w="723"/><text x="97.7126%" y="911.50"></text></g><g><title>do_syscall_64 (670 samples, 0.57%)</title><rect x="97.5078%" y="885" width="0.5716%" height="15" fill="rgb(207,94,22)" fg:x="114284" fg:w="670"/><text x="97.7578%" y="895.50"></text></g><g><title>syscall_exit_to_user_mode (76 samples, 0.06%)</title><rect x="98.0146%" y="869" width="0.0648%" height="15" fill="rgb(219,183,54)" fg:x="114878" fg:w="76"/><text x="98.2646%" y="879.50"></text></g><g><title>uv_run (905 samples, 0.77%)</title><rect x="97.3730%" y="981" width="0.7722%" height="15" fill="rgb(216,185,54)" fg:x="114126" fg:w="905"/><text x="97.6230%" y="991.50"></text></g><g><title>uv__io_poll (905 samples, 0.77%)</title><rect x="97.3730%" y="965" width="0.7722%" height="15" fill="rgb(254,217,39)" fg:x="114126" fg:w="905"/><text x="97.6230%" y="975.50"></text></g><g><title>uv__stream_io (905 samples, 0.77%)</title><rect x="97.3730%" y="949" width="0.7722%" height="15" fill="rgb(240,178,23)" fg:x="114126" fg:w="905"/><text x="97.6230%" y="959.50"></text></g><g><title>uv__read (905 samples, 0.77%)</title><rect x="97.3730%" y="933" width="0.7722%" height="15" fill="rgb(218,11,47)" fg:x="114126" fg:w="905"/><text x="97.6230%" y="943.50"></text></g><g><title>read (844 samples, 0.72%)</title><rect x="97.4250%" y="917" width="0.7201%" height="15" fill="rgb(218,51,51)" fg:x="114187" fg:w="844"/><text x="97.6750%" y="927.50"></text></g><g><title>syscall_return_via_sysret (64 samples, 0.05%)</title><rect x="98.0905%" y="901" width="0.0546%" height="15" fill="rgb(238,126,27)" fg:x="114967" fg:w="64"/><text x="98.3405%" y="911.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (36 samples, 0.03%)</title><rect x="98.1596%" y="981" width="0.0307%" height="15" fill="rgb(249,202,22)" fg:x="115048" fg:w="36"/><text x="98.4096%" y="991.50"></text></g><g><title>[unknown] (3,685 samples, 3.14%)</title><rect x="95.0557%" y="997" width="3.1441%" height="15" fill="rgb(254,195,49)" fg:x="111410" fg:w="3685"/><text x="95.3057%" y="1007.50">[un..</text></g><g><title>v8::Object::New (14 samples, 0.01%)</title><rect x="98.2407%" y="821" width="0.0119%" height="15" fill="rgb(208,123,14)" fg:x="115143" fg:w="14"/><text x="98.4907%" y="831.50"></text></g><g><title>v8::internal::Factory::NewJSObject (12 samples, 0.01%)</title><rect x="98.2424%" y="805" width="0.0102%" height="15" fill="rgb(224,200,8)" fg:x="115145" fg:w="12"/><text x="98.4924%" y="815.50"></text></g><g><title>node::Environment::RunAndClearNativeImmediates (37 samples, 0.03%)</title><rect x="98.2228%" y="837" width="0.0316%" height="15" fill="rgb(217,61,36)" fg:x="115122" fg:w="37"/><text x="98.4728%" y="847.50"></text></g><g><title>node::Environment::CheckImmediate (43 samples, 0.04%)</title><rect x="98.2194%" y="853" width="0.0367%" height="15" fill="rgb(206,35,45)" fg:x="115118" fg:w="43"/><text x="98.4694%" y="863.50"></text></g><g><title>uv__run_check (53 samples, 0.05%)</title><rect x="98.2142%" y="869" width="0.0452%" height="15" fill="rgb(217,65,33)" fg:x="115112" fg:w="53"/><text x="98.4642%" y="879.50"></text></g><g><title>_start (78 samples, 0.07%)</title><rect x="98.2031%" y="997" width="0.0666%" height="15" fill="rgb(222,158,48)" fg:x="115099" fg:w="78"/><text x="98.4531%" y="1007.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (78 samples, 0.07%)</title><rect x="98.2031%" y="981" width="0.0666%" height="15" fill="rgb(254,2,54)" fg:x="115099" fg:w="78"/><text x="98.4531%" y="991.50"></text></g><g><title>__libc_start_call_main (78 samples, 0.07%)</title><rect x="98.2031%" y="965" width="0.0666%" height="15" fill="rgb(250,143,38)" fg:x="115099" fg:w="78"/><text x="98.4531%" y="975.50"></text></g><g><title>node::Start (78 samples, 0.07%)</title><rect x="98.2031%" y="949" width="0.0666%" height="15" fill="rgb(248,25,0)" fg:x="115099" fg:w="78"/><text x="98.4531%" y="959.50"></text></g><g><title>node::NodeMainInstance::Run (78 samples, 0.07%)</title><rect x="98.2031%" y="933" width="0.0666%" height="15" fill="rgb(206,152,27)" fg:x="115099" fg:w="78"/><text x="98.4531%" y="943.50"></text></g><g><title>node::NodeMainInstance::Run (78 samples, 0.07%)</title><rect x="98.2031%" y="917" width="0.0666%" height="15" fill="rgb(240,77,30)" fg:x="115099" fg:w="78"/><text x="98.4531%" y="927.50"></text></g><g><title>node::SpinEventLoopInternal (78 samples, 0.07%)</title><rect x="98.2031%" y="901" width="0.0666%" height="15" fill="rgb(231,5,3)" fg:x="115099" fg:w="78"/><text x="98.4531%" y="911.50"></text></g><g><title>uv_run (78 samples, 0.07%)</title><rect x="98.2031%" y="885" width="0.0666%" height="15" fill="rgb(207,226,32)" fg:x="115099" fg:w="78"/><text x="98.4531%" y="895.50"></text></g><g><title>cfree@GLIBC_2.2.5 (16 samples, 0.01%)</title><rect x="98.2825%" y="949" width="0.0137%" height="15" fill="rgb(222,207,47)" fg:x="115192" fg:w="16"/><text x="98.5325%" y="959.50"></text></g><g><title>update_curr (24 samples, 0.02%)</title><rect x="98.3815%" y="725" width="0.0205%" height="15" fill="rgb(229,115,45)" fg:x="115308" fg:w="24"/><text x="98.6315%" y="735.50"></text></g><g><title>dequeue_entity (34 samples, 0.03%)</title><rect x="98.3763%" y="741" width="0.0290%" height="15" fill="rgb(224,191,6)" fg:x="115302" fg:w="34"/><text x="98.6263%" y="751.50"></text></g><g><title>dequeue_task (42 samples, 0.04%)</title><rect x="98.3712%" y="773" width="0.0358%" height="15" fill="rgb(230,227,24)" fg:x="115296" fg:w="42"/><text x="98.6212%" y="783.50"></text></g><g><title>dequeue_task_fair (42 samples, 0.04%)</title><rect x="98.3712%" y="757" width="0.0358%" height="15" fill="rgb(228,80,19)" fg:x="115296" fg:w="42"/><text x="98.6212%" y="767.50"></text></g><g><title>__perf_event_task_sched_in (206 samples, 0.18%)</title><rect x="98.4113%" y="757" width="0.1758%" height="15" fill="rgb(247,229,0)" fg:x="115343" fg:w="206"/><text x="98.6613%" y="767.50"></text></g><g><title>perf_ctx_enable (204 samples, 0.17%)</title><rect x="98.4130%" y="741" width="0.1741%" height="15" fill="rgb(237,194,15)" fg:x="115345" fg:w="204"/><text x="98.6630%" y="751.50"></text></g><g><title>x86_pmu_enable (203 samples, 0.17%)</title><rect x="98.4139%" y="725" width="0.1732%" height="15" fill="rgb(219,203,20)" fg:x="115346" fg:w="203"/><text x="98.6639%" y="735.50"></text></g><g><title>intel_pmu_enable_all (202 samples, 0.17%)</title><rect x="98.4147%" y="709" width="0.1723%" height="15" fill="rgb(234,128,8)" fg:x="115347" fg:w="202"/><text x="98.6647%" y="719.50"></text></g><g><title>native_write_msr (202 samples, 0.17%)</title><rect x="98.4147%" y="693" width="0.1723%" height="15" fill="rgb(248,202,8)" fg:x="115347" fg:w="202"/><text x="98.6647%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (221 samples, 0.19%)</title><rect x="98.4071%" y="773" width="0.1886%" height="15" fill="rgb(206,104,37)" fg:x="115338" fg:w="221"/><text x="98.6571%" y="783.50"></text></g><g><title>pick_next_task (13 samples, 0.01%)</title><rect x="98.5956%" y="773" width="0.0111%" height="15" fill="rgb(223,8,27)" fg:x="115559" fg:w="13"/><text x="98.8456%" y="783.50"></text></g><g><title>prepare_task_switch (12 samples, 0.01%)</title><rect x="98.6084%" y="773" width="0.0102%" height="15" fill="rgb(216,217,28)" fg:x="115574" fg:w="12"/><text x="98.8584%" y="783.50"></text></g><g><title>psi_group_change (23 samples, 0.02%)</title><rect x="98.6229%" y="757" width="0.0196%" height="15" fill="rgb(249,199,1)" fg:x="115591" fg:w="23"/><text x="98.8729%" y="767.50"></text></g><g><title>psi_task_switch (28 samples, 0.02%)</title><rect x="98.6195%" y="773" width="0.0239%" height="15" fill="rgb(240,85,17)" fg:x="115587" fg:w="28"/><text x="98.8695%" y="783.50"></text></g><g><title>futex_wait_queue (341 samples, 0.29%)</title><rect x="98.3559%" y="821" width="0.2909%" height="15" fill="rgb(206,108,45)" fg:x="115278" fg:w="341"/><text x="98.6059%" y="831.50"></text></g><g><title>schedule (339 samples, 0.29%)</title><rect x="98.3576%" y="805" width="0.2892%" height="15" fill="rgb(245,210,41)" fg:x="115280" fg:w="339"/><text x="98.6076%" y="815.50"></text></g><g><title>__schedule (337 samples, 0.29%)</title><rect x="98.3593%" y="789" width="0.2875%" height="15" fill="rgb(206,13,37)" fg:x="115282" fg:w="337"/><text x="98.6093%" y="799.50"></text></g><g><title>futex_wait (363 samples, 0.31%)</title><rect x="98.3422%" y="837" width="0.3097%" height="15" fill="rgb(250,61,18)" fg:x="115262" fg:w="363"/><text x="98.5922%" y="847.50"></text></g><g><title>do_futex (368 samples, 0.31%)</title><rect x="98.3397%" y="853" width="0.3140%" height="15" fill="rgb(235,172,48)" fg:x="115259" fg:w="368"/><text x="98.5897%" y="863.50"></text></g><g><title>__x64_sys_futex (374 samples, 0.32%)</title><rect x="98.3371%" y="869" width="0.3191%" height="15" fill="rgb(249,201,17)" fg:x="115256" fg:w="374"/><text x="98.5871%" y="879.50"></text></g><g><title>exit_to_user_mode_loop (30 samples, 0.03%)</title><rect x="98.6758%" y="837" width="0.0256%" height="15" fill="rgb(219,208,6)" fg:x="115653" fg:w="30"/><text x="98.9258%" y="847.50"></text></g><g><title>__rseq_handle_notify_resume (20 samples, 0.02%)</title><rect x="98.6844%" y="821" width="0.0171%" height="15" fill="rgb(248,31,23)" fg:x="115663" fg:w="20"/><text x="98.9344%" y="831.50"></text></g><g><title>rseq_ip_fixup (20 samples, 0.02%)</title><rect x="98.6844%" y="805" width="0.0171%" height="15" fill="rgb(245,15,42)" fg:x="115663" fg:w="20"/><text x="98.9344%" y="815.50"></text></g><g><title>__get_user_8 (18 samples, 0.02%)</title><rect x="98.6861%" y="789" width="0.0154%" height="15" fill="rgb(222,217,39)" fg:x="115665" fg:w="18"/><text x="98.9361%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (452 samples, 0.39%)</title><rect x="98.3311%" y="901" width="0.3856%" height="15" fill="rgb(210,219,27)" fg:x="115249" fg:w="452"/><text x="98.5811%" y="911.50"></text></g><g><title>do_syscall_64 (445 samples, 0.38%)</title><rect x="98.3371%" y="885" width="0.3797%" height="15" fill="rgb(252,166,36)" fg:x="115256" fg:w="445"/><text x="98.5871%" y="895.50"></text></g><g><title>syscall_exit_to_user_mode (69 samples, 0.06%)</title><rect x="98.6579%" y="869" width="0.0589%" height="15" fill="rgb(245,132,34)" fg:x="115632" fg:w="69"/><text x="98.9079%" y="879.50"></text></g><g><title>exit_to_user_mode_prepare (48 samples, 0.04%)</title><rect x="98.6758%" y="853" width="0.0410%" height="15" fill="rgb(236,54,3)" fg:x="115653" fg:w="48"/><text x="98.9258%" y="863.50"></text></g><g><title>switch_fpu_return (17 samples, 0.01%)</title><rect x="98.7023%" y="837" width="0.0145%" height="15" fill="rgb(241,173,43)" fg:x="115684" fg:w="17"/><text x="98.9523%" y="847.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (489 samples, 0.42%)</title><rect x="98.3158%" y="917" width="0.4172%" height="15" fill="rgb(215,190,9)" fg:x="115231" fg:w="489"/><text x="98.5658%" y="927.50"></text></g><g><title>syscall_return_via_sysret (19 samples, 0.02%)</title><rect x="98.7168%" y="901" width="0.0162%" height="15" fill="rgb(242,101,16)" fg:x="115701" fg:w="19"/><text x="98.9668%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="98.7373%" y="885" width="0.0128%" height="15" fill="rgb(223,190,21)" fg:x="115725" fg:w="15"/><text x="98.9873%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (25 samples, 0.02%)</title><rect x="98.7330%" y="917" width="0.0213%" height="15" fill="rgb(215,228,25)" fg:x="115720" fg:w="25"/><text x="98.9830%" y="927.50"></text></g><g><title>__GI___lll_lock_wake (20 samples, 0.02%)</title><rect x="98.7373%" y="901" width="0.0171%" height="15" fill="rgb(225,36,22)" fg:x="115725" fg:w="20"/><text x="98.9873%" y="911.50"></text></g><g><title>futex_wait_queue (15 samples, 0.01%)</title><rect x="98.7654%" y="805" width="0.0128%" height="15" fill="rgb(251,106,46)" fg:x="115758" fg:w="15"/><text x="99.0154%" y="815.50"></text></g><g><title>schedule (15 samples, 0.01%)</title><rect x="98.7654%" y="789" width="0.0128%" height="15" fill="rgb(208,90,1)" fg:x="115758" fg:w="15"/><text x="99.0154%" y="799.50"></text></g><g><title>__schedule (15 samples, 0.01%)</title><rect x="98.7654%" y="773" width="0.0128%" height="15" fill="rgb(243,10,4)" fg:x="115758" fg:w="15"/><text x="99.0154%" y="783.50"></text></g><g><title>__x64_sys_futex (21 samples, 0.02%)</title><rect x="98.7637%" y="853" width="0.0179%" height="15" fill="rgb(212,137,27)" fg:x="115756" fg:w="21"/><text x="99.0137%" y="863.50"></text></g><g><title>do_futex (21 samples, 0.02%)</title><rect x="98.7637%" y="837" width="0.0179%" height="15" fill="rgb(231,220,49)" fg:x="115756" fg:w="21"/><text x="99.0137%" y="847.50"></text></g><g><title>futex_wait (21 samples, 0.02%)</title><rect x="98.7637%" y="821" width="0.0179%" height="15" fill="rgb(237,96,20)" fg:x="115756" fg:w="21"/><text x="99.0137%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.03%)</title><rect x="98.7594%" y="885" width="0.0256%" height="15" fill="rgb(239,229,30)" fg:x="115751" fg:w="30"/><text x="99.0094%" y="895.50"></text></g><g><title>do_syscall_64 (28 samples, 0.02%)</title><rect x="98.7611%" y="869" width="0.0239%" height="15" fill="rgb(219,65,33)" fg:x="115753" fg:w="28"/><text x="99.0111%" y="879.50"></text></g><g><title>pthread_cond_wait@@GLIBC_2.3.2 (566 samples, 0.48%)</title><rect x="98.3055%" y="933" width="0.4829%" height="15" fill="rgb(243,134,7)" fg:x="115219" fg:w="566"/><text x="98.5555%" y="943.50"></text></g><g><title>__pthread_mutex_cond_lock (40 samples, 0.03%)</title><rect x="98.7543%" y="917" width="0.0341%" height="15" fill="rgb(216,177,54)" fg:x="115745" fg:w="40"/><text x="99.0043%" y="927.50"></text></g><g><title>__GI___lll_lock_wait (34 samples, 0.03%)</title><rect x="98.7594%" y="901" width="0.0290%" height="15" fill="rgb(211,160,20)" fg:x="115751" fg:w="34"/><text x="99.0094%" y="911.50"></text></g><g><title>uv_cond_wait (571 samples, 0.49%)</title><rect x="98.3047%" y="949" width="0.4872%" height="15" fill="rgb(239,85,39)" fg:x="115218" fg:w="571"/><text x="98.5547%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="98.8047%" y="901" width="0.0119%" height="15" fill="rgb(232,125,22)" fg:x="115804" fg:w="14"/><text x="99.0547%" y="911.50"></text></g><g><title>pthread_mutex_unlock@@GLIBC_2.2.5 (27 samples, 0.02%)</title><rect x="98.8004%" y="933" width="0.0230%" height="15" fill="rgb(244,57,34)" fg:x="115799" fg:w="27"/><text x="99.0504%" y="943.50"></text></g><g><title>__GI___lll_lock_wake (22 samples, 0.02%)</title><rect x="98.8047%" y="917" width="0.0188%" height="15" fill="rgb(214,203,32)" fg:x="115804" fg:w="22"/><text x="99.0547%" y="927.50"></text></g><g><title>uv_mutex_unlock (34 samples, 0.03%)</title><rect x="98.7961%" y="949" width="0.0290%" height="15" fill="rgb(207,58,43)" fg:x="115794" fg:w="34"/><text x="99.0461%" y="959.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (14 samples, 0.01%)</title><rect x="98.8337%" y="837" width="0.0119%" height="15" fill="rgb(215,193,15)" fg:x="115838" fg:w="14"/><text x="99.0837%" y="847.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (12 samples, 0.01%)</title><rect x="98.8354%" y="821" width="0.0102%" height="15" fill="rgb(232,15,44)" fg:x="115840" fg:w="12"/><text x="99.0854%" y="831.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (25 samples, 0.02%)</title><rect x="98.8277%" y="885" width="0.0213%" height="15" fill="rgb(212,3,48)" fg:x="115831" fg:w="25"/><text x="99.0777%" y="895.50"></text></g><g><title>v8::internal::compiler::InliningPhase::Run (18 samples, 0.02%)</title><rect x="98.8337%" y="869" width="0.0154%" height="15" fill="rgb(218,128,7)" fg:x="115838" fg:w="18"/><text x="99.0837%" y="879.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (18 samples, 0.02%)</title><rect x="98.8337%" y="853" width="0.0154%" height="15" fill="rgb(226,216,39)" fg:x="115838" fg:w="18"/><text x="99.0837%" y="863.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::SelectInstructions (16 samples, 0.01%)</title><rect x="98.8994%" y="869" width="0.0137%" height="15" fill="rgb(243,47,51)" fg:x="115915" fg:w="16"/><text x="99.1494%" y="879.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (13 samples, 0.01%)</title><rect x="98.9019%" y="853" width="0.0111%" height="15" fill="rgb(241,183,40)" fg:x="115918" fg:w="13"/><text x="99.1519%" y="863.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (109 samples, 0.09%)</title><rect x="98.8251%" y="949" width="0.0930%" height="15" fill="rgb(231,217,32)" fg:x="115828" fg:w="109"/><text x="99.0751%" y="959.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (109 samples, 0.09%)</title><rect x="98.8251%" y="933" width="0.0930%" height="15" fill="rgb(229,61,38)" fg:x="115828" fg:w="109"/><text x="99.0751%" y="943.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (109 samples, 0.09%)</title><rect x="98.8251%" y="917" width="0.0930%" height="15" fill="rgb(225,210,5)" fg:x="115828" fg:w="109"/><text x="99.0751%" y="927.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (109 samples, 0.09%)</title><rect x="98.8251%" y="901" width="0.0930%" height="15" fill="rgb(231,79,45)" fg:x="115828" fg:w="109"/><text x="99.0751%" y="911.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (81 samples, 0.07%)</title><rect x="98.8490%" y="885" width="0.0691%" height="15" fill="rgb(224,100,7)" fg:x="115856" fg:w="81"/><text x="99.0990%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.01%)</title><rect x="99.7389%" y="837" width="0.0145%" height="15" fill="rgb(241,198,18)" fg:x="116899" fg:w="17"/><text x="99.9889%" y="847.50"></text></g><g><title>v8::internal::EvacuationAllocator::AllocateInNewSpace (100 samples, 0.09%)</title><rect x="99.7568%" y="837" width="0.0853%" height="15" fill="rgb(252,97,53)" fg:x="116920" fg:w="100"/><text x="100.0068%" y="847.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateShortcutCandidate&lt;v8::internal::FullHeapObjectSlot&gt; (551 samples, 0.47%)</title><rect x="99.3823%" y="853" width="0.4701%" height="15" fill="rgb(220,88,7)" fg:x="116481" fg:w="551"/><text x="99.6323%" y="863.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::ShouldBePromoted (12 samples, 0.01%)</title><rect x="99.8422%" y="837" width="0.0102%" height="15" fill="rgb(213,176,14)" fg:x="117020" fg:w="12"/><text x="100.0922%" y="847.50"></text></g><g><title>v8::internal::HeapObject::SizeFromMap (18 samples, 0.02%)</title><rect x="99.8584%" y="853" width="0.0154%" height="15" fill="rgb(246,73,7)" fg:x="117039" fg:w="18"/><text x="100.1084%" y="863.50"></text></g><g><title>v8::internal::Scavenger::Process (1,114 samples, 0.95%)</title><rect x="98.9395%" y="901" width="0.9505%" height="15" fill="rgb(245,64,36)" fg:x="115962" fg:w="1114"/><text x="99.1895%" y="911.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (885 samples, 0.76%)</title><rect x="99.1348%" y="885" width="0.7551%" height="15" fill="rgb(245,80,10)" fg:x="116191" fg:w="885"/><text x="99.3848%" y="895.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (730 samples, 0.62%)</title><rect x="99.2671%" y="869" width="0.6228%" height="15" fill="rgb(232,107,50)" fg:x="116346" fg:w="730"/><text x="99.5171%" y="879.50"></text></g><g><title>v8::internal::PretenuringHandler::UpdateAllocationSite (19 samples, 0.02%)</title><rect x="99.8737%" y="853" width="0.0162%" height="15" fill="rgb(253,3,0)" fg:x="117057" fg:w="19"/><text x="100.1237%" y="863.50"></text></g><g><title>std::__detail::_Map_base&lt;v8::internal::AllocationSite, std::pair&lt;v8::internal::AllocationSite const, unsigned long&gt;, std::allocator&lt;std::pair&lt;v8::internal::AllocationSite const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;v8::internal::AllocationSite&gt;, v8::internal::Object::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (15 samples, 0.01%)</title><rect x="99.8771%" y="837" width="0.0128%" height="15" fill="rgb(212,99,53)" fg:x="117061" fg:w="15"/><text x="100.1271%" y="847.50"></text></g><g><title>operator new (15 samples, 0.01%)</title><rect x="99.8771%" y="821" width="0.0128%" height="15" fill="rgb(249,111,54)" fg:x="117061" fg:w="15"/><text x="100.1271%" y="831.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::Run (1,139 samples, 0.97%)</title><rect x="98.9233%" y="933" width="0.9718%" height="15" fill="rgb(249,55,30)" fg:x="115943" fg:w="1139"/><text x="99.1733%" y="943.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (1,124 samples, 0.96%)</title><rect x="98.9361%" y="917" width="0.9590%" height="15" fill="rgb(237,47,42)" fg:x="115958" fg:w="1124"/><text x="99.1861%" y="927.50"></text></g><g><title>v8::platform::DefaultJobState::CanRunFirstTask (13 samples, 0.01%)</title><rect x="99.8951%" y="933" width="0.0111%" height="15" fill="rgb(211,20,18)" fg:x="117082" fg:w="13"/><text x="100.1451%" y="943.50"></text></g><g><title>v8::platform::DefaultJobState::DidRunTask (17 samples, 0.01%)</title><rect x="99.9061%" y="933" width="0.0145%" height="15" fill="rgb(231,203,46)" fg:x="117095" fg:w="17"/><text x="100.1561%" y="943.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (1,176 samples, 1.00%)</title><rect x="98.9181%" y="949" width="1.0034%" height="15" fill="rgb(237,142,3)" fg:x="115937" fg:w="1176"/><text x="99.1681%" y="959.50"></text></g><g><title>node::(anonymous namespace)::PlatformWorkerThread (1,929 samples, 1.65%)</title><rect x="98.2765%" y="965" width="1.6458%" height="15" fill="rgb(241,107,1)" fg:x="115185" fg:w="1929"/><text x="98.5265%" y="975.50"></text></g><g><title>clone3 (1,938 samples, 1.65%)</title><rect x="98.2765%" y="997" width="1.6535%" height="15" fill="rgb(229,83,13)" fg:x="115185" fg:w="1938"/><text x="98.5265%" y="1007.50"></text></g><g><title>start_thread (1,938 samples, 1.65%)</title><rect x="98.2765%" y="981" width="1.6535%" height="15" fill="rgb(241,91,40)" fg:x="115185" fg:w="1938"/><text x="98.5265%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="99.9317%" y="997" width="0.0128%" height="15" fill="rgb(225,3,45)" fg:x="117125" fg:w="15"/><text x="100.1817%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (30 samples, 0.03%)</title><rect x="99.9445%" y="997" width="0.0256%" height="15" fill="rgb(244,223,14)" fg:x="117140" fg:w="30"/><text x="100.1945%" y="1007.50"></text></g><g><title>v8::internal::Builtin_IsTraceCategoryEnabled (25 samples, 0.02%)</title><rect x="99.9710%" y="997" width="0.0213%" height="15" fill="rgb(224,124,37)" fg:x="117171" fg:w="25"/><text x="100.2210%" y="1007.50"></text></g><g><title>v8::internal::tracing::TraceEventHelper::GetTracingController (25 samples, 0.02%)</title><rect x="99.9710%" y="981" width="0.0213%" height="15" fill="rgb(251,171,30)" fg:x="117171" fg:w="25"/><text x="100.2210%" y="991.50"></text></g><g><title>all (117,205 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(236,46,54)" fg:x="0" fg:w="117205"/><text x="0.2500%" y="1039.50"></text></g><g><title>node (117,139 samples, 99.94%)</title><rect x="0.0563%" y="1013" width="99.9437%" height="15" fill="rgb(245,213,5)" fg:x="66" fg:w="117139"/><text x="0.3063%" y="1023.50">node</text></g></svg></svg>