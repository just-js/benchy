<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="116858"><g><title>[anon] (23 samples, 0.02%)</title><rect x="0.0000%" y="917" width="0.0197%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="23"/><text x="0.2500%" y="927.50"></text></g><g><title>dequeue_task (16 samples, 0.01%)</title><rect x="0.0590%" y="693" width="0.0137%" height="15" fill="rgb(217,0,24)" fg:x="69" fg:w="16"/><text x="0.3090%" y="703.50"></text></g><g><title>dequeue_task_fair (15 samples, 0.01%)</title><rect x="0.0599%" y="677" width="0.0128%" height="15" fill="rgb(221,193,54)" fg:x="70" fg:w="15"/><text x="0.3099%" y="687.50"></text></g><g><title>dequeue_entity (14 samples, 0.01%)</title><rect x="0.0608%" y="661" width="0.0120%" height="15" fill="rgb(248,212,6)" fg:x="71" fg:w="14"/><text x="0.3108%" y="671.50"></text></g><g><title>__perf_event_task_sched_in (246 samples, 0.21%)</title><rect x="0.0779%" y="677" width="0.2105%" height="15" fill="rgb(208,68,35)" fg:x="91" fg:w="246"/><text x="0.3279%" y="687.50"></text></g><g><title>perf_ctx_enable (246 samples, 0.21%)</title><rect x="0.0779%" y="661" width="0.2105%" height="15" fill="rgb(232,128,0)" fg:x="91" fg:w="246"/><text x="0.3279%" y="671.50"></text></g><g><title>x86_pmu_enable (241 samples, 0.21%)</title><rect x="0.0822%" y="645" width="0.2062%" height="15" fill="rgb(207,160,47)" fg:x="96" fg:w="241"/><text x="0.3322%" y="655.50"></text></g><g><title>intel_pmu_enable_all (241 samples, 0.21%)</title><rect x="0.0822%" y="629" width="0.2062%" height="15" fill="rgb(228,23,34)" fg:x="96" fg:w="241"/><text x="0.3322%" y="639.50"></text></g><g><title>native_write_msr (240 samples, 0.21%)</title><rect x="0.0830%" y="613" width="0.2054%" height="15" fill="rgb(218,30,26)" fg:x="97" fg:w="240"/><text x="0.3330%" y="623.50"></text></g><g><title>finish_task_switch.isra.0 (254 samples, 0.22%)</title><rect x="0.0727%" y="693" width="0.2174%" height="15" fill="rgb(220,122,19)" fg:x="85" fg:w="254"/><text x="0.3227%" y="703.50"></text></g><g><title>__schedule (297 samples, 0.25%)</title><rect x="0.0505%" y="709" width="0.2542%" height="15" fill="rgb(250,228,42)" fg:x="59" fg:w="297"/><text x="0.3005%" y="719.50"></text></g><g><title>futex_wait_queue (303 samples, 0.26%)</title><rect x="0.0462%" y="741" width="0.2593%" height="15" fill="rgb(240,193,28)" fg:x="54" fg:w="303"/><text x="0.2962%" y="751.50"></text></g><g><title>schedule (299 samples, 0.26%)</title><rect x="0.0496%" y="725" width="0.2559%" height="15" fill="rgb(216,20,37)" fg:x="58" fg:w="299"/><text x="0.2996%" y="735.50"></text></g><g><title>__x64_sys_futex (306 samples, 0.26%)</title><rect x="0.0445%" y="789" width="0.2619%" height="15" fill="rgb(206,188,39)" fg:x="52" fg:w="306"/><text x="0.2945%" y="799.50"></text></g><g><title>do_futex (306 samples, 0.26%)</title><rect x="0.0445%" y="773" width="0.2619%" height="15" fill="rgb(217,207,13)" fg:x="52" fg:w="306"/><text x="0.2945%" y="783.50"></text></g><g><title>futex_wait (306 samples, 0.26%)</title><rect x="0.0445%" y="757" width="0.2619%" height="15" fill="rgb(231,73,38)" fg:x="52" fg:w="306"/><text x="0.2945%" y="767.50"></text></g><g><title>exit_to_user_mode_loop (14 samples, 0.01%)</title><rect x="0.3106%" y="757" width="0.0120%" height="15" fill="rgb(225,20,46)" fg:x="363" fg:w="14"/><text x="0.5606%" y="767.50"></text></g><g><title>exit_to_user_mode_prepare (17 samples, 0.01%)</title><rect x="0.3106%" y="773" width="0.0145%" height="15" fill="rgb(210,31,41)" fg:x="363" fg:w="17"/><text x="0.5606%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (334 samples, 0.29%)</title><rect x="0.0402%" y="821" width="0.2858%" height="15" fill="rgb(221,200,47)" fg:x="47" fg:w="334"/><text x="0.2902%" y="831.50"></text></g><g><title>do_syscall_64 (329 samples, 0.28%)</title><rect x="0.0445%" y="805" width="0.2815%" height="15" fill="rgb(226,26,5)" fg:x="52" fg:w="329"/><text x="0.2945%" y="815.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.02%)</title><rect x="0.3064%" y="789" width="0.0197%" height="15" fill="rgb(249,33,26)" fg:x="358" fg:w="23"/><text x="0.5564%" y="799.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (341 samples, 0.29%)</title><rect x="0.0377%" y="837" width="0.2918%" height="15" fill="rgb(235,183,28)" fg:x="44" fg:w="341"/><text x="0.2877%" y="847.50"></text></g><g><title>__perf_event_task_sched_in (21 samples, 0.02%)</title><rect x="0.3354%" y="661" width="0.0180%" height="15" fill="rgb(221,5,38)" fg:x="392" fg:w="21"/><text x="0.5854%" y="671.50"></text></g><g><title>perf_ctx_enable (21 samples, 0.02%)</title><rect x="0.3354%" y="645" width="0.0180%" height="15" fill="rgb(247,18,42)" fg:x="392" fg:w="21"/><text x="0.5854%" y="655.50"></text></g><g><title>x86_pmu_enable (20 samples, 0.02%)</title><rect x="0.3363%" y="629" width="0.0171%" height="15" fill="rgb(241,131,45)" fg:x="393" fg:w="20"/><text x="0.5863%" y="639.50"></text></g><g><title>intel_pmu_enable_all (20 samples, 0.02%)</title><rect x="0.3363%" y="613" width="0.0171%" height="15" fill="rgb(249,31,29)" fg:x="393" fg:w="20"/><text x="0.5863%" y="623.50"></text></g><g><title>native_write_msr (20 samples, 0.02%)</title><rect x="0.3363%" y="597" width="0.0171%" height="15" fill="rgb(225,111,53)" fg:x="393" fg:w="20"/><text x="0.5863%" y="607.50"></text></g><g><title>finish_task_switch.isra.0 (23 samples, 0.02%)</title><rect x="0.3354%" y="677" width="0.0197%" height="15" fill="rgb(238,160,17)" fg:x="392" fg:w="23"/><text x="0.5854%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.02%)</title><rect x="0.3346%" y="805" width="0.0214%" height="15" fill="rgb(214,148,48)" fg:x="391" fg:w="25"/><text x="0.5846%" y="815.50"></text></g><g><title>do_syscall_64 (25 samples, 0.02%)</title><rect x="0.3346%" y="789" width="0.0214%" height="15" fill="rgb(232,36,49)" fg:x="391" fg:w="25"/><text x="0.5846%" y="799.50"></text></g><g><title>__x64_sys_futex (25 samples, 0.02%)</title><rect x="0.3346%" y="773" width="0.0214%" height="15" fill="rgb(209,103,24)" fg:x="391" fg:w="25"/><text x="0.5846%" y="783.50"></text></g><g><title>do_futex (25 samples, 0.02%)</title><rect x="0.3346%" y="757" width="0.0214%" height="15" fill="rgb(229,88,8)" fg:x="391" fg:w="25"/><text x="0.5846%" y="767.50"></text></g><g><title>futex_wait (25 samples, 0.02%)</title><rect x="0.3346%" y="741" width="0.0214%" height="15" fill="rgb(213,181,19)" fg:x="391" fg:w="25"/><text x="0.5846%" y="751.50"></text></g><g><title>futex_wait_queue (24 samples, 0.02%)</title><rect x="0.3354%" y="725" width="0.0205%" height="15" fill="rgb(254,191,54)" fg:x="392" fg:w="24"/><text x="0.5854%" y="735.50"></text></g><g><title>schedule (24 samples, 0.02%)</title><rect x="0.3354%" y="709" width="0.0205%" height="15" fill="rgb(241,83,37)" fg:x="392" fg:w="24"/><text x="0.5854%" y="719.50"></text></g><g><title>__schedule (24 samples, 0.02%)</title><rect x="0.3354%" y="693" width="0.0205%" height="15" fill="rgb(233,36,39)" fg:x="392" fg:w="24"/><text x="0.5854%" y="703.50"></text></g><g><title>pthread_cond_wait@@GLIBC_2.3.2 (381 samples, 0.33%)</title><rect x="0.0308%" y="853" width="0.3260%" height="15" fill="rgb(226,3,54)" fg:x="36" fg:w="381"/><text x="0.2808%" y="863.50"></text></g><g><title>__pthread_mutex_cond_lock (26 samples, 0.02%)</title><rect x="0.3346%" y="837" width="0.0222%" height="15" fill="rgb(245,192,40)" fg:x="391" fg:w="26"/><text x="0.5846%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (26 samples, 0.02%)</title><rect x="0.3346%" y="821" width="0.0222%" height="15" fill="rgb(238,167,29)" fg:x="391" fg:w="26"/><text x="0.5846%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="0.3577%" y="821" width="0.0120%" height="15" fill="rgb(232,182,51)" fg:x="418" fg:w="14"/><text x="0.6077%" y="831.50"></text></g><g><title>do_syscall_64 (13 samples, 0.01%)</title><rect x="0.3586%" y="805" width="0.0111%" height="15" fill="rgb(231,60,39)" fg:x="419" fg:w="13"/><text x="0.6086%" y="815.50"></text></g><g><title>pthread_mutex_unlock@@GLIBC_2.2.5 (16 samples, 0.01%)</title><rect x="0.3568%" y="853" width="0.0137%" height="15" fill="rgb(208,69,12)" fg:x="417" fg:w="16"/><text x="0.6068%" y="863.50"></text></g><g><title>__GI___lll_lock_wake (15 samples, 0.01%)</title><rect x="0.3577%" y="837" width="0.0128%" height="15" fill="rgb(235,93,37)" fg:x="418" fg:w="15"/><text x="0.6077%" y="847.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (16 samples, 0.01%)</title><rect x="0.3876%" y="709" width="0.0137%" height="15" fill="rgb(213,116,39)" fg:x="453" fg:w="16"/><text x="0.6376%" y="719.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (15 samples, 0.01%)</title><rect x="0.3885%" y="693" width="0.0128%" height="15" fill="rgb(222,207,29)" fg:x="454" fg:w="15"/><text x="0.6385%" y="703.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (28 samples, 0.02%)</title><rect x="0.3791%" y="773" width="0.0240%" height="15" fill="rgb(206,96,30)" fg:x="443" fg:w="28"/><text x="0.6291%" y="783.50"></text></g><g><title>auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (18 samples, 0.02%)</title><rect x="0.3876%" y="757" width="0.0154%" height="15" fill="rgb(218,138,4)" fg:x="453" fg:w="18"/><text x="0.6376%" y="767.50"></text></g><g><title>v8::internal::compiler::InliningPhase::Run (18 samples, 0.02%)</title><rect x="0.3876%" y="741" width="0.0154%" height="15" fill="rgb(250,191,14)" fg:x="453" fg:w="18"/><text x="0.6376%" y="751.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (18 samples, 0.02%)</title><rect x="0.3876%" y="725" width="0.0154%" height="15" fill="rgb(239,60,40)" fg:x="453" fg:w="18"/><text x="0.6376%" y="735.50"></text></g><g><title>v8::internal::compiler::EffectGraphReducer::ReduceFrom (15 samples, 0.01%)</title><rect x="0.4202%" y="725" width="0.0128%" height="15" fill="rgb(206,27,48)" fg:x="491" fg:w="15"/><text x="0.6702%" y="735.50"></text></g><g><title>v8::internal::compiler::EscapeAnalysis::Reduce (13 samples, 0.01%)</title><rect x="0.4219%" y="709" width="0.0111%" height="15" fill="rgb(225,35,8)" fg:x="493" fg:w="13"/><text x="0.6719%" y="719.50"></text></g><g><title>auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EscapeAnalysisPhase&gt; (18 samples, 0.02%)</title><rect x="0.4202%" y="757" width="0.0154%" height="15" fill="rgb(250,213,24)" fg:x="491" fg:w="18"/><text x="0.6702%" y="767.50"></text></g><g><title>v8::internal::compiler::EscapeAnalysisPhase::Run (18 samples, 0.02%)</title><rect x="0.4202%" y="741" width="0.0154%" height="15" fill="rgb(247,123,22)" fg:x="491" fg:w="18"/><text x="0.6702%" y="751.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::AllocateRegisters (19 samples, 0.02%)</title><rect x="0.4886%" y="757" width="0.0163%" height="15" fill="rgb(231,138,38)" fg:x="571" fg:w="19"/><text x="0.7386%" y="767.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::AllocateRegisters (19 samples, 0.02%)</title><rect x="0.4886%" y="741" width="0.0163%" height="15" fill="rgb(231,145,46)" fg:x="571" fg:w="19"/><text x="0.7386%" y="751.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::Run (156 samples, 0.13%)</title><rect x="0.3731%" y="837" width="0.1335%" height="15" fill="rgb(251,118,11)" fg:x="436" fg:w="156"/><text x="0.6231%" y="847.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (155 samples, 0.13%)</title><rect x="0.3740%" y="821" width="0.1326%" height="15" fill="rgb(217,147,25)" fg:x="437" fg:w="155"/><text x="0.6240%" y="831.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (155 samples, 0.13%)</title><rect x="0.3740%" y="805" width="0.1326%" height="15" fill="rgb(247,81,37)" fg:x="437" fg:w="155"/><text x="0.6240%" y="815.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (155 samples, 0.13%)</title><rect x="0.3740%" y="789" width="0.1326%" height="15" fill="rgb(209,12,38)" fg:x="437" fg:w="155"/><text x="0.6240%" y="799.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (121 samples, 0.10%)</title><rect x="0.4031%" y="773" width="0.1035%" height="15" fill="rgb(227,1,9)" fg:x="471" fg:w="121"/><text x="0.6531%" y="783.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (159 samples, 0.14%)</title><rect x="0.3714%" y="853" width="0.1361%" height="15" fill="rgb(248,47,43)" fg:x="434" fg:w="159"/><text x="0.6214%" y="863.50"></text></g><g><title>v8::platform::DefaultJobWorker::~DefaultJobWorker (12 samples, 0.01%)</title><rect x="0.5075%" y="853" width="0.0103%" height="15" fill="rgb(221,10,30)" fg:x="593" fg:w="12"/><text x="0.7575%" y="863.50"></text></g><g><title>clone3 (594 samples, 0.51%)</title><rect x="0.0274%" y="917" width="0.5083%" height="15" fill="rgb(210,229,1)" fg:x="32" fg:w="594"/><text x="0.2774%" y="927.50"></text></g><g><title>start_thread (594 samples, 0.51%)</title><rect x="0.0274%" y="901" width="0.5083%" height="15" fill="rgb(222,148,37)" fg:x="32" fg:w="594"/><text x="0.2774%" y="911.50"></text></g><g><title>v8::base::ThreadEntry (594 samples, 0.51%)</title><rect x="0.0274%" y="885" width="0.5083%" height="15" fill="rgb(234,67,33)" fg:x="32" fg:w="594"/><text x="0.2774%" y="895.50"></text></g><g><title>v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (593 samples, 0.51%)</title><rect x="0.0282%" y="869" width="0.5075%" height="15" fill="rgb(247,98,35)" fg:x="33" fg:w="593"/><text x="0.2782%" y="879.50"></text></g><g><title>v8::platform::DelayedTaskQueue::TryGetNext (21 samples, 0.02%)</title><rect x="0.5177%" y="853" width="0.0180%" height="15" fill="rgb(247,138,52)" fg:x="605" fg:w="21"/><text x="0.7677%" y="863.50"></text></g><g><title>v8::platform::(anonymous namespace)::DefaultTimeFunction (17 samples, 0.01%)</title><rect x="0.5211%" y="837" width="0.0145%" height="15" fill="rgb(213,79,30)" fg:x="609" fg:w="17"/><text x="0.7711%" y="847.50"></text></g><g><title>v8::base::TimeTicks::Now (15 samples, 0.01%)</title><rect x="0.5229%" y="821" width="0.0128%" height="15" fill="rgb(246,177,23)" fg:x="611" fg:w="15"/><text x="0.7729%" y="831.50"></text></g><g><title>_compound_head (12 samples, 0.01%)</title><rect x="0.5443%" y="645" width="0.0103%" height="15" fill="rgb(230,62,27)" fg:x="636" fg:w="12"/><text x="0.7943%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.03%)</title><rect x="0.5357%" y="917" width="0.0317%" height="15" fill="rgb(216,154,8)" fg:x="626" fg:w="37"/><text x="0.7857%" y="927.50"></text></g><g><title>do_syscall_64 (37 samples, 0.03%)</title><rect x="0.5357%" y="901" width="0.0317%" height="15" fill="rgb(244,35,45)" fg:x="626" fg:w="37"/><text x="0.7857%" y="911.50"></text></g><g><title>syscall_exit_to_user_mode (36 samples, 0.03%)</title><rect x="0.5365%" y="885" width="0.0308%" height="15" fill="rgb(251,115,12)" fg:x="627" fg:w="36"/><text x="0.7865%" y="895.50"></text></g><g><title>exit_to_user_mode_prepare (36 samples, 0.03%)</title><rect x="0.5365%" y="869" width="0.0308%" height="15" fill="rgb(240,54,50)" fg:x="627" fg:w="36"/><text x="0.7865%" y="879.50"></text></g><g><title>exit_to_user_mode_loop (36 samples, 0.03%)</title><rect x="0.5365%" y="853" width="0.0308%" height="15" fill="rgb(233,84,52)" fg:x="627" fg:w="36"/><text x="0.7865%" y="863.50"></text></g><g><title>arch_do_signal_or_restart (36 samples, 0.03%)</title><rect x="0.5365%" y="837" width="0.0308%" height="15" fill="rgb(207,117,47)" fg:x="627" fg:w="36"/><text x="0.7865%" y="847.50"></text></g><g><title>get_signal (36 samples, 0.03%)</title><rect x="0.5365%" y="821" width="0.0308%" height="15" fill="rgb(249,43,39)" fg:x="627" fg:w="36"/><text x="0.7865%" y="831.50"></text></g><g><title>do_group_exit (36 samples, 0.03%)</title><rect x="0.5365%" y="805" width="0.0308%" height="15" fill="rgb(209,38,44)" fg:x="627" fg:w="36"/><text x="0.7865%" y="815.50"></text></g><g><title>do_exit (36 samples, 0.03%)</title><rect x="0.5365%" y="789" width="0.0308%" height="15" fill="rgb(236,212,23)" fg:x="627" fg:w="36"/><text x="0.7865%" y="799.50"></text></g><g><title>exit_mm (36 samples, 0.03%)</title><rect x="0.5365%" y="773" width="0.0308%" height="15" fill="rgb(242,79,21)" fg:x="627" fg:w="36"/><text x="0.7865%" y="783.50"></text></g><g><title>mmput (35 samples, 0.03%)</title><rect x="0.5374%" y="757" width="0.0300%" height="15" fill="rgb(211,96,35)" fg:x="628" fg:w="35"/><text x="0.7874%" y="767.50"></text></g><g><title>__mmput (35 samples, 0.03%)</title><rect x="0.5374%" y="741" width="0.0300%" height="15" fill="rgb(253,215,40)" fg:x="628" fg:w="35"/><text x="0.7874%" y="751.50"></text></g><g><title>exit_mmap (35 samples, 0.03%)</title><rect x="0.5374%" y="725" width="0.0300%" height="15" fill="rgb(211,81,21)" fg:x="628" fg:w="35"/><text x="0.7874%" y="735.50"></text></g><g><title>unmap_vmas (27 samples, 0.02%)</title><rect x="0.5443%" y="709" width="0.0231%" height="15" fill="rgb(208,190,38)" fg:x="636" fg:w="27"/><text x="0.7943%" y="719.50"></text></g><g><title>unmap_single_vma (27 samples, 0.02%)</title><rect x="0.5443%" y="693" width="0.0231%" height="15" fill="rgb(235,213,38)" fg:x="636" fg:w="27"/><text x="0.7943%" y="703.50"></text></g><g><title>unmap_page_range (27 samples, 0.02%)</title><rect x="0.5443%" y="677" width="0.0231%" height="15" fill="rgb(237,122,38)" fg:x="636" fg:w="27"/><text x="0.7943%" y="687.50"></text></g><g><title>zap_pmd_range.isra.0 (27 samples, 0.02%)</title><rect x="0.5443%" y="661" width="0.0231%" height="15" fill="rgb(244,218,35)" fg:x="636" fg:w="27"/><text x="0.7943%" y="671.50"></text></g><g><title>zap_pte_range (15 samples, 0.01%)</title><rect x="0.5545%" y="645" width="0.0128%" height="15" fill="rgb(240,68,47)" fg:x="648" fg:w="15"/><text x="0.8045%" y="655.50"></text></g><g><title>V8_DefaultWorke (664 samples, 0.57%)</title><rect x="0.0000%" y="933" width="0.5682%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="664"/><text x="0.2500%" y="943.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (14 samples, 0.01%)</title><rect x="0.5793%" y="901" width="0.0120%" height="15" fill="rgb(235,124,12)" fg:x="677" fg:w="14"/><text x="0.8293%" y="911.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="0.6255%" y="901" width="0.0103%" height="15" fill="rgb(224,169,11)" fg:x="731" fg:w="12"/><text x="0.8755%" y="911.50"></text></g><g><title>[[heap]] (308 samples, 0.26%)</title><rect x="0.5682%" y="917" width="0.2636%" height="15" fill="rgb(250,166,2)" fg:x="664" fg:w="308"/><text x="0.8182%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (16 samples, 0.01%)</title><rect x="0.8985%" y="901" width="0.0137%" height="15" fill="rgb(242,216,29)" fg:x="1050" fg:w="16"/><text x="1.1485%" y="911.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (13 samples, 0.01%)</title><rect x="0.9636%" y="901" width="0.0111%" height="15" fill="rgb(230,116,27)" fg:x="1126" fg:w="13"/><text x="1.2136%" y="911.50"></text></g><g><title>http::header::map::hash_elem_using (12 samples, 0.01%)</title><rect x="0.9747%" y="901" width="0.0103%" height="15" fill="rgb(228,99,48)" fg:x="1139" fg:w="12"/><text x="1.2247%" y="911.50"></text></g><g><title>tokio::runtime::task::raw::poll (22 samples, 0.02%)</title><rect x="1.0260%" y="901" width="0.0188%" height="15" fill="rgb(253,11,6)" fg:x="1199" fg:w="22"/><text x="1.2760%" y="911.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (82 samples, 0.07%)</title><rect x="1.1758%" y="901" width="0.0702%" height="15" fill="rgb(247,143,39)" fg:x="1374" fg:w="82"/><text x="1.4258%" y="911.50"></text></g><g><title>[[stack]] (648 samples, 0.55%)</title><rect x="0.8318%" y="917" width="0.5545%" height="15" fill="rgb(236,97,10)" fg:x="972" fg:w="648"/><text x="1.0818%" y="927.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (89 samples, 0.08%)</title><rect x="1.3101%" y="901" width="0.0762%" height="15" fill="rgb(233,208,19)" fg:x="1531" fg:w="89"/><text x="1.5601%" y="911.50"></text></g><g><title>[deno] (14 samples, 0.01%)</title><rect x="1.3931%" y="917" width="0.0120%" height="15" fill="rgb(216,164,2)" fg:x="1628" fg:w="14"/><text x="1.6431%" y="927.50"></text></g><g><title>Builtins_Add (12 samples, 0.01%)</title><rect x="40.7674%" y="901" width="0.0103%" height="15" fill="rgb(220,129,5)" fg:x="47640" fg:w="12"/><text x="41.0174%" y="911.50"></text></g><g><title>Builtins_AsyncFunctionAwaitCaught (116 samples, 0.10%)</title><rect x="40.7786%" y="901" width="0.0993%" height="15" fill="rgb(242,17,10)" fg:x="47653" fg:w="116"/><text x="41.0286%" y="911.50"></text></g><g><title>Builtins_ResolvePromise (39 samples, 0.03%)</title><rect x="40.8444%" y="885" width="0.0334%" height="15" fill="rgb(242,107,0)" fg:x="47730" fg:w="39"/><text x="41.0944%" y="895.50"></text></g><g><title>Builtins_GetProperty (34 samples, 0.03%)</title><rect x="40.8487%" y="869" width="0.0291%" height="15" fill="rgb(251,28,31)" fg:x="47735" fg:w="34"/><text x="41.0987%" y="879.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (24 samples, 0.02%)</title><rect x="40.8889%" y="789" width="0.0205%" height="15" fill="rgb(233,223,10)" fg:x="47782" fg:w="24"/><text x="41.1389%" y="799.50"></text></g><g><title>Builtins_RunMicrotasks (24 samples, 0.02%)</title><rect x="40.8889%" y="773" width="0.0205%" height="15" fill="rgb(215,21,27)" fg:x="47782" fg:w="24"/><text x="41.1389%" y="783.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (14 samples, 0.01%)</title><rect x="40.8975%" y="757" width="0.0120%" height="15" fill="rgb(232,23,21)" fg:x="47792" fg:w="14"/><text x="41.1475%" y="767.50"></text></g><g><title>deno_core::ops_builtin_v8::op_run_microtasks::v8_fn_ptr (26 samples, 0.02%)</title><rect x="40.8881%" y="885" width="0.0222%" height="15" fill="rgb(244,5,23)" fg:x="47781" fg:w="26"/><text x="41.1381%" y="895.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (26 samples, 0.02%)</title><rect x="40.8881%" y="869" width="0.0222%" height="15" fill="rgb(226,81,46)" fg:x="47781" fg:w="26"/><text x="41.1381%" y="879.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (26 samples, 0.02%)</title><rect x="40.8881%" y="853" width="0.0222%" height="15" fill="rgb(247,70,30)" fg:x="47781" fg:w="26"/><text x="41.1381%" y="863.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (26 samples, 0.02%)</title><rect x="40.8881%" y="837" width="0.0222%" height="15" fill="rgb(212,68,19)" fg:x="47781" fg:w="26"/><text x="41.1381%" y="847.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (26 samples, 0.02%)</title><rect x="40.8881%" y="821" width="0.0222%" height="15" fill="rgb(240,187,13)" fg:x="47781" fg:w="26"/><text x="41.1381%" y="831.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (26 samples, 0.02%)</title><rect x="40.8881%" y="805" width="0.0222%" height="15" fill="rgb(223,113,26)" fg:x="47781" fg:w="26"/><text x="41.1381%" y="815.50"></text></g><g><title>deno_http::http_next::op_http_try_wait::v8_fn_ptr (13 samples, 0.01%)</title><rect x="40.9180%" y="885" width="0.0111%" height="15" fill="rgb(206,192,2)" fg:x="47816" fg:w="13"/><text x="41.1680%" y="895.50"></text></g><g><title>Builtins_CallApiCallbackGeneric (61 samples, 0.05%)</title><rect x="40.8847%" y="901" width="0.0522%" height="15" fill="rgb(241,108,4)" fg:x="47777" fg:w="61"/><text x="41.1347%" y="911.50"></text></g><g><title>deno_core::ops_builtin_v8::op_has_tick_scheduled::v8_fn_ptr (13 samples, 0.01%)</title><rect x="40.9420%" y="885" width="0.0111%" height="15" fill="rgb(247,173,49)" fg:x="47844" fg:w="13"/><text x="41.1920%" y="895.50"></text></g><g><title>Builtins_CompileLazy (12 samples, 0.01%)</title><rect x="41.0524%" y="757" width="0.0103%" height="15" fill="rgb(224,114,35)" fg:x="47973" fg:w="12"/><text x="41.3024%" y="767.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (16 samples, 0.01%)</title><rect x="41.0669%" y="741" width="0.0137%" height="15" fill="rgb(245,159,27)" fg:x="47990" fg:w="16"/><text x="41.3169%" y="751.50"></text></g><g><title>Builtins_ResolvePromise (13 samples, 0.01%)</title><rect x="41.0866%" y="741" width="0.0111%" height="15" fill="rgb(245,172,44)" fg:x="48013" fg:w="13"/><text x="41.3366%" y="751.50"></text></g><g><title>Builtins_ResumeGeneratorTrampoline (37 samples, 0.03%)</title><rect x="41.0977%" y="741" width="0.0317%" height="15" fill="rgb(236,23,11)" fg:x="48026" fg:w="37"/><text x="41.3477%" y="751.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (163 samples, 0.14%)</title><rect x="40.9908%" y="789" width="0.1395%" height="15" fill="rgb(205,117,38)" fg:x="47901" fg:w="163"/><text x="41.2408%" y="799.50"></text></g><g><title>Builtins_RunMicrotasks (155 samples, 0.13%)</title><rect x="40.9976%" y="773" width="0.1326%" height="15" fill="rgb(237,72,25)" fg:x="47909" fg:w="155"/><text x="41.2476%" y="783.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (79 samples, 0.07%)</title><rect x="41.0627%" y="757" width="0.0676%" height="15" fill="rgb(244,70,9)" fg:x="47985" fg:w="79"/><text x="41.3127%" y="767.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (170 samples, 0.15%)</title><rect x="40.9856%" y="805" width="0.1455%" height="15" fill="rgb(217,125,39)" fg:x="47895" fg:w="170"/><text x="41.2356%" y="815.50"></text></g><g><title>deno_core::ops_builtin_v8::op_run_microtasks::v8_fn_ptr (209 samples, 0.18%)</title><rect x="40.9531%" y="885" width="0.1788%" height="15" fill="rgb(235,36,10)" fg:x="47857" fg:w="209"/><text x="41.2031%" y="895.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (192 samples, 0.16%)</title><rect x="40.9677%" y="869" width="0.1643%" height="15" fill="rgb(251,123,47)" fg:x="47874" fg:w="192"/><text x="41.2177%" y="879.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (190 samples, 0.16%)</title><rect x="40.9694%" y="853" width="0.1626%" height="15" fill="rgb(221,13,13)" fg:x="47876" fg:w="190"/><text x="41.2194%" y="863.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (179 samples, 0.15%)</title><rect x="40.9788%" y="837" width="0.1532%" height="15" fill="rgb(238,131,9)" fg:x="47887" fg:w="179"/><text x="41.2288%" y="847.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (177 samples, 0.15%)</title><rect x="40.9805%" y="821" width="0.1515%" height="15" fill="rgb(211,50,8)" fg:x="47889" fg:w="177"/><text x="41.2305%" y="831.50"></text></g><g><title>deno_http::http_next::is_request_compressible (27 samples, 0.02%)</title><rect x="41.1696%" y="869" width="0.0231%" height="15" fill="rgb(245,182,24)" fg:x="48110" fg:w="27"/><text x="41.4196%" y="879.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (25 samples, 0.02%)</title><rect x="41.1713%" y="853" width="0.0214%" height="15" fill="rgb(242,14,37)" fg:x="48112" fg:w="25"/><text x="41.4213%" y="863.50"></text></g><g><title>deno_http::http_next::modify_compressibility_from_response (24 samples, 0.02%)</title><rect x="41.1927%" y="869" width="0.0205%" height="15" fill="rgb(246,228,12)" fg:x="48137" fg:w="24"/><text x="41.4427%" y="879.50"></text></g><g><title>deno_http::response_body::ResponseBytesInner::from_vec (17 samples, 0.01%)</title><rect x="41.2133%" y="869" width="0.0145%" height="15" fill="rgb(213,55,15)" fg:x="48161" fg:w="17"/><text x="41.4633%" y="879.50"></text></g><g><title>deno_http::service::HttpRecord::complete (35 samples, 0.03%)</title><rect x="41.2278%" y="869" width="0.0300%" height="15" fill="rgb(209,9,3)" fg:x="48178" fg:w="35"/><text x="41.4778%" y="879.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (35 samples, 0.03%)</title><rect x="41.2278%" y="853" width="0.0300%" height="15" fill="rgb(230,59,30)" fg:x="48178" fg:w="35"/><text x="41.4778%" y="863.50"></text></g><g><title>malloc_consolidate (21 samples, 0.02%)</title><rect x="41.3827%" y="821" width="0.0180%" height="15" fill="rgb(209,121,21)" fg:x="48359" fg:w="21"/><text x="41.6327%" y="831.50"></text></g><g><title>malloc (169 samples, 0.14%)</title><rect x="41.2672%" y="853" width="0.1446%" height="15" fill="rgb(220,109,13)" fg:x="48224" fg:w="169"/><text x="41.5172%" y="863.50"></text></g><g><title>_int_malloc (143 samples, 0.12%)</title><rect x="41.2894%" y="837" width="0.1224%" height="15" fill="rgb(232,18,1)" fg:x="48250" fg:w="143"/><text x="41.5394%" y="847.50"></text></g><g><title>unlink_chunk.constprop.0 (13 samples, 0.01%)</title><rect x="41.4007%" y="821" width="0.0111%" height="15" fill="rgb(215,41,42)" fg:x="48380" fg:w="13"/><text x="41.6507%" y="831.50"></text></g><g><title>v8::internal::SemiSpace::AddRangeToActiveSystemPages (28 samples, 0.02%)</title><rect x="46.7105%" y="757" width="0.0240%" height="15" fill="rgb(224,123,36)" fg:x="54585" fg:w="28"/><text x="46.9605%" y="767.50"></text></g><g><title>heap::base::ActiveSystemPages::Add (20 samples, 0.02%)</title><rect x="46.7174%" y="741" width="0.0171%" height="15" fill="rgb(240,125,3)" fg:x="54593" fg:w="20"/><text x="46.9674%" y="751.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::Allocate (55 samples, 0.05%)</title><rect x="46.7345%" y="757" width="0.0471%" height="15" fill="rgb(205,98,50)" fg:x="54613" fg:w="55"/><text x="46.9845%" y="767.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (162 samples, 0.14%)</title><rect x="46.6592%" y="821" width="0.1386%" height="15" fill="rgb(205,185,37)" fg:x="54525" fg:w="162"/><text x="46.9092%" y="831.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (135 samples, 0.12%)</title><rect x="46.6823%" y="805" width="0.1155%" height="15" fill="rgb(238,207,15)" fg:x="54552" fg:w="135"/><text x="46.9323%" y="815.50"></text></g><g><title>v8::internal::MainAllocator::AllocateRawSlowUnaligned (119 samples, 0.10%)</title><rect x="46.6960%" y="789" width="0.1018%" height="15" fill="rgb(213,199,42)" fg:x="54568" fg:w="119"/><text x="46.9460%" y="799.50"></text></g><g><title>v8::internal::SemiSpaceNewSpaceAllocatorPolicy::EnsureAllocation (105 samples, 0.09%)</title><rect x="46.7080%" y="773" width="0.0899%" height="15" fill="rgb(235,201,11)" fg:x="54582" fg:w="105"/><text x="46.9580%" y="783.50"></text></g><g><title>v8::internal::SemiSpaceNewSpaceAllocatorPolicy::FreeLinearAllocationAreaUnsynchronized (16 samples, 0.01%)</title><rect x="46.7841%" y="757" width="0.0137%" height="15" fill="rgb(207,46,11)" fg:x="54671" fg:w="16"/><text x="47.0341%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,830 samples, 1.57%)</title><rect x="60.3835%" y="789" width="1.5660%" height="15" fill="rgb(241,35,35)" fg:x="70563" fg:w="1830"/><text x="60.6335%" y="799.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (12 samples, 0.01%)</title><rect x="61.9393%" y="773" width="0.0103%" height="15" fill="rgb(243,32,47)" fg:x="72381" fg:w="12"/><text x="62.1893%" y="783.50"></text></g><g><title>sysvec_apic_timer_interrupt (12 samples, 0.01%)</title><rect x="61.9393%" y="757" width="0.0103%" height="15" fill="rgb(247,202,23)" fg:x="72381" fg:w="12"/><text x="62.1893%" y="767.50"></text></g><g><title>__hrtimer_run_queues (21 samples, 0.02%)</title><rect x="61.9504%" y="725" width="0.0180%" height="15" fill="rgb(219,102,11)" fg:x="72394" fg:w="21"/><text x="62.2004%" y="735.50"></text></g><g><title>tick_sched_timer (16 samples, 0.01%)</title><rect x="61.9547%" y="709" width="0.0137%" height="15" fill="rgb(243,110,44)" fg:x="72399" fg:w="16"/><text x="62.2047%" y="719.50"></text></g><g><title>tick_sched_handle (15 samples, 0.01%)</title><rect x="61.9555%" y="693" width="0.0128%" height="15" fill="rgb(222,74,54)" fg:x="72400" fg:w="15"/><text x="62.2055%" y="703.50"></text></g><g><title>update_process_times (15 samples, 0.01%)</title><rect x="61.9555%" y="677" width="0.0128%" height="15" fill="rgb(216,99,12)" fg:x="72400" fg:w="15"/><text x="62.2055%" y="687.50"></text></g><g><title>__sysvec_apic_timer_interrupt (22 samples, 0.02%)</title><rect x="61.9504%" y="757" width="0.0188%" height="15" fill="rgb(226,22,26)" fg:x="72394" fg:w="22"/><text x="62.2004%" y="767.50"></text></g><g><title>hrtimer_interrupt (22 samples, 0.02%)</title><rect x="61.9504%" y="741" width="0.0188%" height="15" fill="rgb(217,163,10)" fg:x="72394" fg:w="22"/><text x="62.2004%" y="751.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (32 samples, 0.03%)</title><rect x="61.9495%" y="789" width="0.0274%" height="15" fill="rgb(213,25,53)" fg:x="72393" fg:w="32"/><text x="62.1995%" y="799.50"></text></g><g><title>sysvec_apic_timer_interrupt (31 samples, 0.03%)</title><rect x="61.9504%" y="773" width="0.0265%" height="15" fill="rgb(252,105,26)" fg:x="72394" fg:w="31"/><text x="62.2004%" y="783.50"></text></g><g><title>memmove@plt (242 samples, 0.21%)</title><rect x="61.9769%" y="789" width="0.2071%" height="15" fill="rgb(220,39,43)" fg:x="72425" fg:w="242"/><text x="62.2269%" y="799.50"></text></g><g><title>v8::String::Utf8Length (26,409 samples, 22.60%)</title><rect x="41.4204%" y="853" width="22.5992%" height="15" fill="rgb(229,68,48)" fg:x="48403" fg:w="26409"/><text x="41.6704%" y="863.50">v8::String::Utf8Length</text></g><g><title>v8::internal::String::SlowFlatten (20,310 samples, 17.38%)</title><rect x="46.6395%" y="837" width="17.3801%" height="15" fill="rgb(252,8,32)" fg:x="54502" fg:w="20310"/><text x="46.8895%" y="847.50">v8::internal::String::SlowF..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (20,125 samples, 17.22%)</title><rect x="46.7978%" y="821" width="17.2218%" height="15" fill="rgb(223,20,43)" fg:x="54687" fg:w="20125"/><text x="47.0478%" y="831.50">void v8::internal::String::..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (16,404 samples, 14.04%)</title><rect x="49.9820%" y="805" width="14.0375%" height="15" fill="rgb(229,81,49)" fg:x="58408" fg:w="16404"/><text x="50.2320%" y="815.50">void v8::internal::St..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (2,144 samples, 1.83%)</title><rect x="62.1849%" y="789" width="1.8347%" height="15" fill="rgb(236,28,36)" fg:x="72668" fg:w="2144"/><text x="62.4349%" y="799.50">v..</text></g><g><title>__memmove_avx_unaligned_erms (1,402 samples, 1.20%)</title><rect x="64.0273%" y="805" width="1.1997%" height="15" fill="rgb(249,185,26)" fg:x="74821" fg:w="1402"/><text x="64.2773%" y="815.50"></text></g><g><title>v8::String::WriteOneByte (1,414 samples, 1.21%)</title><rect x="64.0196%" y="853" width="1.2100%" height="15" fill="rgb(249,174,33)" fg:x="74812" fg:w="1414"/><text x="64.2696%" y="863.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (1,411 samples, 1.21%)</title><rect x="64.0221%" y="837" width="1.2074%" height="15" fill="rgb(233,201,37)" fg:x="74815" fg:w="1411"/><text x="64.2721%" y="847.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (1,408 samples, 1.20%)</title><rect x="64.0247%" y="821" width="1.2049%" height="15" fill="rgb(221,78,26)" fg:x="74818" fg:w="1408"/><text x="64.2747%" y="831.50"></text></g><g><title>deno_http::http_next::op_http_set_response_body_text::v8_fn_ptr (28,161 samples, 24.10%)</title><rect x="41.1320%" y="885" width="24.0985%" height="15" fill="rgb(250,127,30)" fg:x="48066" fg:w="28161"/><text x="41.3820%" y="895.50">deno_http::http_next::op_http_set_resp..</text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::to_rust_string_lossy (28,003 samples, 23.96%)</title><rect x="41.2672%" y="869" width="23.9633%" height="15" fill="rgb(230,49,44)" fg:x="48224" fg:w="28003"/><text x="41.5172%" y="879.50">v8::string::&lt;impl v8::data::String&gt;::t..</text></g><g><title>cfree@GLIBC_2.2.5 (14 samples, 0.01%)</title><rect x="65.2647%" y="869" width="0.0120%" height="15" fill="rgb(229,67,23)" fg:x="76267" fg:w="14"/><text x="65.5147%" y="879.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append2 (20 samples, 0.02%)</title><rect x="65.2767%" y="869" width="0.0171%" height="15" fill="rgb(249,83,47)" fg:x="76281" fg:w="20"/><text x="65.5267%" y="879.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (19 samples, 0.02%)</title><rect x="65.2938%" y="869" width="0.0163%" height="15" fill="rgb(215,43,3)" fg:x="76301" fg:w="19"/><text x="65.5438%" y="879.50"></text></g><g><title>http::header::name::parse_hdr (12 samples, 0.01%)</title><rect x="65.2998%" y="853" width="0.0103%" height="15" fill="rgb(238,154,13)" fg:x="76308" fg:w="12"/><text x="65.5498%" y="863.50"></text></g><g><title>malloc (26 samples, 0.02%)</title><rect x="65.3100%" y="869" width="0.0222%" height="15" fill="rgb(219,56,2)" fg:x="76320" fg:w="26"/><text x="65.5600%" y="879.50"></text></g><g><title>_int_malloc (14 samples, 0.01%)</title><rect x="65.3203%" y="853" width="0.0120%" height="15" fill="rgb(233,0,4)" fg:x="76332" fg:w="14"/><text x="65.5703%" y="863.50"></text></g><g><title>v8::String::WriteOneByte (20 samples, 0.02%)</title><rect x="65.3366%" y="869" width="0.0171%" height="15" fill="rgb(235,30,7)" fg:x="76351" fg:w="20"/><text x="65.5866%" y="879.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (18 samples, 0.02%)</title><rect x="65.3383%" y="853" width="0.0154%" height="15" fill="rgb(250,79,13)" fg:x="76353" fg:w="18"/><text x="65.5883%" y="863.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (17 samples, 0.01%)</title><rect x="65.3391%" y="837" width="0.0145%" height="15" fill="rgb(211,146,34)" fg:x="76354" fg:w="17"/><text x="65.5891%" y="847.50"></text></g><g><title>deno_http::http_next::op_http_set_response_header::v8_fn_ptr (155 samples, 0.13%)</title><rect x="65.2305%" y="885" width="0.1326%" height="15" fill="rgb(228,22,38)" fg:x="76227" fg:w="155"/><text x="65.4805%" y="895.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="65.4170%" y="869" width="0.0163%" height="15" fill="rgb(235,168,5)" fg:x="76445" fg:w="19"/><text x="65.6670%" y="879.50"></text></g><g><title>v8::External::New (17 samples, 0.01%)</title><rect x="65.4333%" y="869" width="0.0145%" height="15" fill="rgb(221,155,16)" fg:x="76464" fg:w="17"/><text x="65.6833%" y="879.50"></text></g><g><title>v8::internal::Factory::NewExternal (15 samples, 0.01%)</title><rect x="65.4350%" y="853" width="0.0128%" height="15" fill="rgb(215,215,53)" fg:x="76466" fg:w="15"/><text x="65.6850%" y="863.50"></text></g><g><title>deno_http::http_next::op_http_try_wait::v8_fn_ptr (105 samples, 0.09%)</title><rect x="65.3631%" y="885" width="0.0899%" height="15" fill="rgb(223,4,10)" fg:x="76382" fg:w="105"/><text x="65.6131%" y="895.50"></text></g><g><title>deno_http::http_next::op_http_wait::call::_{{closure}} (32 samples, 0.03%)</title><rect x="65.4666%" y="869" width="0.0274%" height="15" fill="rgb(234,103,6)" fg:x="76503" fg:w="32"/><text x="65.7166%" y="879.50"></text></g><g><title>Builtins_CallApiCallbackOptimizedNoProfiling (28,709 samples, 24.57%)</title><rect x="40.9369%" y="901" width="24.5674%" height="15" fill="rgb(227,97,0)" fg:x="47838" fg:w="28709"/><text x="41.1869%" y="911.50">Builtins_CallApiCallbackOptimizedNoProf..</text></g><g><title>deno_http::http_next::op_http_wait::v8_fn_ptr (60 samples, 0.05%)</title><rect x="65.4529%" y="885" width="0.0513%" height="15" fill="rgb(234,150,53)" fg:x="76487" fg:w="60"/><text x="65.7029%" y="895.50"></text></g><g><title>Builtins_EnqueueMicrotask (12 samples, 0.01%)</title><rect x="65.5274%" y="901" width="0.0103%" height="15" fill="rgb(228,201,54)" fg:x="76574" fg:w="12"/><text x="65.7774%" y="911.50"></text></g><g><title>Builtins_FindOrderedHashMapEntry (16 samples, 0.01%)</title><rect x="65.5479%" y="901" width="0.0137%" height="15" fill="rgb(222,22,37)" fg:x="76598" fg:w="16"/><text x="65.7979%" y="911.50"></text></g><g><title>Builtins_FulfillPromise (20 samples, 0.02%)</title><rect x="65.5616%" y="901" width="0.0171%" height="15" fill="rgb(237,53,32)" fg:x="76614" fg:w="20"/><text x="65.8116%" y="911.50"></text></g><g><title>Builtins_JSConstructStubGeneric (58 samples, 0.05%)</title><rect x="65.5890%" y="901" width="0.0496%" height="15" fill="rgb(233,25,53)" fg:x="76646" fg:w="58"/><text x="65.8390%" y="911.50"></text></g><g><title>Builtins_LoadIC (53 samples, 0.05%)</title><rect x="65.6446%" y="901" width="0.0454%" height="15" fill="rgb(210,40,34)" fg:x="76711" fg:w="53"/><text x="65.8946%" y="911.50"></text></g><g><title>Builtins_ObjectPrototypeIsPrototypeOf (14 samples, 0.01%)</title><rect x="65.6977%" y="901" width="0.0120%" height="15" fill="rgb(241,220,44)" fg:x="76773" fg:w="14"/><text x="65.9477%" y="911.50"></text></g><g><title>Builtins_PromiseCapabilityDefaultResolve (22 samples, 0.02%)</title><rect x="65.7105%" y="901" width="0.0188%" height="15" fill="rgb(235,28,35)" fg:x="76788" fg:w="22"/><text x="65.9605%" y="911.50"></text></g><g><title>Builtins_ResolvePromise (15 samples, 0.01%)</title><rect x="65.7165%" y="885" width="0.0128%" height="15" fill="rgb(210,56,17)" fg:x="76795" fg:w="15"/><text x="65.9665%" y="895.50"></text></g><g><title>Builtins_PromisePrototypeThen (33 samples, 0.03%)</title><rect x="65.7293%" y="901" width="0.0282%" height="15" fill="rgb(224,130,29)" fg:x="76810" fg:w="33"/><text x="65.9793%" y="911.50"></text></g><g><title>Builtins_RecordWriteSaveFP (13 samples, 0.01%)</title><rect x="65.7576%" y="901" width="0.0111%" height="15" fill="rgb(235,212,8)" fg:x="76843" fg:w="13"/><text x="66.0076%" y="911.50"></text></g><g><title>Builtins_RegExpPrototypeTestFast (9,971 samples, 8.53%)</title><rect x="65.7687%" y="901" width="8.5326%" height="15" fill="rgb(223,33,50)" fg:x="76856" fg:w="9971"/><text x="66.0187%" y="911.50">Builtins_Reg..</text></g><g><title>Builtins_StringAddConvertRight (12 samples, 0.01%)</title><rect x="74.3175%" y="901" width="0.0103%" height="15" fill="rgb(219,149,13)" fg:x="86846" fg:w="12"/><text x="74.5675%" y="911.50"></text></g><g><title>v8::internal::AllocationCounter::InvokeAllocationObservers (12 samples, 0.01%)</title><rect x="82.3820%" y="821" width="0.0103%" height="15" fill="rgb(250,156,29)" fg:x="96270" fg:w="12"/><text x="82.6320%" y="831.50"></text></g><g><title>v8::internal::SemiSpace::AddRangeToActiveSystemPages (25 samples, 0.02%)</title><rect x="82.4026%" y="805" width="0.0214%" height="15" fill="rgb(216,193,19)" fg:x="96294" fg:w="25"/><text x="82.6526%" y="815.50"></text></g><g><title>heap::base::ActiveSystemPages::Add (24 samples, 0.02%)</title><rect x="82.4034%" y="789" width="0.0205%" height="15" fill="rgb(216,135,14)" fg:x="96295" fg:w="24"/><text x="82.6534%" y="799.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::Allocate (94 samples, 0.08%)</title><rect x="82.4240%" y="805" width="0.0804%" height="15" fill="rgb(241,47,5)" fg:x="96319" fg:w="94"/><text x="82.6740%" y="815.50"></text></g><g><title>Builtins_WasmCEntry (214 samples, 0.18%)</title><rect x="82.3461%" y="885" width="0.1831%" height="15" fill="rgb(233,42,35)" fg:x="96228" fg:w="214"/><text x="82.5961%" y="895.50"></text></g><g><title>v8::internal::Runtime_AllocateInYoungGeneration (210 samples, 0.18%)</title><rect x="82.3495%" y="869" width="0.1797%" height="15" fill="rgb(231,13,6)" fg:x="96232" fg:w="210"/><text x="82.5995%" y="879.50"></text></g><g><title>v8::internal::Factory::NewFillerObject (195 samples, 0.17%)</title><rect x="82.3624%" y="853" width="0.1669%" height="15" fill="rgb(207,181,40)" fg:x="96247" fg:w="195"/><text x="82.6124%" y="863.50"></text></g><g><title>v8::internal::MainAllocator::AllocateRawSlowUnaligned (182 samples, 0.16%)</title><rect x="82.3735%" y="837" width="0.1557%" height="15" fill="rgb(254,173,49)" fg:x="96260" fg:w="182"/><text x="82.6235%" y="847.50"></text></g><g><title>v8::internal::SemiSpaceNewSpaceAllocatorPolicy::EnsureAllocation (160 samples, 0.14%)</title><rect x="82.3923%" y="821" width="0.1369%" height="15" fill="rgb(221,1,38)" fg:x="96282" fg:w="160"/><text x="82.6423%" y="831.50"></text></g><g><title>v8::internal::SemiSpaceNewSpaceAllocatorPolicy::FreeLinearAllocationAreaUnsynchronized (25 samples, 0.02%)</title><rect x="82.5078%" y="805" width="0.0214%" height="15" fill="rgb(206,124,46)" fg:x="96417" fg:w="25"/><text x="82.7578%" y="815.50"></text></g><g><title>__sysvec_apic_timer_interrupt (12 samples, 0.01%)</title><rect x="82.5292%" y="853" width="0.0103%" height="15" fill="rgb(249,21,11)" fg:x="96442" fg:w="12"/><text x="82.7792%" y="863.50"></text></g><g><title>hrtimer_interrupt (12 samples, 0.01%)</title><rect x="82.5292%" y="837" width="0.0103%" height="15" fill="rgb(222,201,40)" fg:x="96442" fg:w="12"/><text x="82.7792%" y="847.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (17 samples, 0.01%)</title><rect x="82.5292%" y="885" width="0.0145%" height="15" fill="rgb(235,61,29)" fg:x="96442" fg:w="17"/><text x="82.7792%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (17 samples, 0.01%)</title><rect x="82.5292%" y="869" width="0.0145%" height="15" fill="rgb(219,207,3)" fg:x="96442" fg:w="17"/><text x="82.7792%" y="879.50"></text></g><g><title>Builtins_StringAdd_CheckNone (9,602 samples, 8.22%)</title><rect x="74.3278%" y="901" width="8.2168%" height="15" fill="rgb(222,56,46)" fg:x="86858" fg:w="9602"/><text x="74.5778%" y="911.50">Builtins_St..</text></g><g><title>Builtins_StringPrototypeToString (2,051 samples, 1.76%)</title><rect x="82.5446%" y="901" width="1.7551%" height="15" fill="rgb(239,76,54)" fg:x="96460" fg:w="2051"/><text x="82.7946%" y="911.50"></text></g><g><title>perf_adjust_freq_unthr_context (14 samples, 0.01%)</title><rect x="84.3400%" y="741" width="0.0120%" height="15" fill="rgb(231,124,27)" fg:x="98558" fg:w="14"/><text x="84.5900%" y="751.50"></text></g><g><title>perf_event_task_tick (17 samples, 0.01%)</title><rect x="84.3391%" y="757" width="0.0145%" height="15" fill="rgb(249,195,6)" fg:x="98557" fg:w="17"/><text x="84.5891%" y="767.50"></text></g><g><title>__hrtimer_run_queues (52 samples, 0.04%)</title><rect x="84.3160%" y="837" width="0.0445%" height="15" fill="rgb(237,174,47)" fg:x="98530" fg:w="52"/><text x="84.5660%" y="847.50"></text></g><g><title>tick_sched_timer (46 samples, 0.04%)</title><rect x="84.3211%" y="821" width="0.0394%" height="15" fill="rgb(206,201,31)" fg:x="98536" fg:w="46"/><text x="84.5711%" y="831.50"></text></g><g><title>tick_sched_handle (34 samples, 0.03%)</title><rect x="84.3314%" y="805" width="0.0291%" height="15" fill="rgb(231,57,52)" fg:x="98548" fg:w="34"/><text x="84.5814%" y="815.50"></text></g><g><title>update_process_times (32 samples, 0.03%)</title><rect x="84.3331%" y="789" width="0.0274%" height="15" fill="rgb(248,177,22)" fg:x="98550" fg:w="32"/><text x="84.5831%" y="799.50"></text></g><g><title>scheduler_tick (30 samples, 0.03%)</title><rect x="84.3348%" y="773" width="0.0257%" height="15" fill="rgb(215,211,37)" fg:x="98552" fg:w="30"/><text x="84.5848%" y="783.50"></text></g><g><title>__sysvec_apic_timer_interrupt (60 samples, 0.05%)</title><rect x="84.3126%" y="869" width="0.0513%" height="15" fill="rgb(241,128,51)" fg:x="98526" fg:w="60"/><text x="84.5626%" y="879.50"></text></g><g><title>hrtimer_interrupt (60 samples, 0.05%)</title><rect x="84.3126%" y="853" width="0.0513%" height="15" fill="rgb(227,165,31)" fg:x="98526" fg:w="60"/><text x="84.5626%" y="863.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (66 samples, 0.06%)</title><rect x="84.3126%" y="901" width="0.0565%" height="15" fill="rgb(228,167,24)" fg:x="98526" fg:w="66"/><text x="84.5626%" y="911.50"></text></g><g><title>sysvec_apic_timer_interrupt (66 samples, 0.06%)</title><rect x="84.3126%" y="885" width="0.0565%" height="15" fill="rgb(228,143,12)" fg:x="98526" fg:w="66"/><text x="84.5626%" y="895.50"></text></g><g><title>Builtins_CreateEmptyLiteralObject (14 samples, 0.01%)</title><rect x="84.4059%" y="885" width="0.0120%" height="15" fill="rgb(249,149,8)" fg:x="98635" fg:w="14"/><text x="84.6559%" y="895.50"></text></g><g><title>Builtins_KeyedStoreIC (18 samples, 0.02%)</title><rect x="84.4204%" y="885" width="0.0154%" height="15" fill="rgb(243,35,44)" fg:x="98652" fg:w="18"/><text x="84.6704%" y="895.50"></text></g><g><title>construct_stub_create_deopt_addr (83 samples, 0.07%)</title><rect x="84.3751%" y="901" width="0.0710%" height="15" fill="rgb(246,89,9)" fg:x="98599" fg:w="83"/><text x="84.6251%" y="911.50"></text></g><g><title>[perf-1099167.map] (97,056 samples, 83.05%)</title><rect x="1.4051%" y="917" width="83.0546%" height="15" fill="rgb(233,213,13)" fg:x="1642" fg:w="97056"/><text x="1.6551%" y="927.50">[perf-1099167.map]</text></g><g><title>&lt;deno_http::service::HttpRecordResponse as http_body::Body&gt;::poll_frame (31 samples, 0.03%)</title><rect x="84.8098%" y="853" width="0.0265%" height="15" fill="rgb(233,141,41)" fg:x="99107" fg:w="31"/><text x="85.0598%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (32 samples, 0.03%)</title><rect x="84.8851%" y="837" width="0.0274%" height="15" fill="rgb(239,167,4)" fg:x="99195" fg:w="32"/><text x="85.1351%" y="847.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (99 samples, 0.08%)</title><rect x="84.8363%" y="853" width="0.0847%" height="15" fill="rgb(209,217,16)" fg:x="99138" fg:w="99"/><text x="85.0863%" y="863.50"></text></g><g><title>[[vdso]] (31 samples, 0.03%)</title><rect x="84.9390%" y="805" width="0.0265%" height="15" fill="rgb(219,88,35)" fg:x="99258" fg:w="31"/><text x="85.1890%" y="815.50"></text></g><g><title>std::sys::unix::time::Timespec::now (53 samples, 0.05%)</title><rect x="84.9270%" y="837" width="0.0454%" height="15" fill="rgb(220,193,23)" fg:x="99244" fg:w="53"/><text x="85.1770%" y="847.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (52 samples, 0.04%)</title><rect x="84.9279%" y="821" width="0.0445%" height="15" fill="rgb(230,90,52)" fg:x="99245" fg:w="52"/><text x="85.1779%" y="831.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (64 samples, 0.05%)</title><rect x="84.9210%" y="853" width="0.0548%" height="15" fill="rgb(252,106,19)" fg:x="99237" fg:w="64"/><text x="85.1710%" y="863.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (96 samples, 0.08%)</title><rect x="85.0297%" y="821" width="0.0822%" height="15" fill="rgb(206,74,20)" fg:x="99364" fg:w="96"/><text x="85.2797%" y="831.50"></text></g><g><title>cfree@GLIBC_2.2.5 (74 samples, 0.06%)</title><rect x="85.0485%" y="805" width="0.0633%" height="15" fill="rgb(230,138,44)" fg:x="99386" fg:w="74"/><text x="85.2985%" y="815.50"></text></g><g><title>_int_free (65 samples, 0.06%)</title><rect x="85.0562%" y="789" width="0.0556%" height="15" fill="rgb(235,182,43)" fg:x="99395" fg:w="65"/><text x="85.3062%" y="799.50"></text></g><g><title>_ZN4core3ptr96drop_in_place$LT$$u5b$http..header..map..Bucket$LT$http..header..value..HeaderValue$GT$$u5d$$GT$17h03254313ff94b202E.llvm.14137614649970884473 (122 samples, 0.10%)</title><rect x="85.0126%" y="837" width="0.1044%" height="15" fill="rgb(242,16,51)" fg:x="99344" fg:w="122"/><text x="85.2626%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (22 samples, 0.02%)</title><rect x="85.1170%" y="837" width="0.0188%" height="15" fill="rgb(248,9,4)" fg:x="99466" fg:w="22"/><text x="85.3670%" y="847.50"></text></g><g><title>_ZN9deno_http7service10HttpRecord7recycle17h22f3720de05f77a7E.llvm.14137614649970884473 (183 samples, 0.16%)</title><rect x="84.9843%" y="853" width="0.1566%" height="15" fill="rgb(210,31,22)" fg:x="99311" fg:w="183"/><text x="85.2343%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (52 samples, 0.04%)</title><rect x="85.1409%" y="853" width="0.0445%" height="15" fill="rgb(239,54,39)" fg:x="99494" fg:w="52"/><text x="85.3909%" y="863.50"></text></g><g><title>&lt;deno_http::service::HttpRecord::response_ready::HttpRecordReady as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="85.2590%" y="837" width="0.0103%" height="15" fill="rgb(230,99,41)" fg:x="99632" fg:w="12"/><text x="85.5090%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="85.3147%" y="821" width="0.0171%" height="15" fill="rgb(253,106,12)" fg:x="99697" fg:w="20"/><text x="85.5647%" y="831.50"></text></g><g><title>deno_http::service::HttpRecord::new (66 samples, 0.06%)</title><rect x="85.2856%" y="837" width="0.0565%" height="15" fill="rgb(213,46,41)" fg:x="99663" fg:w="66"/><text x="85.5356%" y="847.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::with_capacity (12 samples, 0.01%)</title><rect x="85.3318%" y="821" width="0.0103%" height="15" fill="rgb(215,133,35)" fg:x="99717" fg:w="12"/><text x="85.5818%" y="831.50"></text></g><g><title>deno_http::service::handle_request::_{{closure}} (195 samples, 0.17%)</title><rect x="85.1897%" y="853" width="0.1669%" height="15" fill="rgb(213,28,5)" fg:x="99551" fg:w="195"/><text x="85.4397%" y="863.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="85.3566%" y="853" width="0.0103%" height="15" fill="rgb(215,77,49)" fg:x="99746" fg:w="12"/><text x="85.6066%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (43 samples, 0.04%)</title><rect x="85.4379%" y="789" width="0.0368%" height="15" fill="rgb(248,100,22)" fg:x="99841" fg:w="43"/><text x="85.6879%" y="799.50"></text></g><g><title>_raw_spin_lock_bh (17 samples, 0.01%)</title><rect x="85.6125%" y="693" width="0.0145%" height="15" fill="rgb(208,67,9)" fg:x="100045" fg:w="17"/><text x="85.8625%" y="703.50"></text></g><g><title>tcp_push (14 samples, 0.01%)</title><rect x="85.6415%" y="693" width="0.0120%" height="15" fill="rgb(219,133,21)" fg:x="100079" fg:w="14"/><text x="85.8915%" y="703.50"></text></g><g><title>__next_zones_zonelist (19 samples, 0.02%)</title><rect x="85.9351%" y="613" width="0.0163%" height="15" fill="rgb(246,46,29)" fg:x="100422" fg:w="19"/><text x="86.1851%" y="623.50"></text></g><g><title>__zone_watermark_ok (13 samples, 0.01%)</title><rect x="85.9924%" y="597" width="0.0111%" height="15" fill="rgb(246,185,52)" fg:x="100489" fg:w="13"/><text x="86.2424%" y="607.50"></text></g><g><title>_raw_spin_trylock (18 samples, 0.02%)</title><rect x="86.0035%" y="597" width="0.0154%" height="15" fill="rgb(252,136,11)" fg:x="100502" fg:w="18"/><text x="86.2535%" y="607.50"></text></g><g><title>clear_page_erms (1,590 samples, 1.36%)</title><rect x="86.0224%" y="597" width="1.3606%" height="15" fill="rgb(219,138,53)" fg:x="100524" fg:w="1590"/><text x="86.2724%" y="607.50"></text></g><g><title>post_alloc_hook (35 samples, 0.03%)</title><rect x="87.3830%" y="597" width="0.0300%" height="15" fill="rgb(211,51,23)" fg:x="102114" fg:w="35"/><text x="87.6330%" y="607.50"></text></g><g><title>prep_compound_page (48 samples, 0.04%)</title><rect x="87.4129%" y="597" width="0.0411%" height="15" fill="rgb(247,221,28)" fg:x="102149" fg:w="48"/><text x="87.6629%" y="607.50"></text></g><g><title>__rmqueue_pcplist (70 samples, 0.06%)</title><rect x="87.4797%" y="581" width="0.0599%" height="15" fill="rgb(251,222,45)" fg:x="102227" fg:w="70"/><text x="87.7297%" y="591.50"></text></g><g><title>get_page_from_freelist (1,856 samples, 1.59%)</title><rect x="85.9522%" y="613" width="1.5883%" height="15" fill="rgb(217,162,53)" fg:x="100442" fg:w="1856"/><text x="86.2022%" y="623.50"></text></g><g><title>rmqueue (101 samples, 0.09%)</title><rect x="87.4540%" y="597" width="0.0864%" height="15" fill="rgb(229,93,14)" fg:x="102197" fg:w="101"/><text x="87.7040%" y="607.50"></text></g><g><title>__alloc_pages (1,918 samples, 1.64%)</title><rect x="85.9077%" y="629" width="1.6413%" height="15" fill="rgb(209,67,49)" fg:x="100390" fg:w="1918"/><text x="86.1577%" y="639.50"></text></g><g><title>__next_zones_zonelist (12 samples, 0.01%)</title><rect x="87.5490%" y="629" width="0.0103%" height="15" fill="rgb(213,87,29)" fg:x="102308" fg:w="12"/><text x="87.7990%" y="639.50"></text></g><g><title>alloc_pages (1,952 samples, 1.67%)</title><rect x="85.8991%" y="645" width="1.6704%" height="15" fill="rgb(205,151,52)" fg:x="100380" fg:w="1952"/><text x="86.1491%" y="655.50"></text></g><g><title>sk_page_frag_refill (2,001 samples, 1.71%)</title><rect x="85.8640%" y="677" width="1.7123%" height="15" fill="rgb(253,215,39)" fg:x="100339" fg:w="2001"/><text x="86.1140%" y="687.50"></text></g><g><title>skb_page_frag_refill (1,995 samples, 1.71%)</title><rect x="85.8692%" y="661" width="1.7072%" height="15" fill="rgb(221,220,41)" fg:x="100345" fg:w="1995"/><text x="86.1192%" y="671.50"></text></g><g><title>__virt_addr_valid (60 samples, 0.05%)</title><rect x="87.6234%" y="613" width="0.0513%" height="15" fill="rgb(218,133,21)" fg:x="102395" fg:w="60"/><text x="87.8734%" y="623.50"></text></g><g><title>check_heap_object (82 samples, 0.07%)</title><rect x="87.6055%" y="629" width="0.0702%" height="15" fill="rgb(221,193,43)" fg:x="102374" fg:w="82"/><text x="87.8555%" y="639.50"></text></g><g><title>__check_object_size.part.0 (104 samples, 0.09%)</title><rect x="87.5901%" y="645" width="0.0890%" height="15" fill="rgb(240,128,52)" fg:x="102356" fg:w="104"/><text x="87.8401%" y="655.50"></text></g><g><title>__check_object_size (118 samples, 0.10%)</title><rect x="87.5901%" y="661" width="0.1010%" height="15" fill="rgb(253,114,12)" fg:x="102356" fg:w="118"/><text x="87.8401%" y="671.50"></text></g><g><title>copyin (14 samples, 0.01%)</title><rect x="87.7176%" y="645" width="0.0120%" height="15" fill="rgb(215,223,47)" fg:x="102505" fg:w="14"/><text x="87.9676%" y="655.50"></text></g><g><title>_copy_from_iter (1,885 samples, 1.61%)</title><rect x="87.6910%" y="661" width="1.6131%" height="15" fill="rgb(248,225,23)" fg:x="102474" fg:w="1885"/><text x="87.9410%" y="671.50"></text></g><g><title>rep_movs_alternative (1,840 samples, 1.57%)</title><rect x="87.7296%" y="645" width="1.5746%" height="15" fill="rgb(250,108,0)" fg:x="102519" fg:w="1840"/><text x="87.9796%" y="655.50"></text></g><g><title>skb_do_copy_data_nocache (2,027 samples, 1.73%)</title><rect x="87.5764%" y="677" width="1.7346%" height="15" fill="rgb(228,208,7)" fg:x="102340" fg:w="2027"/><text x="87.8264%" y="687.50"></text></g><g><title>__sk_dst_check (14 samples, 0.01%)</title><rect x="89.4179%" y="581" width="0.0120%" height="15" fill="rgb(244,45,10)" fg:x="104492" fg:w="14"/><text x="89.6679%" y="591.50"></text></g><g><title>nf_conntrack_tcp_packet (63 samples, 0.05%)</title><rect x="89.5044%" y="485" width="0.0539%" height="15" fill="rgb(207,125,25)" fg:x="104593" fg:w="63"/><text x="89.7544%" y="495.50"></text></g><g><title>tcp_in_window (25 samples, 0.02%)</title><rect x="89.5369%" y="469" width="0.0214%" height="15" fill="rgb(210,195,18)" fg:x="104631" fg:w="25"/><text x="89.7869%" y="479.50"></text></g><g><title>nf_conntrack_handle_packet (82 samples, 0.07%)</title><rect x="89.4898%" y="501" width="0.0702%" height="15" fill="rgb(249,80,12)" fg:x="104576" fg:w="82"/><text x="89.7398%" y="511.50"></text></g><g><title>__nf_conntrack_find_get (30 samples, 0.03%)</title><rect x="89.5720%" y="485" width="0.0257%" height="15" fill="rgb(221,65,9)" fg:x="104672" fg:w="30"/><text x="89.8220%" y="495.50"></text></g><g><title>hash_conntrack_raw (12 samples, 0.01%)</title><rect x="89.6019%" y="485" width="0.0103%" height="15" fill="rgb(235,49,36)" fg:x="104707" fg:w="12"/><text x="89.8519%" y="495.50"></text></g><g><title>ipv4_conntrack_local (176 samples, 0.15%)</title><rect x="89.4727%" y="533" width="0.1506%" height="15" fill="rgb(225,32,20)" fg:x="104556" fg:w="176"/><text x="89.7227%" y="543.50"></text></g><g><title>nf_conntrack_in (173 samples, 0.15%)</title><rect x="89.4753%" y="517" width="0.1480%" height="15" fill="rgb(215,141,46)" fg:x="104559" fg:w="173"/><text x="89.7253%" y="527.50"></text></g><g><title>resolve_normal_ct (70 samples, 0.06%)</title><rect x="89.5634%" y="501" width="0.0599%" height="15" fill="rgb(250,160,47)" fg:x="104662" fg:w="70"/><text x="89.8134%" y="511.50"></text></g><g><title>nf_ct_get_tuple (13 samples, 0.01%)</title><rect x="89.6122%" y="485" width="0.0111%" height="15" fill="rgb(216,222,40)" fg:x="104719" fg:w="13"/><text x="89.8622%" y="495.50"></text></g><g><title>nf_hook_slow (208 samples, 0.18%)</title><rect x="89.4599%" y="549" width="0.1780%" height="15" fill="rgb(234,217,39)" fg:x="104541" fg:w="208"/><text x="89.7099%" y="559.50"></text></g><g><title>nf_nat_ipv4_local_fn (15 samples, 0.01%)</title><rect x="89.6250%" y="533" width="0.0128%" height="15" fill="rgb(207,178,40)" fg:x="104734" fg:w="15"/><text x="89.8750%" y="543.50"></text></g><g><title>__ip_local_out (247 samples, 0.21%)</title><rect x="89.4350%" y="565" width="0.2114%" height="15" fill="rgb(221,136,13)" fg:x="104512" fg:w="247"/><text x="89.6850%" y="575.50"></text></g><g><title>apparmor_ip_postroute (15 samples, 0.01%)</title><rect x="89.6678%" y="549" width="0.0128%" height="15" fill="rgb(249,199,10)" fg:x="104784" fg:w="15"/><text x="89.9178%" y="559.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (22 samples, 0.02%)</title><rect x="89.8107%" y="341" width="0.0188%" height="15" fill="rgb(249,222,13)" fg:x="104951" fg:w="22"/><text x="90.0607%" y="351.50"></text></g><g><title>__inet_lookup_established (21 samples, 0.02%)</title><rect x="89.9057%" y="261" width="0.0180%" height="15" fill="rgb(244,185,38)" fg:x="105062" fg:w="21"/><text x="90.1557%" y="271.50"></text></g><g><title>tcp_filter (26 samples, 0.02%)</title><rect x="89.9348%" y="261" width="0.0222%" height="15" fill="rgb(236,202,9)" fg:x="105096" fg:w="26"/><text x="90.1848%" y="271.50"></text></g><g><title>sk_filter_trim_cap (22 samples, 0.02%)</title><rect x="89.9382%" y="245" width="0.0188%" height="15" fill="rgb(250,229,37)" fg:x="105100" fg:w="22"/><text x="90.1882%" y="255.50"></text></g><g><title>__tcp_ack_snd_check (24 samples, 0.02%)</title><rect x="89.9930%" y="229" width="0.0205%" height="15" fill="rgb(206,174,23)" fg:x="105164" fg:w="24"/><text x="90.2430%" y="239.50"></text></g><g><title>tcp_ack (29 samples, 0.02%)</title><rect x="90.0187%" y="229" width="0.0248%" height="15" fill="rgb(211,33,43)" fg:x="105194" fg:w="29"/><text x="90.2687%" y="239.50"></text></g><g><title>_raw_read_lock_irqsave (12 samples, 0.01%)</title><rect x="90.0965%" y="117" width="0.0103%" height="15" fill="rgb(245,58,50)" fg:x="105285" fg:w="12"/><text x="90.3465%" y="127.50"></text></g><g><title>__wake_up_common (28 samples, 0.02%)</title><rect x="90.0863%" y="149" width="0.0240%" height="15" fill="rgb(244,68,36)" fg:x="105273" fg:w="28"/><text x="90.3363%" y="159.50"></text></g><g><title>ep_poll_callback (24 samples, 0.02%)</title><rect x="90.0897%" y="133" width="0.0205%" height="15" fill="rgb(232,229,15)" fg:x="105277" fg:w="24"/><text x="90.3397%" y="143.50"></text></g><g><title>tcp_data_ready (50 samples, 0.04%)</title><rect x="90.0768%" y="213" width="0.0428%" height="15" fill="rgb(254,30,23)" fg:x="105262" fg:w="50"/><text x="90.3268%" y="223.50"></text></g><g><title>sock_def_readable (47 samples, 0.04%)</title><rect x="90.0794%" y="197" width="0.0402%" height="15" fill="rgb(235,160,14)" fg:x="105265" fg:w="47"/><text x="90.3294%" y="207.50"></text></g><g><title>__wake_up_sync_key (41 samples, 0.04%)</title><rect x="90.0845%" y="181" width="0.0351%" height="15" fill="rgb(212,155,44)" fg:x="105271" fg:w="41"/><text x="90.3345%" y="191.50"></text></g><g><title>__wake_up_common_lock (40 samples, 0.03%)</title><rect x="90.0854%" y="165" width="0.0342%" height="15" fill="rgb(226,2,50)" fg:x="105272" fg:w="40"/><text x="90.3354%" y="175.50"></text></g><g><title>tcp_queue_rcv (24 samples, 0.02%)</title><rect x="90.1290%" y="213" width="0.0205%" height="15" fill="rgb(234,177,6)" fg:x="105323" fg:w="24"/><text x="90.3790%" y="223.50"></text></g><g><title>page_counter_try_charge (14 samples, 0.01%)</title><rect x="90.1838%" y="133" width="0.0120%" height="15" fill="rgb(217,24,9)" fg:x="105387" fg:w="14"/><text x="90.4338%" y="143.50"></text></g><g><title>mem_cgroup_charge_skmem (38 samples, 0.03%)</title><rect x="90.1641%" y="165" width="0.0325%" height="15" fill="rgb(220,13,46)" fg:x="105364" fg:w="38"/><text x="90.4141%" y="175.50"></text></g><g><title>try_charge_memcg (26 samples, 0.02%)</title><rect x="90.1744%" y="149" width="0.0222%" height="15" fill="rgb(239,221,27)" fg:x="105376" fg:w="26"/><text x="90.4244%" y="159.50"></text></g><g><title>__sk_mem_raise_allocated (50 samples, 0.04%)</title><rect x="90.1581%" y="181" width="0.0428%" height="15" fill="rgb(222,198,25)" fg:x="105357" fg:w="50"/><text x="90.4081%" y="191.50"></text></g><g><title>tcp_data_queue (185 samples, 0.16%)</title><rect x="90.0435%" y="229" width="0.1583%" height="15" fill="rgb(211,99,13)" fg:x="105223" fg:w="185"/><text x="90.2935%" y="239.50"></text></g><g><title>tcp_try_rmem_schedule (57 samples, 0.05%)</title><rect x="90.1530%" y="213" width="0.0488%" height="15" fill="rgb(232,111,31)" fg:x="105351" fg:w="57"/><text x="90.4030%" y="223.50"></text></g><g><title>__sk_mem_schedule (54 samples, 0.05%)</title><rect x="90.1556%" y="197" width="0.0462%" height="15" fill="rgb(245,82,37)" fg:x="105354" fg:w="54"/><text x="90.4056%" y="207.50"></text></g><g><title>tcp_mstamp_refresh (15 samples, 0.01%)</title><rect x="90.2035%" y="229" width="0.0128%" height="15" fill="rgb(227,149,46)" fg:x="105410" fg:w="15"/><text x="90.4535%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (304 samples, 0.26%)</title><rect x="89.9605%" y="261" width="0.2601%" height="15" fill="rgb(218,36,50)" fg:x="105126" fg:w="304"/><text x="90.2105%" y="271.50"></text></g><g><title>tcp_rcv_established (285 samples, 0.24%)</title><rect x="89.9767%" y="245" width="0.2439%" height="15" fill="rgb(226,80,48)" fg:x="105145" fg:w="285"/><text x="90.2267%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (425 samples, 0.36%)</title><rect x="89.8638%" y="293" width="0.3637%" height="15" fill="rgb(238,224,15)" fg:x="105013" fg:w="425"/><text x="90.1138%" y="303.50"></text></g><g><title>tcp_v4_rcv (398 samples, 0.34%)</title><rect x="89.8869%" y="277" width="0.3406%" height="15" fill="rgb(241,136,10)" fg:x="105040" fg:w="398"/><text x="90.1369%" y="287.50"></text></g><g><title>ip_local_deliver_finish (427 samples, 0.37%)</title><rect x="89.8638%" y="309" width="0.3654%" height="15" fill="rgb(208,32,45)" fg:x="105013" fg:w="427"/><text x="90.1138%" y="319.50"></text></g><g><title>nf_hook_slow (16 samples, 0.01%)</title><rect x="90.2326%" y="309" width="0.0137%" height="15" fill="rgb(207,135,9)" fg:x="105444" fg:w="16"/><text x="90.4826%" y="319.50"></text></g><g><title>ip_local_deliver (467 samples, 0.40%)</title><rect x="89.8501%" y="325" width="0.3996%" height="15" fill="rgb(206,86,44)" fg:x="104997" fg:w="467"/><text x="90.1001%" y="335.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (22 samples, 0.02%)</title><rect x="90.2583%" y="325" width="0.0188%" height="15" fill="rgb(245,177,15)" fg:x="105474" fg:w="22"/><text x="90.5083%" y="335.50"></text></g><g><title>ipv4_conntrack_in (14 samples, 0.01%)</title><rect x="90.2874%" y="325" width="0.0120%" height="15" fill="rgb(206,64,50)" fg:x="105508" fg:w="14"/><text x="90.5374%" y="335.50"></text></g><g><title>nf_hook_slow (34 samples, 0.03%)</title><rect x="90.2993%" y="325" width="0.0291%" height="15" fill="rgb(234,36,40)" fg:x="105522" fg:w="34"/><text x="90.5493%" y="335.50"></text></g><g><title>ip_rcv (585 samples, 0.50%)</title><rect x="89.8330%" y="341" width="0.5006%" height="15" fill="rgb(213,64,8)" fg:x="104977" fg:w="585"/><text x="90.0830%" y="351.50"></text></g><g><title>__netif_receive_skb (622 samples, 0.53%)</title><rect x="89.8030%" y="373" width="0.5323%" height="15" fill="rgb(210,75,36)" fg:x="104942" fg:w="622"/><text x="90.0530%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (617 samples, 0.53%)</title><rect x="89.8073%" y="357" width="0.5280%" height="15" fill="rgb(229,88,21)" fg:x="104947" fg:w="617"/><text x="90.0573%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (14 samples, 0.01%)</title><rect x="90.3361%" y="373" width="0.0120%" height="15" fill="rgb(252,204,47)" fg:x="105565" fg:w="14"/><text x="90.5861%" y="383.50"></text></g><g><title>__napi_poll (660 samples, 0.56%)</title><rect x="89.7842%" y="405" width="0.5648%" height="15" fill="rgb(208,77,27)" fg:x="104920" fg:w="660"/><text x="90.0342%" y="415.50"></text></g><g><title>process_backlog (644 samples, 0.55%)</title><rect x="89.7979%" y="389" width="0.5511%" height="15" fill="rgb(221,76,26)" fg:x="104936" fg:w="644"/><text x="90.0479%" y="399.50"></text></g><g><title>destroy_large_folio (74 samples, 0.06%)</title><rect x="90.3764%" y="357" width="0.0633%" height="15" fill="rgb(225,139,18)" fg:x="105612" fg:w="74"/><text x="90.6264%" y="367.50"></text></g><g><title>free_compound_page (71 samples, 0.06%)</title><rect x="90.3789%" y="341" width="0.0608%" height="15" fill="rgb(230,137,11)" fg:x="105615" fg:w="71"/><text x="90.6289%" y="351.50"></text></g><g><title>free_unref_page (65 samples, 0.06%)</title><rect x="90.3841%" y="325" width="0.0556%" height="15" fill="rgb(212,28,1)" fg:x="105621" fg:w="65"/><text x="90.6341%" y="335.50"></text></g><g><title>free_unref_page_prepare (53 samples, 0.05%)</title><rect x="90.3943%" y="309" width="0.0454%" height="15" fill="rgb(248,164,17)" fg:x="105633" fg:w="53"/><text x="90.6443%" y="319.50"></text></g><g><title>free_tail_page_prepare (14 samples, 0.01%)</title><rect x="90.4277%" y="293" width="0.0120%" height="15" fill="rgb(222,171,42)" fg:x="105672" fg:w="14"/><text x="90.6777%" y="303.50"></text></g><g><title>__folio_put (78 samples, 0.07%)</title><rect x="90.3764%" y="373" width="0.0667%" height="15" fill="rgb(243,84,45)" fg:x="105612" fg:w="78"/><text x="90.6264%" y="383.50"></text></g><g><title>skb_release_data (104 samples, 0.09%)</title><rect x="90.3601%" y="389" width="0.0890%" height="15" fill="rgb(252,49,23)" fg:x="105593" fg:w="104"/><text x="90.6101%" y="399.50"></text></g><g><title>napi_consume_skb (119 samples, 0.10%)</title><rect x="90.3490%" y="405" width="0.1018%" height="15" fill="rgb(215,19,7)" fg:x="105580" fg:w="119"/><text x="90.5990%" y="415.50"></text></g><g><title>__do_softirq (835 samples, 0.71%)</title><rect x="89.7397%" y="437" width="0.7145%" height="15" fill="rgb(238,81,41)" fg:x="104868" fg:w="835"/><text x="89.9897%" y="447.50"></text></g><g><title>net_rx_action (804 samples, 0.69%)</title><rect x="89.7662%" y="421" width="0.6880%" height="15" fill="rgb(210,199,37)" fg:x="104899" fg:w="804"/><text x="90.0162%" y="431.50"></text></g><g><title>__local_bh_enable_ip (856 samples, 0.73%)</title><rect x="89.7260%" y="469" width="0.7325%" height="15" fill="rgb(244,192,49)" fg:x="104852" fg:w="856"/><text x="89.9760%" y="479.50"></text></g><g><title>do_softirq.part.0 (843 samples, 0.72%)</title><rect x="89.7371%" y="453" width="0.7214%" height="15" fill="rgb(226,211,11)" fg:x="104865" fg:w="843"/><text x="89.9871%" y="463.50"></text></g><g><title>__netif_rx (26 samples, 0.02%)</title><rect x="90.4773%" y="437" width="0.0222%" height="15" fill="rgb(236,162,54)" fg:x="105730" fg:w="26"/><text x="90.7273%" y="447.50"></text></g><g><title>netif_rx_internal (25 samples, 0.02%)</title><rect x="90.4782%" y="421" width="0.0214%" height="15" fill="rgb(220,229,9)" fg:x="105731" fg:w="25"/><text x="90.7282%" y="431.50"></text></g><g><title>enqueue_to_backlog (22 samples, 0.02%)</title><rect x="90.4808%" y="405" width="0.0188%" height="15" fill="rgb(250,87,22)" fg:x="105734" fg:w="22"/><text x="90.7308%" y="415.50"></text></g><g><title>loopback_xmit (54 samples, 0.05%)</title><rect x="90.4654%" y="453" width="0.0462%" height="15" fill="rgb(239,43,17)" fg:x="105716" fg:w="54"/><text x="90.7154%" y="463.50"></text></g><g><title>dev_hard_start_xmit (65 samples, 0.06%)</title><rect x="90.4585%" y="469" width="0.0556%" height="15" fill="rgb(231,177,25)" fg:x="105708" fg:w="65"/><text x="90.7085%" y="479.50"></text></g><g><title>__dev_queue_xmit (961 samples, 0.82%)</title><rect x="89.7123%" y="485" width="0.8224%" height="15" fill="rgb(219,179,1)" fg:x="104836" fg:w="961"/><text x="89.9623%" y="495.50"></text></g><g><title>validate_xmit_skb (17 samples, 0.01%)</title><rect x="90.5201%" y="469" width="0.0145%" height="15" fill="rgb(238,219,53)" fg:x="105780" fg:w="17"/><text x="90.7701%" y="479.50"></text></g><g><title>ip_finish_output2 (981 samples, 0.84%)</title><rect x="89.6960%" y="517" width="0.8395%" height="15" fill="rgb(232,167,36)" fg:x="104817" fg:w="981"/><text x="89.9460%" y="527.50"></text></g><g><title>neigh_hh_output (964 samples, 0.82%)</title><rect x="89.7106%" y="501" width="0.8249%" height="15" fill="rgb(244,19,51)" fg:x="104834" fg:w="964"/><text x="89.9606%" y="511.50"></text></g><g><title>__ip_finish_output (989 samples, 0.85%)</title><rect x="89.6918%" y="533" width="0.8463%" height="15" fill="rgb(224,6,22)" fg:x="104812" fg:w="989"/><text x="89.9418%" y="543.50"></text></g><g><title>ip_finish_output (1,004 samples, 0.86%)</title><rect x="89.6806%" y="549" width="0.8592%" height="15" fill="rgb(224,145,5)" fg:x="104799" fg:w="1004"/><text x="89.9306%" y="559.50"></text></g><g><title>nf_hook_slow (18 samples, 0.02%)</title><rect x="90.5458%" y="549" width="0.0154%" height="15" fill="rgb(234,130,49)" fg:x="105810" fg:w="18"/><text x="90.7958%" y="559.50"></text></g><g><title>ip_output (1,072 samples, 0.92%)</title><rect x="89.6498%" y="565" width="0.9174%" height="15" fill="rgb(254,6,2)" fg:x="104763" fg:w="1072"/><text x="89.8998%" y="575.50"></text></g><g><title>__ip_queue_xmit (1,358 samples, 1.16%)</title><rect x="89.4068%" y="597" width="1.1621%" height="15" fill="rgb(208,96,46)" fg:x="104479" fg:w="1358"/><text x="89.6568%" y="607.50"></text></g><g><title>ip_local_out (1,331 samples, 1.14%)</title><rect x="89.4299%" y="581" width="1.1390%" height="15" fill="rgb(239,3,39)" fg:x="104506" fg:w="1331"/><text x="89.6799%" y="591.50"></text></g><g><title>ip_queue_xmit (1,369 samples, 1.17%)</title><rect x="89.4068%" y="613" width="1.1715%" height="15" fill="rgb(233,210,1)" fg:x="104479" fg:w="1369"/><text x="89.6568%" y="623.50"></text></g><g><title>skb_clone (18 samples, 0.02%)</title><rect x="90.5783%" y="613" width="0.0154%" height="15" fill="rgb(244,137,37)" fg:x="105848" fg:w="18"/><text x="90.8283%" y="623.50"></text></g><g><title>__skb_clone (16 samples, 0.01%)</title><rect x="90.5800%" y="597" width="0.0137%" height="15" fill="rgb(240,136,2)" fg:x="105850" fg:w="16"/><text x="90.8300%" y="607.50"></text></g><g><title>__tcp_transmit_skb (1,456 samples, 1.25%)</title><rect x="89.3555%" y="629" width="1.2460%" height="15" fill="rgb(239,18,37)" fg:x="104419" fg:w="1456"/><text x="89.6055%" y="639.50"></text></g><g><title>tcp_event_new_data_sent (59 samples, 0.05%)</title><rect x="90.6348%" y="629" width="0.0505%" height="15" fill="rgb(218,185,22)" fg:x="105914" fg:w="59"/><text x="90.8848%" y="639.50"></text></g><g><title>tcp_rearm_rto (22 samples, 0.02%)</title><rect x="90.6664%" y="613" width="0.0188%" height="15" fill="rgb(225,218,4)" fg:x="105951" fg:w="22"/><text x="90.9164%" y="623.50"></text></g><g><title>__mod_timer (34 samples, 0.03%)</title><rect x="90.7084%" y="581" width="0.0291%" height="15" fill="rgb(230,182,32)" fg:x="106000" fg:w="34"/><text x="90.9584%" y="591.50"></text></g><g><title>tcp_schedule_loss_probe (55 samples, 0.05%)</title><rect x="90.6981%" y="629" width="0.0471%" height="15" fill="rgb(242,56,43)" fg:x="105988" fg:w="55"/><text x="90.9481%" y="639.50"></text></g><g><title>sk_reset_timer (44 samples, 0.04%)</title><rect x="90.7075%" y="613" width="0.0377%" height="15" fill="rgb(233,99,24)" fg:x="105999" fg:w="44"/><text x="90.9575%" y="623.50"></text></g><g><title>mod_timer (43 samples, 0.04%)</title><rect x="90.7084%" y="597" width="0.0368%" height="15" fill="rgb(234,209,42)" fg:x="106000" fg:w="43"/><text x="90.9584%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (1,684 samples, 1.44%)</title><rect x="89.3152%" y="661" width="1.4411%" height="15" fill="rgb(227,7,12)" fg:x="104372" fg:w="1684"/><text x="89.5652%" y="671.50"></text></g><g><title>tcp_write_xmit (1,659 samples, 1.42%)</title><rect x="89.3366%" y="645" width="1.4197%" height="15" fill="rgb(245,203,43)" fg:x="104397" fg:w="1659"/><text x="89.5866%" y="655.50"></text></g><g><title>tcp_push (1,687 samples, 1.44%)</title><rect x="89.3144%" y="677" width="1.4436%" height="15" fill="rgb(238,205,33)" fg:x="104371" fg:w="1687"/><text x="89.5644%" y="687.50"></text></g><g><title>__sk_dst_check (15 samples, 0.01%)</title><rect x="90.9001%" y="597" width="0.0128%" height="15" fill="rgb(231,56,7)" fg:x="106224" fg:w="15"/><text x="91.1501%" y="607.50"></text></g><g><title>ipv4_conntrack_defrag (13 samples, 0.01%)</title><rect x="90.9386%" y="565" width="0.0111%" height="15" fill="rgb(244,186,29)" fg:x="106269" fg:w="13"/><text x="91.1886%" y="575.50"></text></g><g><title>ipv4_conntrack_local (16 samples, 0.01%)</title><rect x="90.9497%" y="565" width="0.0137%" height="15" fill="rgb(234,111,31)" fg:x="106282" fg:w="16"/><text x="91.1997%" y="575.50"></text></g><g><title>nf_conntrack_tcp_packet (86 samples, 0.07%)</title><rect x="91.0190%" y="501" width="0.0736%" height="15" fill="rgb(241,149,10)" fg:x="106363" fg:w="86"/><text x="91.2690%" y="511.50"></text></g><g><title>tcp_in_window (33 samples, 0.03%)</title><rect x="91.0644%" y="485" width="0.0282%" height="15" fill="rgb(249,206,44)" fg:x="106416" fg:w="33"/><text x="91.3144%" y="495.50"></text></g><g><title>nf_conntrack_handle_packet (107 samples, 0.09%)</title><rect x="91.0045%" y="517" width="0.0916%" height="15" fill="rgb(251,153,30)" fg:x="106346" fg:w="107"/><text x="91.2545%" y="527.50"></text></g><g><title>__nf_conntrack_find_get (72 samples, 0.06%)</title><rect x="91.1097%" y="501" width="0.0616%" height="15" fill="rgb(239,152,38)" fg:x="106469" fg:w="72"/><text x="91.3597%" y="511.50"></text></g><g><title>hash_conntrack_raw (20 samples, 0.02%)</title><rect x="91.1773%" y="501" width="0.0171%" height="15" fill="rgb(249,139,47)" fg:x="106548" fg:w="20"/><text x="91.4273%" y="511.50"></text></g><g><title>nf_conntrack_in (254 samples, 0.22%)</title><rect x="90.9839%" y="533" width="0.2174%" height="15" fill="rgb(244,64,35)" fg:x="106322" fg:w="254"/><text x="91.2339%" y="543.50"></text></g><g><title>resolve_normal_ct (115 samples, 0.10%)</title><rect x="91.1029%" y="517" width="0.0984%" height="15" fill="rgb(216,46,15)" fg:x="106461" fg:w="115"/><text x="91.3529%" y="527.50"></text></g><g><title>ipv4_conntrack_local (266 samples, 0.23%)</title><rect x="90.9762%" y="549" width="0.2276%" height="15" fill="rgb(250,74,19)" fg:x="106313" fg:w="266"/><text x="91.2262%" y="559.50"></text></g><g><title>nf_hook_slow (300 samples, 0.26%)</title><rect x="90.9634%" y="565" width="0.2567%" height="15" fill="rgb(249,42,33)" fg:x="106298" fg:w="300"/><text x="91.2134%" y="575.50"></text></g><g><title>nf_nat_ipv4_local_fn (14 samples, 0.01%)</title><rect x="91.2081%" y="549" width="0.0120%" height="15" fill="rgb(242,149,17)" fg:x="106584" fg:w="14"/><text x="91.4581%" y="559.50"></text></g><g><title>__ip_local_out (361 samples, 0.31%)</title><rect x="90.9206%" y="581" width="0.3089%" height="15" fill="rgb(244,29,21)" fg:x="106248" fg:w="361"/><text x="91.1706%" y="591.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.01%)</title><rect x="91.4204%" y="437" width="0.0103%" height="15" fill="rgb(220,130,37)" fg:x="106832" fg:w="12"/><text x="91.6704%" y="447.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (24 samples, 0.02%)</title><rect x="91.5008%" y="357" width="0.0205%" height="15" fill="rgb(211,67,2)" fg:x="106926" fg:w="24"/><text x="91.7508%" y="367.50"></text></g><g><title>__inet_lookup_established (45 samples, 0.04%)</title><rect x="91.6463%" y="277" width="0.0385%" height="15" fill="rgb(235,68,52)" fg:x="107096" fg:w="45"/><text x="91.8963%" y="287.50"></text></g><g><title>tcp_filter (32 samples, 0.03%)</title><rect x="91.7036%" y="277" width="0.0274%" height="15" fill="rgb(246,142,3)" fg:x="107163" fg:w="32"/><text x="91.9536%" y="287.50"></text></g><g><title>sk_filter_trim_cap (25 samples, 0.02%)</title><rect x="91.7096%" y="261" width="0.0214%" height="15" fill="rgb(241,25,7)" fg:x="107170" fg:w="25"/><text x="91.9596%" y="271.50"></text></g><g><title>tcp_check_space (21 samples, 0.02%)</title><rect x="91.7507%" y="261" width="0.0180%" height="15" fill="rgb(242,119,39)" fg:x="107218" fg:w="21"/><text x="92.0007%" y="271.50"></text></g><g><title>__mod_timer (42 samples, 0.04%)</title><rect x="91.8157%" y="181" width="0.0359%" height="15" fill="rgb(241,98,45)" fg:x="107294" fg:w="42"/><text x="92.0657%" y="191.50"></text></g><g><title>__tcp_ack_snd_check (67 samples, 0.06%)</title><rect x="91.8046%" y="245" width="0.0573%" height="15" fill="rgb(254,28,30)" fg:x="107281" fg:w="67"/><text x="92.0546%" y="255.50"></text></g><g><title>tcp_send_delayed_ack (61 samples, 0.05%)</title><rect x="91.8097%" y="229" width="0.0522%" height="15" fill="rgb(241,142,54)" fg:x="107287" fg:w="61"/><text x="92.0597%" y="239.50"></text></g><g><title>sk_reset_timer (57 samples, 0.05%)</title><rect x="91.8131%" y="213" width="0.0488%" height="15" fill="rgb(222,85,15)" fg:x="107291" fg:w="57"/><text x="92.0631%" y="223.50"></text></g><g><title>mod_timer (54 samples, 0.05%)</title><rect x="91.8157%" y="197" width="0.0462%" height="15" fill="rgb(210,85,47)" fg:x="107294" fg:w="54"/><text x="92.0657%" y="207.50"></text></g><g><title>rb_erase (12 samples, 0.01%)</title><rect x="91.9347%" y="229" width="0.0103%" height="15" fill="rgb(224,206,25)" fg:x="107433" fg:w="12"/><text x="92.1847%" y="239.50"></text></g><g><title>__slab_free (15 samples, 0.01%)</title><rect x="92.0271%" y="165" width="0.0128%" height="15" fill="rgb(243,201,19)" fg:x="107541" fg:w="15"/><text x="92.2771%" y="175.50"></text></g><g><title>cache_from_obj (19 samples, 0.02%)</title><rect x="92.0399%" y="165" width="0.0163%" height="15" fill="rgb(236,59,4)" fg:x="107556" fg:w="19"/><text x="92.2899%" y="175.50"></text></g><g><title>kfree_skbmem (47 samples, 0.04%)</title><rect x="92.0168%" y="197" width="0.0402%" height="15" fill="rgb(254,179,45)" fg:x="107529" fg:w="47"/><text x="92.2668%" y="207.50"></text></g><g><title>kmem_cache_free (40 samples, 0.03%)</title><rect x="92.0228%" y="181" width="0.0342%" height="15" fill="rgb(226,14,10)" fg:x="107536" fg:w="40"/><text x="92.2728%" y="191.50"></text></g><g><title>__slab_free (19 samples, 0.02%)</title><rect x="92.0904%" y="149" width="0.0163%" height="15" fill="rgb(244,27,41)" fg:x="107615" fg:w="19"/><text x="92.3404%" y="159.50"></text></g><g><title>cache_from_obj (13 samples, 0.01%)</title><rect x="92.1067%" y="149" width="0.0111%" height="15" fill="rgb(235,35,32)" fg:x="107634" fg:w="13"/><text x="92.3567%" y="159.50"></text></g><g><title>skb_release_data (72 samples, 0.06%)</title><rect x="92.0570%" y="197" width="0.0616%" height="15" fill="rgb(218,68,31)" fg:x="107576" fg:w="72"/><text x="92.3070%" y="207.50"></text></g><g><title>skb_free_head (43 samples, 0.04%)</title><rect x="92.0818%" y="181" width="0.0368%" height="15" fill="rgb(207,120,37)" fg:x="107605" fg:w="43"/><text x="92.3318%" y="191.50"></text></g><g><title>kmem_cache_free (39 samples, 0.03%)</title><rect x="92.0853%" y="165" width="0.0334%" height="15" fill="rgb(227,98,0)" fg:x="107609" fg:w="39"/><text x="92.3353%" y="175.50"></text></g><g><title>__kfree_skb (124 samples, 0.11%)</title><rect x="92.0151%" y="213" width="0.1061%" height="15" fill="rgb(207,7,3)" fg:x="107527" fg:w="124"/><text x="92.2651%" y="223.50"></text></g><g><title>mem_cgroup_uncharge_skmem (15 samples, 0.01%)</title><rect x="92.1246%" y="181" width="0.0128%" height="15" fill="rgb(206,98,19)" fg:x="107655" fg:w="15"/><text x="92.3746%" y="191.50"></text></g><g><title>__sk_mem_reclaim (23 samples, 0.02%)</title><rect x="92.1212%" y="213" width="0.0197%" height="15" fill="rgb(217,5,26)" fg:x="107651" fg:w="23"/><text x="92.3712%" y="223.50"></text></g><g><title>__sk_mem_reduce_allocated (23 samples, 0.02%)</title><rect x="92.1212%" y="197" width="0.0197%" height="15" fill="rgb(235,190,38)" fg:x="107651" fg:w="23"/><text x="92.3712%" y="207.50"></text></g><g><title>tcp_ack_update_rtt (25 samples, 0.02%)</title><rect x="92.1486%" y="213" width="0.0214%" height="15" fill="rgb(247,86,24)" fg:x="107683" fg:w="25"/><text x="92.3986%" y="223.50"></text></g><g><title>tcp_rtt_estimator (12 samples, 0.01%)</title><rect x="92.1597%" y="197" width="0.0103%" height="15" fill="rgb(205,101,16)" fg:x="107696" fg:w="12"/><text x="92.4097%" y="207.50"></text></g><g><title>tcp_clean_rtx_queue.constprop.0 (245 samples, 0.21%)</title><rect x="91.9663%" y="229" width="0.2097%" height="15" fill="rgb(246,168,33)" fg:x="107470" fg:w="245"/><text x="92.2163%" y="239.50"></text></g><g><title>tcp_ack (388 samples, 0.33%)</title><rect x="91.8748%" y="245" width="0.3320%" height="15" fill="rgb(231,114,1)" fg:x="107363" fg:w="388"/><text x="92.1248%" y="255.50"></text></g><g><title>page_counter_try_charge (23 samples, 0.02%)</title><rect x="92.2812%" y="181" width="0.0197%" height="15" fill="rgb(207,184,53)" fg:x="107838" fg:w="23"/><text x="92.5312%" y="191.50"></text></g><g><title>sk_forced_mem_schedule (74 samples, 0.06%)</title><rect x="92.2384%" y="229" width="0.0633%" height="15" fill="rgb(224,95,51)" fg:x="107788" fg:w="74"/><text x="92.4884%" y="239.50"></text></g><g><title>mem_cgroup_charge_skmem (68 samples, 0.06%)</title><rect x="92.2436%" y="213" width="0.0582%" height="15" fill="rgb(212,188,45)" fg:x="107794" fg:w="68"/><text x="92.4936%" y="223.50"></text></g><g><title>try_charge_memcg (52 samples, 0.04%)</title><rect x="92.2573%" y="197" width="0.0445%" height="15" fill="rgb(223,154,38)" fg:x="107810" fg:w="52"/><text x="92.5073%" y="207.50"></text></g><g><title>select_task_rq_fair (19 samples, 0.02%)</title><rect x="92.4190%" y="37" width="0.0163%" height="15" fill="rgb(251,22,52)" fg:x="107999" fg:w="19"/><text x="92.6690%" y="47.50"></text></g><g><title>default_wake_function (75 samples, 0.06%)</title><rect x="92.3942%" y="69" width="0.0642%" height="15" fill="rgb(229,209,22)" fg:x="107970" fg:w="75"/><text x="92.6442%" y="79.50"></text></g><g><title>try_to_wake_up (68 samples, 0.06%)</title><rect x="92.4002%" y="53" width="0.0582%" height="15" fill="rgb(234,138,34)" fg:x="107977" fg:w="68"/><text x="92.6502%" y="63.50"></text></g><g><title>ttwu_queue_wakelist (26 samples, 0.02%)</title><rect x="92.4361%" y="37" width="0.0222%" height="15" fill="rgb(212,95,11)" fg:x="108019" fg:w="26"/><text x="92.6861%" y="47.50"></text></g><g><title>__wake_up_common (87 samples, 0.07%)</title><rect x="92.3848%" y="101" width="0.0744%" height="15" fill="rgb(240,179,47)" fg:x="107959" fg:w="87"/><text x="92.6348%" y="111.50"></text></g><g><title>ep_autoremove_wake_function (77 samples, 0.07%)</title><rect x="92.3933%" y="85" width="0.0659%" height="15" fill="rgb(240,163,11)" fg:x="107969" fg:w="77"/><text x="92.6433%" y="95.50"></text></g><g><title>__wake_up (93 samples, 0.08%)</title><rect x="92.3831%" y="133" width="0.0796%" height="15" fill="rgb(236,37,12)" fg:x="107957" fg:w="93"/><text x="92.6331%" y="143.50"></text></g><g><title>__wake_up_common_lock (93 samples, 0.08%)</title><rect x="92.3831%" y="117" width="0.0796%" height="15" fill="rgb(232,164,16)" fg:x="107957" fg:w="93"/><text x="92.6331%" y="127.50"></text></g><g><title>__wake_up_common (167 samples, 0.14%)</title><rect x="92.3300%" y="165" width="0.1429%" height="15" fill="rgb(244,205,15)" fg:x="107895" fg:w="167"/><text x="92.5800%" y="175.50"></text></g><g><title>ep_poll_callback (142 samples, 0.12%)</title><rect x="92.3514%" y="149" width="0.1215%" height="15" fill="rgb(223,117,47)" fg:x="107920" fg:w="142"/><text x="92.6014%" y="159.50"></text></g><g><title>__wake_up_common_lock (187 samples, 0.16%)</title><rect x="92.3266%" y="181" width="0.1600%" height="15" fill="rgb(244,107,35)" fg:x="107891" fg:w="187"/><text x="92.5766%" y="191.50"></text></g><g><title>tcp_data_ready (213 samples, 0.18%)</title><rect x="92.3052%" y="229" width="0.1823%" height="15" fill="rgb(205,140,8)" fg:x="107866" fg:w="213"/><text x="92.5552%" y="239.50"></text></g><g><title>sock_def_readable (206 samples, 0.18%)</title><rect x="92.3112%" y="213" width="0.1763%" height="15" fill="rgb(228,84,46)" fg:x="107873" fg:w="206"/><text x="92.5612%" y="223.50"></text></g><g><title>__wake_up_sync_key (189 samples, 0.16%)</title><rect x="92.3257%" y="197" width="0.1617%" height="15" fill="rgb(254,188,9)" fg:x="107890" fg:w="189"/><text x="92.5757%" y="207.50"></text></g><g><title>tcp_event_data_recv (16 samples, 0.01%)</title><rect x="92.4875%" y="229" width="0.0137%" height="15" fill="rgb(206,112,54)" fg:x="108079" fg:w="16"/><text x="92.7375%" y="239.50"></text></g><g><title>tcp_data_queue (357 samples, 0.31%)</title><rect x="92.2068%" y="245" width="0.3055%" height="15" fill="rgb(216,84,49)" fg:x="107751" fg:w="357"/><text x="92.4568%" y="255.50"></text></g><g><title>tcp_rcv_established (916 samples, 0.78%)</title><rect x="91.7712%" y="261" width="0.7839%" height="15" fill="rgb(214,194,35)" fg:x="107242" fg:w="916"/><text x="92.0212%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (1,163 samples, 1.00%)</title><rect x="91.5658%" y="309" width="0.9952%" height="15" fill="rgb(249,28,3)" fg:x="107002" fg:w="1163"/><text x="91.8158%" y="319.50"></text></g><g><title>tcp_v4_rcv (1,104 samples, 0.94%)</title><rect x="91.6163%" y="293" width="0.9447%" height="15" fill="rgb(222,56,52)" fg:x="107061" fg:w="1104"/><text x="91.8663%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (961 samples, 0.82%)</title><rect x="91.7387%" y="277" width="0.8224%" height="15" fill="rgb(245,217,50)" fg:x="107204" fg:w="961"/><text x="91.9887%" y="287.50"></text></g><g><title>ip_local_deliver_finish (1,178 samples, 1.01%)</title><rect x="91.5581%" y="325" width="1.0081%" height="15" fill="rgb(213,201,24)" fg:x="106993" fg:w="1178"/><text x="91.8081%" y="335.50"></text></g><g><title>nf_hook_slow (14 samples, 0.01%)</title><rect x="92.5713%" y="325" width="0.0120%" height="15" fill="rgb(248,116,28)" fg:x="108177" fg:w="14"/><text x="92.8213%" y="335.50"></text></g><g><title>ip_local_deliver (1,213 samples, 1.04%)</title><rect x="91.5487%" y="341" width="1.0380%" height="15" fill="rgb(219,72,43)" fg:x="106982" fg:w="1213"/><text x="91.7987%" y="351.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (37 samples, 0.03%)</title><rect x="92.6013%" y="341" width="0.0317%" height="15" fill="rgb(209,138,14)" fg:x="108212" fg:w="37"/><text x="92.8513%" y="351.50"></text></g><g><title>ip_sabotage_in (13 samples, 0.01%)</title><rect x="92.6329%" y="341" width="0.0111%" height="15" fill="rgb(222,18,33)" fg:x="108249" fg:w="13"/><text x="92.8829%" y="351.50"></text></g><g><title>nf_hook_slow (30 samples, 0.03%)</title><rect x="92.6620%" y="341" width="0.0257%" height="15" fill="rgb(213,199,7)" fg:x="108283" fg:w="30"/><text x="92.9120%" y="351.50"></text></g><g><title>ip_rcv (1,357 samples, 1.16%)</title><rect x="91.5290%" y="357" width="1.1612%" height="15" fill="rgb(250,110,10)" fg:x="106959" fg:w="1357"/><text x="91.7790%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (1,409 samples, 1.21%)</title><rect x="91.4931%" y="373" width="1.2057%" height="15" fill="rgb(248,123,6)" fg:x="106917" fg:w="1409"/><text x="91.7431%" y="383.50"></text></g><g><title>__netif_receive_skb (1,423 samples, 1.22%)</title><rect x="91.4871%" y="389" width="1.2177%" height="15" fill="rgb(206,91,31)" fg:x="106910" fg:w="1423"/><text x="91.7371%" y="399.50"></text></g><g><title>__napi_poll (1,468 samples, 1.26%)</title><rect x="91.4623%" y="421" width="1.2562%" height="15" fill="rgb(211,154,13)" fg:x="106881" fg:w="1468"/><text x="91.7123%" y="431.50"></text></g><g><title>process_backlog (1,454 samples, 1.24%)</title><rect x="91.4743%" y="405" width="1.2442%" height="15" fill="rgb(225,148,7)" fg:x="106895" fg:w="1454"/><text x="91.7243%" y="415.50"></text></g><g><title>kfree_skbmem (30 samples, 0.03%)</title><rect x="92.7305%" y="405" width="0.0257%" height="15" fill="rgb(220,160,43)" fg:x="108363" fg:w="30"/><text x="92.9805%" y="415.50"></text></g><g><title>kmem_cache_free (16 samples, 0.01%)</title><rect x="92.7425%" y="389" width="0.0137%" height="15" fill="rgb(213,52,39)" fg:x="108377" fg:w="16"/><text x="92.9925%" y="399.50"></text></g><g><title>free_unref_page (170 samples, 0.15%)</title><rect x="92.8409%" y="341" width="0.1455%" height="15" fill="rgb(243,137,7)" fg:x="108492" fg:w="170"/><text x="93.0909%" y="351.50"></text></g><g><title>free_unref_page_prepare (151 samples, 0.13%)</title><rect x="92.8571%" y="325" width="0.1292%" height="15" fill="rgb(230,79,13)" fg:x="108511" fg:w="151"/><text x="93.1071%" y="335.50"></text></g><g><title>free_tail_page_prepare (37 samples, 0.03%)</title><rect x="92.9547%" y="309" width="0.0317%" height="15" fill="rgb(247,105,23)" fg:x="108625" fg:w="37"/><text x="93.2047%" y="319.50"></text></g><g><title>free_compound_page (191 samples, 0.16%)</title><rect x="92.8289%" y="357" width="0.1634%" height="15" fill="rgb(223,179,41)" fg:x="108478" fg:w="191"/><text x="93.0789%" y="367.50"></text></g><g><title>destroy_large_folio (203 samples, 0.17%)</title><rect x="92.8221%" y="373" width="0.1737%" height="15" fill="rgb(218,9,34)" fg:x="108470" fg:w="203"/><text x="93.0721%" y="383.50"></text></g><g><title>__folio_put (219 samples, 0.19%)</title><rect x="92.8161%" y="389" width="0.1874%" height="15" fill="rgb(222,106,8)" fg:x="108463" fg:w="219"/><text x="93.0661%" y="399.50"></text></g><g><title>skb_release_data (331 samples, 0.28%)</title><rect x="92.7587%" y="405" width="0.2832%" height="15" fill="rgb(211,220,0)" fg:x="108396" fg:w="331"/><text x="93.0087%" y="415.50"></text></g><g><title>skb_free_head (36 samples, 0.03%)</title><rect x="93.0112%" y="389" width="0.0308%" height="15" fill="rgb(229,52,16)" fg:x="108691" fg:w="36"/><text x="93.2612%" y="399.50"></text></g><g><title>kmem_cache_free (32 samples, 0.03%)</title><rect x="93.0146%" y="373" width="0.0274%" height="15" fill="rgb(212,155,18)" fg:x="108695" fg:w="32"/><text x="93.2646%" y="383.50"></text></g><g><title>cache_from_obj (15 samples, 0.01%)</title><rect x="93.0291%" y="357" width="0.0128%" height="15" fill="rgb(242,21,14)" fg:x="108712" fg:w="15"/><text x="93.2791%" y="367.50"></text></g><g><title>napi_consume_skb (376 samples, 0.32%)</title><rect x="92.7219%" y="421" width="0.3218%" height="15" fill="rgb(222,19,48)" fg:x="108353" fg:w="376"/><text x="92.9719%" y="431.50"></text></g><g><title>__do_softirq (1,932 samples, 1.65%)</title><rect x="91.3973%" y="453" width="1.6533%" height="15" fill="rgb(232,45,27)" fg:x="106805" fg:w="1932"/><text x="91.6473%" y="463.50"></text></g><g><title>net_rx_action (1,890 samples, 1.62%)</title><rect x="91.4332%" y="437" width="1.6173%" height="15" fill="rgb(249,103,42)" fg:x="106847" fg:w="1890"/><text x="91.6832%" y="447.50"></text></g><g><title>__local_bh_enable_ip (1,956 samples, 1.67%)</title><rect x="91.3810%" y="485" width="1.6738%" height="15" fill="rgb(246,81,33)" fg:x="106786" fg:w="1956"/><text x="91.6310%" y="495.50"></text></g><g><title>do_softirq.part.0 (1,951 samples, 1.67%)</title><rect x="91.3853%" y="469" width="1.6695%" height="15" fill="rgb(252,33,42)" fg:x="106791" fg:w="1951"/><text x="91.6353%" y="479.50"></text></g><g><title>__netif_rx (33 samples, 0.03%)</title><rect x="93.0754%" y="453" width="0.0282%" height="15" fill="rgb(209,212,41)" fg:x="108766" fg:w="33"/><text x="93.3254%" y="463.50"></text></g><g><title>netif_rx_internal (28 samples, 0.02%)</title><rect x="93.0796%" y="437" width="0.0240%" height="15" fill="rgb(207,154,6)" fg:x="108771" fg:w="28"/><text x="93.3296%" y="447.50"></text></g><g><title>enqueue_to_backlog (21 samples, 0.02%)</title><rect x="93.0856%" y="421" width="0.0180%" height="15" fill="rgb(223,64,47)" fg:x="108778" fg:w="21"/><text x="93.3356%" y="431.50"></text></g><g><title>loopback_xmit (61 samples, 0.05%)</title><rect x="93.0694%" y="469" width="0.0522%" height="15" fill="rgb(211,161,38)" fg:x="108759" fg:w="61"/><text x="93.3194%" y="479.50"></text></g><g><title>dev_hard_start_xmit (84 samples, 0.07%)</title><rect x="93.0548%" y="485" width="0.0719%" height="15" fill="rgb(219,138,40)" fg:x="108742" fg:w="84"/><text x="93.3048%" y="495.50"></text></g><g><title>validate_xmit_skb (30 samples, 0.03%)</title><rect x="93.1378%" y="485" width="0.0257%" height="15" fill="rgb(241,228,46)" fg:x="108839" fg:w="30"/><text x="93.3878%" y="495.50"></text></g><g><title>__dev_queue_xmit (2,136 samples, 1.83%)</title><rect x="91.3399%" y="501" width="1.8279%" height="15" fill="rgb(223,209,38)" fg:x="106738" fg:w="2136"/><text x="91.5899%" y="511.50">_..</text></g><g><title>ip_finish_output2 (2,199 samples, 1.88%)</title><rect x="91.2911%" y="533" width="1.8818%" height="15" fill="rgb(236,164,45)" fg:x="106681" fg:w="2199"/><text x="91.5411%" y="543.50">i..</text></g><g><title>neigh_hh_output (2,155 samples, 1.84%)</title><rect x="91.3288%" y="517" width="1.8441%" height="15" fill="rgb(231,15,5)" fg:x="106725" fg:w="2155"/><text x="91.5788%" y="527.50">n..</text></g><g><title>__ip_finish_output (2,220 samples, 1.90%)</title><rect x="91.2800%" y="549" width="1.8997%" height="15" fill="rgb(252,35,15)" fg:x="106668" fg:w="2220"/><text x="91.5300%" y="559.50">_..</text></g><g><title>ip_finish_output (2,238 samples, 1.92%)</title><rect x="91.2697%" y="565" width="1.9151%" height="15" fill="rgb(248,181,18)" fg:x="106656" fg:w="2238"/><text x="91.5197%" y="575.50">i..</text></g><g><title>nf_hook_slow (25 samples, 0.02%)</title><rect x="93.1900%" y="565" width="0.0214%" height="15" fill="rgb(233,39,42)" fg:x="108900" fg:w="25"/><text x="93.4400%" y="575.50"></text></g><g><title>nf_nat_ipv4_out (12 samples, 0.01%)</title><rect x="93.2012%" y="549" width="0.0103%" height="15" fill="rgb(238,110,33)" fg:x="108913" fg:w="12"/><text x="93.4512%" y="559.50"></text></g><g><title>ip_output (2,313 samples, 1.98%)</title><rect x="91.2389%" y="581" width="1.9793%" height="15" fill="rgb(233,195,10)" fg:x="106620" fg:w="2313"/><text x="91.4889%" y="591.50">i..</text></g><g><title>__ip_queue_xmit (2,741 samples, 2.35%)</title><rect x="90.8804%" y="613" width="2.3456%" height="15" fill="rgb(254,105,3)" fg:x="106201" fg:w="2741"/><text x="91.1304%" y="623.50">_..</text></g><g><title>ip_local_out (2,703 samples, 2.31%)</title><rect x="90.9129%" y="597" width="2.3131%" height="15" fill="rgb(221,225,9)" fg:x="106239" fg:w="2703"/><text x="91.1629%" y="607.50">i..</text></g><g><title>ip_queue_xmit (2,750 samples, 2.35%)</title><rect x="90.8795%" y="629" width="2.3533%" height="15" fill="rgb(224,227,45)" fg:x="106200" fg:w="2750"/><text x="91.1295%" y="639.50">i..</text></g><g><title>skb_clone (23 samples, 0.02%)</title><rect x="93.2328%" y="629" width="0.0197%" height="15" fill="rgb(229,198,43)" fg:x="108950" fg:w="23"/><text x="93.4828%" y="639.50"></text></g><g><title>__skb_clone (18 samples, 0.02%)</title><rect x="93.2371%" y="613" width="0.0154%" height="15" fill="rgb(206,209,35)" fg:x="108955" fg:w="18"/><text x="93.4871%" y="623.50"></text></g><g><title>__tcp_transmit_skb (2,886 samples, 2.47%)</title><rect x="90.8025%" y="645" width="2.4697%" height="15" fill="rgb(245,195,53)" fg:x="106110" fg:w="2886"/><text x="91.0525%" y="655.50">__..</text></g><g><title>__mod_timer (40 samples, 0.03%)</title><rect x="93.3381%" y="581" width="0.0342%" height="15" fill="rgb(240,92,26)" fg:x="109073" fg:w="40"/><text x="93.5881%" y="591.50"></text></g><g><title>lock_timer_base (16 samples, 0.01%)</title><rect x="93.3586%" y="565" width="0.0137%" height="15" fill="rgb(207,40,23)" fg:x="109097" fg:w="16"/><text x="93.6086%" y="575.50"></text></g><g><title>tcp_event_new_data_sent (72 samples, 0.06%)</title><rect x="93.3158%" y="645" width="0.0616%" height="15" fill="rgb(223,111,35)" fg:x="109047" fg:w="72"/><text x="93.5658%" y="655.50"></text></g><g><title>tcp_rearm_rto (52 samples, 0.04%)</title><rect x="93.3329%" y="629" width="0.0445%" height="15" fill="rgb(229,147,28)" fg:x="109067" fg:w="52"/><text x="93.5829%" y="639.50"></text></g><g><title>sk_reset_timer (48 samples, 0.04%)</title><rect x="93.3364%" y="613" width="0.0411%" height="15" fill="rgb(211,29,28)" fg:x="109071" fg:w="48"/><text x="93.5864%" y="623.50"></text></g><g><title>mod_timer (46 samples, 0.04%)</title><rect x="93.3381%" y="597" width="0.0394%" height="15" fill="rgb(228,72,33)" fg:x="109073" fg:w="46"/><text x="93.5881%" y="607.50"></text></g><g><title>tcp_schedule_loss_probe (20 samples, 0.02%)</title><rect x="93.3877%" y="645" width="0.0171%" height="15" fill="rgb(205,214,31)" fg:x="109131" fg:w="20"/><text x="93.6377%" y="655.50"></text></g><g><title>tcp_tso_segs (15 samples, 0.01%)</title><rect x="93.4091%" y="645" width="0.0128%" height="15" fill="rgb(224,111,15)" fg:x="109156" fg:w="15"/><text x="93.6591%" y="655.50"></text></g><g><title>tcp_push_one (3,117 samples, 2.67%)</title><rect x="90.7580%" y="677" width="2.6673%" height="15" fill="rgb(253,21,26)" fg:x="106058" fg:w="3117"/><text x="91.0080%" y="687.50">tc..</text></g><g><title>tcp_write_xmit (3,096 samples, 2.65%)</title><rect x="90.7760%" y="661" width="2.6494%" height="15" fill="rgb(245,139,43)" fg:x="106079" fg:w="3096"/><text x="91.0260%" y="671.50">tc..</text></g><g><title>tcp_send_mss (38 samples, 0.03%)</title><rect x="93.4296%" y="677" width="0.0325%" height="15" fill="rgb(252,170,7)" fg:x="109180" fg:w="38"/><text x="93.6796%" y="687.50"></text></g><g><title>tcp_current_mss (32 samples, 0.03%)</title><rect x="93.4348%" y="661" width="0.0274%" height="15" fill="rgb(231,118,14)" fg:x="109186" fg:w="32"/><text x="93.6848%" y="671.50"></text></g><g><title>tcp_skb_entail (16 samples, 0.01%)</title><rect x="93.4622%" y="677" width="0.0137%" height="15" fill="rgb(238,83,0)" fg:x="109218" fg:w="16"/><text x="93.7122%" y="687.50"></text></g><g><title>kmem_cache_alloc_node (31 samples, 0.03%)</title><rect x="93.5323%" y="629" width="0.0265%" height="15" fill="rgb(221,39,39)" fg:x="109300" fg:w="31"/><text x="93.7823%" y="639.50"></text></g><g><title>memset_orig (22 samples, 0.02%)</title><rect x="93.5588%" y="629" width="0.0188%" height="15" fill="rgb(222,119,46)" fg:x="109331" fg:w="22"/><text x="93.8088%" y="639.50"></text></g><g><title>kmalloc_reserve (59 samples, 0.05%)</title><rect x="93.5280%" y="645" width="0.0505%" height="15" fill="rgb(222,165,49)" fg:x="109295" fg:w="59"/><text x="93.7780%" y="655.50"></text></g><g><title>kmem_cache_alloc_node (53 samples, 0.05%)</title><rect x="93.5785%" y="645" width="0.0454%" height="15" fill="rgb(219,113,52)" fg:x="109354" fg:w="53"/><text x="93.8285%" y="655.50"></text></g><g><title>memset_orig (15 samples, 0.01%)</title><rect x="93.6247%" y="645" width="0.0128%" height="15" fill="rgb(214,7,15)" fg:x="109408" fg:w="15"/><text x="93.8747%" y="655.50"></text></g><g><title>__alloc_skb (189 samples, 0.16%)</title><rect x="93.4887%" y="661" width="0.1617%" height="15" fill="rgb(235,32,4)" fg:x="109249" fg:w="189"/><text x="93.7387%" y="671.50"></text></g><g><title>should_failslab (15 samples, 0.01%)</title><rect x="93.6376%" y="645" width="0.0128%" height="15" fill="rgb(238,90,54)" fg:x="109423" fg:w="15"/><text x="93.8876%" y="655.50"></text></g><g><title>mod_memcg_state (27 samples, 0.02%)</title><rect x="93.6650%" y="629" width="0.0231%" height="15" fill="rgb(213,208,19)" fg:x="109455" fg:w="27"/><text x="93.9150%" y="639.50"></text></g><g><title>__mod_memcg_state (26 samples, 0.02%)</title><rect x="93.6658%" y="613" width="0.0222%" height="15" fill="rgb(233,156,4)" fg:x="109456" fg:w="26"/><text x="93.9158%" y="623.50"></text></g><g><title>cgroup_rstat_updated (15 samples, 0.01%)</title><rect x="93.6752%" y="597" width="0.0128%" height="15" fill="rgb(207,194,5)" fg:x="109467" fg:w="15"/><text x="93.9252%" y="607.50"></text></g><g><title>mem_cgroup_charge_skmem (47 samples, 0.04%)</title><rect x="93.6598%" y="645" width="0.0402%" height="15" fill="rgb(206,111,30)" fg:x="109449" fg:w="47"/><text x="93.9098%" y="655.50"></text></g><g><title>try_charge_memcg (14 samples, 0.01%)</title><rect x="93.6881%" y="629" width="0.0120%" height="15" fill="rgb(243,70,54)" fg:x="109482" fg:w="14"/><text x="93.9381%" y="639.50"></text></g><g><title>tcp_stream_alloc_skb (266 samples, 0.23%)</title><rect x="93.4758%" y="677" width="0.2276%" height="15" fill="rgb(242,28,8)" fg:x="109234" fg:w="266"/><text x="93.7258%" y="687.50"></text></g><g><title>sk_forced_mem_schedule (54 samples, 0.05%)</title><rect x="93.6573%" y="661" width="0.0462%" height="15" fill="rgb(219,106,18)" fg:x="109446" fg:w="54"/><text x="93.9073%" y="671.50"></text></g><g><title>__mod_memcg_state (37 samples, 0.03%)</title><rect x="93.7856%" y="597" width="0.0317%" height="15" fill="rgb(244,222,10)" fg:x="109596" fg:w="37"/><text x="94.0356%" y="607.50"></text></g><g><title>cgroup_rstat_updated (17 samples, 0.01%)</title><rect x="93.8027%" y="581" width="0.0145%" height="15" fill="rgb(236,179,52)" fg:x="109616" fg:w="17"/><text x="94.0527%" y="591.50"></text></g><g><title>mod_memcg_state (51 samples, 0.04%)</title><rect x="93.7745%" y="613" width="0.0436%" height="15" fill="rgb(213,23,39)" fg:x="109583" fg:w="51"/><text x="94.0245%" y="623.50"></text></g><g><title>consume_stock (23 samples, 0.02%)</title><rect x="93.8532%" y="597" width="0.0197%" height="15" fill="rgb(238,48,10)" fg:x="109675" fg:w="23"/><text x="94.1032%" y="607.50"></text></g><g><title>page_counter_try_charge (32 samples, 0.03%)</title><rect x="93.8729%" y="597" width="0.0274%" height="15" fill="rgb(251,196,23)" fg:x="109698" fg:w="32"/><text x="94.1229%" y="607.50"></text></g><g><title>mem_cgroup_charge_skmem (161 samples, 0.14%)</title><rect x="93.7651%" y="629" width="0.1378%" height="15" fill="rgb(250,152,24)" fg:x="109572" fg:w="161"/><text x="94.0151%" y="639.50"></text></g><g><title>try_charge_memcg (93 samples, 0.08%)</title><rect x="93.8233%" y="613" width="0.0796%" height="15" fill="rgb(209,150,17)" fg:x="109640" fg:w="93"/><text x="94.0733%" y="623.50"></text></g><g><title>__sk_mem_raise_allocated (224 samples, 0.19%)</title><rect x="93.7240%" y="645" width="0.1917%" height="15" fill="rgb(234,202,34)" fg:x="109524" fg:w="224"/><text x="93.9740%" y="655.50"></text></g><g><title>tcp_sendmsg_locked (9,639 samples, 8.25%)</title><rect x="85.6715%" y="693" width="8.2485%" height="15" fill="rgb(253,148,53)" fg:x="100114" fg:w="9639"/><text x="85.9215%" y="703.50">tcp_sendmsg..</text></g><g><title>tcp_wmem_schedule (250 samples, 0.21%)</title><rect x="93.7060%" y="677" width="0.2139%" height="15" fill="rgb(218,129,16)" fg:x="109503" fg:w="250"/><text x="93.9560%" y="687.50"></text></g><g><title>__sk_mem_schedule (234 samples, 0.20%)</title><rect x="93.7197%" y="661" width="0.2002%" height="15" fill="rgb(216,85,19)" fg:x="109519" fg:w="234"/><text x="93.9697%" y="671.50"></text></g><g><title>tcp_sendmsg (9,728 samples, 8.32%)</title><rect x="85.6048%" y="709" width="8.3246%" height="15" fill="rgb(235,228,7)" fg:x="100036" fg:w="9728"/><text x="85.8548%" y="719.50">tcp_sendmsg</text></g><g><title>inet_sendmsg (9,751 samples, 8.34%)</title><rect x="85.5868%" y="725" width="8.3443%" height="15" fill="rgb(245,175,0)" fg:x="100015" fg:w="9751"/><text x="85.8368%" y="735.50">inet_sendmsg</text></g><g><title>security_socket_sendmsg (27 samples, 0.02%)</title><rect x="93.9311%" y="725" width="0.0231%" height="15" fill="rgb(208,168,36)" fg:x="109766" fg:w="27"/><text x="94.1811%" y="735.50"></text></g><g><title>apparmor_socket_sendmsg (26 samples, 0.02%)</title><rect x="93.9320%" y="709" width="0.0222%" height="15" fill="rgb(246,171,24)" fg:x="109767" fg:w="26"/><text x="94.1820%" y="719.50"></text></g><g><title>aa_sk_perm (26 samples, 0.02%)</title><rect x="93.9320%" y="693" width="0.0222%" height="15" fill="rgb(215,142,24)" fg:x="109767" fg:w="26"/><text x="94.1820%" y="703.50"></text></g><g><title>__fdget (43 samples, 0.04%)</title><rect x="93.9619%" y="709" width="0.0368%" height="15" fill="rgb(250,187,7)" fg:x="109802" fg:w="43"/><text x="94.2119%" y="719.50"></text></g><g><title>__fget_light (42 samples, 0.04%)</title><rect x="93.9628%" y="693" width="0.0359%" height="15" fill="rgb(228,66,33)" fg:x="109803" fg:w="42"/><text x="94.2128%" y="703.50"></text></g><g><title>sockfd_lookup_light (53 samples, 0.05%)</title><rect x="93.9542%" y="725" width="0.0454%" height="15" fill="rgb(234,215,21)" fg:x="109793" fg:w="53"/><text x="94.2042%" y="735.50"></text></g><g><title>__sys_sendto (9,886 samples, 8.46%)</title><rect x="85.5414%" y="741" width="8.4598%" height="15" fill="rgb(222,191,20)" fg:x="99962" fg:w="9886"/><text x="85.7914%" y="751.50">__sys_sendto</text></g><g><title>fput (12 samples, 0.01%)</title><rect x="94.0013%" y="741" width="0.0103%" height="15" fill="rgb(245,79,54)" fg:x="109848" fg:w="12"/><text x="94.2513%" y="751.50"></text></g><g><title>__x64_sys_sendto (9,903 samples, 8.47%)</title><rect x="85.5406%" y="757" width="8.4744%" height="15" fill="rgb(240,10,37)" fg:x="99961" fg:w="9903"/><text x="85.7906%" y="767.50">__x64_sys_se..</text></g><g><title>entry_SYSCALL_64_after_hwframe (10,081 samples, 8.63%)</title><rect x="85.4747%" y="789" width="8.6267%" height="15" fill="rgb(214,192,32)" fg:x="99884" fg:w="10081"/><text x="85.7247%" y="799.50">entry_SYSCAL..</text></g><g><title>do_syscall_64 (10,020 samples, 8.57%)</title><rect x="85.5269%" y="773" width="8.5745%" height="15" fill="rgb(209,36,54)" fg:x="99945" fg:w="10020"/><text x="85.7769%" y="783.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (97 samples, 0.08%)</title><rect x="94.0184%" y="757" width="0.0830%" height="15" fill="rgb(220,10,11)" fg:x="109868" fg:w="97"/><text x="94.2684%" y="767.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (10,262 samples, 8.78%)</title><rect x="85.3994%" y="821" width="8.7816%" height="15" fill="rgb(221,106,17)" fg:x="99796" fg:w="10262"/><text x="85.6494%" y="831.50">&lt;&amp;std::net::..</text></g><g><title>__send (10,256 samples, 8.78%)</title><rect x="85.4045%" y="805" width="8.7765%" height="15" fill="rgb(251,142,44)" fg:x="99802" fg:w="10256"/><text x="85.6545%" y="815.50">__send</text></g><g><title>syscall_return_via_sysret (91 samples, 0.08%)</title><rect x="94.1031%" y="789" width="0.0779%" height="15" fill="rgb(238,13,15)" fg:x="109967" fg:w="91"/><text x="94.3531%" y="799.50"></text></g><g><title>_ZN5tokio3net3tcp6stream9TcpStream15poll_write_priv17ha47124ce6f5b2502E.llvm.11917656699324148856 (10,280 samples, 8.80%)</title><rect x="85.3882%" y="837" width="8.7970%" height="15" fill="rgb(208,107,27)" fg:x="99783" fg:w="10280"/><text x="85.6382%" y="847.50">_ZN5tokio3ne..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::maybe_notify (13 samples, 0.01%)</title><rect x="94.1853%" y="837" width="0.0111%" height="15" fill="rgb(205,136,37)" fg:x="110063" fg:w="13"/><text x="94.4353%" y="847.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (10,327 samples, 8.84%)</title><rect x="85.3669%" y="853" width="8.8372%" height="15" fill="rgb(250,205,27)" fg:x="99758" fg:w="10327"/><text x="85.6169%" y="863.50">hyper::proto..</text></g><g><title>__memmove_avx_unaligned_erms (47 samples, 0.04%)</title><rect x="94.3299%" y="821" width="0.0402%" height="15" fill="rgb(210,80,43)" fg:x="110232" fg:w="47"/><text x="94.5799%" y="831.50"></text></g><g><title>cfree@GLIBC_2.2.5 (19 samples, 0.02%)</title><rect x="94.3744%" y="821" width="0.0163%" height="15" fill="rgb(247,160,36)" fg:x="110284" fg:w="19"/><text x="94.6244%" y="831.50"></text></g><g><title>http::header::name::HeaderName::as_str (13 samples, 0.01%)</title><rect x="94.3915%" y="821" width="0.0111%" height="15" fill="rgb(234,13,49)" fg:x="110304" fg:w="13"/><text x="94.6415%" y="831.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (234 samples, 0.20%)</title><rect x="94.2041%" y="853" width="0.2002%" height="15" fill="rgb(234,122,0)" fg:x="110085" fg:w="234"/><text x="94.4541%" y="863.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (215 samples, 0.18%)</title><rect x="94.2203%" y="837" width="0.1840%" height="15" fill="rgb(207,146,38)" fg:x="110104" fg:w="215"/><text x="94.4703%" y="847.50"></text></g><g><title>cfree@GLIBC_2.2.5 (65 samples, 0.06%)</title><rect x="94.4129%" y="837" width="0.0556%" height="15" fill="rgb(207,177,25)" fg:x="110329" fg:w="65"/><text x="94.6629%" y="847.50"></text></g><g><title>_int_free (56 samples, 0.05%)</title><rect x="94.4206%" y="821" width="0.0479%" height="15" fill="rgb(211,178,42)" fg:x="110338" fg:w="56"/><text x="94.6706%" y="831.50"></text></g><g><title>hyper::proto::h1::encode::Encoder::encode_and_end (2,380 samples, 2.04%)</title><rect x="94.4043%" y="853" width="2.0367%" height="15" fill="rgb(230,69,54)" fg:x="110319" fg:w="2380"/><text x="94.6543%" y="863.50">h..</text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (2,305 samples, 1.97%)</title><rect x="94.4685%" y="837" width="1.9725%" height="15" fill="rgb(214,135,41)" fg:x="110394" fg:w="2305"/><text x="94.7185%" y="847.50">h..</text></g><g><title>__memmove_avx_unaligned_erms (2,293 samples, 1.96%)</title><rect x="94.4788%" y="821" width="1.9622%" height="15" fill="rgb(237,67,25)" fg:x="110406" fg:w="2293"/><text x="94.7288%" y="831.50">_..</text></g><g><title>entry_SYSCALL_64 (39 samples, 0.03%)</title><rect x="96.5154%" y="773" width="0.0334%" height="15" fill="rgb(222,189,50)" fg:x="112786" fg:w="39"/><text x="96.7654%" y="783.50"></text></g><g><title>__x64_sys_recvfrom (14 samples, 0.01%)</title><rect x="96.5805%" y="757" width="0.0120%" height="15" fill="rgb(245,148,34)" fg:x="112862" fg:w="14"/><text x="96.8305%" y="767.50"></text></g><g><title>_raw_spin_lock_bh (17 samples, 0.01%)</title><rect x="96.6515%" y="661" width="0.0145%" height="15" fill="rgb(222,29,6)" fg:x="112945" fg:w="17"/><text x="96.9015%" y="671.50"></text></g><g><title>release_sock (12 samples, 0.01%)</title><rect x="96.6660%" y="661" width="0.0103%" height="15" fill="rgb(221,189,43)" fg:x="112962" fg:w="12"/><text x="96.9160%" y="671.50"></text></g><g><title>__check_object_size.part.0 (16 samples, 0.01%)</title><rect x="96.7627%" y="581" width="0.0137%" height="15" fill="rgb(207,36,27)" fg:x="113075" fg:w="16"/><text x="97.0127%" y="591.50"></text></g><g><title>check_heap_object (14 samples, 0.01%)</title><rect x="96.7644%" y="565" width="0.0120%" height="15" fill="rgb(217,90,24)" fg:x="113077" fg:w="14"/><text x="97.0144%" y="575.50"></text></g><g><title>__check_object_size (17 samples, 0.01%)</title><rect x="96.7627%" y="597" width="0.0145%" height="15" fill="rgb(224,66,35)" fg:x="113075" fg:w="17"/><text x="97.0127%" y="607.50"></text></g><g><title>_copy_to_iter (25 samples, 0.02%)</title><rect x="96.7773%" y="597" width="0.0214%" height="15" fill="rgb(221,13,50)" fg:x="113092" fg:w="25"/><text x="97.0273%" y="607.50"></text></g><g><title>rep_movs_alternative (18 samples, 0.02%)</title><rect x="96.7833%" y="581" width="0.0154%" height="15" fill="rgb(236,68,49)" fg:x="113099" fg:w="18"/><text x="97.0333%" y="591.50"></text></g><g><title>__skb_datagram_iter (68 samples, 0.06%)</title><rect x="96.7431%" y="629" width="0.0582%" height="15" fill="rgb(229,146,28)" fg:x="113052" fg:w="68"/><text x="96.9931%" y="639.50"></text></g><g><title>simple_copy_to_iter (48 samples, 0.04%)</title><rect x="96.7602%" y="613" width="0.0411%" height="15" fill="rgb(225,31,38)" fg:x="113072" fg:w="48"/><text x="97.0102%" y="623.50"></text></g><g><title>skb_copy_datagram_iter (71 samples, 0.06%)</title><rect x="96.7422%" y="645" width="0.0608%" height="15" fill="rgb(250,208,3)" fg:x="113051" fg:w="71"/><text x="96.9922%" y="655.50"></text></g><g><title>mod_memcg_state (14 samples, 0.01%)</title><rect x="96.8064%" y="597" width="0.0120%" height="15" fill="rgb(246,54,23)" fg:x="113126" fg:w="14"/><text x="97.0564%" y="607.50"></text></g><g><title>mem_cgroup_uncharge_skmem (25 samples, 0.02%)</title><rect x="96.8055%" y="613" width="0.0214%" height="15" fill="rgb(243,76,11)" fg:x="113125" fg:w="25"/><text x="97.0555%" y="623.50"></text></g><g><title>__sk_mem_reduce_allocated (31 samples, 0.03%)</title><rect x="96.8030%" y="629" width="0.0265%" height="15" fill="rgb(245,21,50)" fg:x="113122" fg:w="31"/><text x="97.0530%" y="639.50"></text></g><g><title>sock_rfree (32 samples, 0.03%)</title><rect x="96.8030%" y="645" width="0.0274%" height="15" fill="rgb(228,9,43)" fg:x="113122" fg:w="32"/><text x="97.0530%" y="655.50"></text></g><g><title>tcp_recvmsg_locked (190 samples, 0.16%)</title><rect x="96.6917%" y="661" width="0.1626%" height="15" fill="rgb(208,100,47)" fg:x="112992" fg:w="190"/><text x="96.9417%" y="671.50"></text></g><g><title>tcp_rcv_space_adjust (22 samples, 0.02%)</title><rect x="96.8355%" y="645" width="0.0188%" height="15" fill="rgb(232,26,8)" fg:x="113160" fg:w="22"/><text x="97.0855%" y="655.50"></text></g><g><title>tcp_mstamp_refresh (19 samples, 0.02%)</title><rect x="96.8380%" y="629" width="0.0163%" height="15" fill="rgb(216,166,38)" fg:x="113163" fg:w="19"/><text x="97.0880%" y="639.50"></text></g><g><title>tcp_recvmsg (257 samples, 0.22%)</title><rect x="96.6378%" y="677" width="0.2199%" height="15" fill="rgb(251,202,51)" fg:x="112929" fg:w="257"/><text x="96.8878%" y="687.50"></text></g><g><title>inet_recvmsg (266 samples, 0.23%)</title><rect x="96.6344%" y="693" width="0.2276%" height="15" fill="rgb(254,216,34)" fg:x="112925" fg:w="266"/><text x="96.8844%" y="703.50"></text></g><g><title>sock_recvmsg (295 samples, 0.25%)</title><rect x="96.6275%" y="709" width="0.2524%" height="15" fill="rgb(251,32,27)" fg:x="112917" fg:w="295"/><text x="96.8775%" y="719.50"></text></g><g><title>security_socket_recvmsg (21 samples, 0.02%)</title><rect x="96.8620%" y="693" width="0.0180%" height="15" fill="rgb(208,127,28)" fg:x="113191" fg:w="21"/><text x="97.1120%" y="703.50"></text></g><g><title>apparmor_socket_recvmsg (19 samples, 0.02%)</title><rect x="96.8637%" y="677" width="0.0163%" height="15" fill="rgb(224,137,22)" fg:x="113193" fg:w="19"/><text x="97.1137%" y="687.50"></text></g><g><title>aa_sk_perm (17 samples, 0.01%)</title><rect x="96.8654%" y="661" width="0.0145%" height="15" fill="rgb(254,70,32)" fg:x="113195" fg:w="17"/><text x="97.1154%" y="671.50"></text></g><g><title>__fget_light (30 samples, 0.03%)</title><rect x="96.8825%" y="677" width="0.0257%" height="15" fill="rgb(229,75,37)" fg:x="113215" fg:w="30"/><text x="97.1325%" y="687.50"></text></g><g><title>__sys_recvfrom (361 samples, 0.31%)</title><rect x="96.6010%" y="725" width="0.3089%" height="15" fill="rgb(252,64,23)" fg:x="112886" fg:w="361"/><text x="96.8510%" y="735.50"></text></g><g><title>sockfd_lookup_light (35 samples, 0.03%)</title><rect x="96.8800%" y="709" width="0.0300%" height="15" fill="rgb(232,162,48)" fg:x="113212" fg:w="35"/><text x="97.1300%" y="719.50"></text></g><g><title>__fdget (34 samples, 0.03%)</title><rect x="96.8808%" y="693" width="0.0291%" height="15" fill="rgb(246,160,12)" fg:x="113213" fg:w="34"/><text x="97.1308%" y="703.50"></text></g><g><title>__x64_sys_recvfrom (366 samples, 0.31%)</title><rect x="96.6010%" y="741" width="0.3132%" height="15" fill="rgb(247,166,0)" fg:x="112886" fg:w="366"/><text x="96.8510%" y="751.50"></text></g><g><title>do_syscall_64 (485 samples, 0.42%)</title><rect x="96.5924%" y="757" width="0.4150%" height="15" fill="rgb(249,219,21)" fg:x="112876" fg:w="485"/><text x="96.8424%" y="767.50"></text></g><g><title>syscall_exit_to_user_mode (104 samples, 0.09%)</title><rect x="96.9185%" y="741" width="0.0890%" height="15" fill="rgb(205,209,3)" fg:x="113257" fg:w="104"/><text x="97.1685%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (539 samples, 0.46%)</title><rect x="96.5488%" y="773" width="0.4612%" height="15" fill="rgb(243,44,1)" fg:x="112825" fg:w="539"/><text x="96.7988%" y="783.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (698 samples, 0.60%)</title><rect x="96.4898%" y="805" width="0.5973%" height="15" fill="rgb(206,159,16)" fg:x="112756" fg:w="698"/><text x="96.7398%" y="815.50"></text></g><g><title>__libc_recv (697 samples, 0.60%)</title><rect x="96.4906%" y="789" width="0.5965%" height="15" fill="rgb(244,77,30)" fg:x="112757" fg:w="697"/><text x="96.7406%" y="799.50"></text></g><g><title>syscall_return_via_sysret (89 samples, 0.08%)</title><rect x="97.0109%" y="773" width="0.0762%" height="15" fill="rgb(218,69,12)" fg:x="113365" fg:w="89"/><text x="97.2609%" y="783.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (785 samples, 0.67%)</title><rect x="96.4547%" y="837" width="0.6718%" height="15" fill="rgb(212,87,7)" fg:x="112715" fg:w="785"/><text x="96.7047%" y="847.50"></text></g><g><title>_ZN5tokio3net3tcp6stream9TcpStream14poll_read_priv17h64066783f969f87eE.llvm.11917656699324148856 (765 samples, 0.65%)</title><rect x="96.4718%" y="821" width="0.6546%" height="15" fill="rgb(245,114,25)" fg:x="112735" fg:w="765"/><text x="96.7218%" y="831.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (46 samples, 0.04%)</title><rect x="97.0871%" y="805" width="0.0394%" height="15" fill="rgb(210,61,42)" fg:x="113454" fg:w="46"/><text x="97.3371%" y="815.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (917 samples, 0.78%)</title><rect x="96.4410%" y="853" width="0.7847%" height="15" fill="rgb(211,52,33)" fg:x="112699" fg:w="917"/><text x="96.6910%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (116 samples, 0.10%)</title><rect x="97.1264%" y="837" width="0.0993%" height="15" fill="rgb(234,58,33)" fg:x="113500" fg:w="116"/><text x="97.3764%" y="847.50"></text></g><g><title>malloc (107 samples, 0.09%)</title><rect x="97.1341%" y="821" width="0.0916%" height="15" fill="rgb(220,115,36)" fg:x="113509" fg:w="107"/><text x="97.3841%" y="831.50"></text></g><g><title>_int_malloc (87 samples, 0.07%)</title><rect x="97.1512%" y="805" width="0.0744%" height="15" fill="rgb(243,153,54)" fg:x="113529" fg:w="87"/><text x="97.4012%" y="815.50"></text></g><g><title>_ZN8httparse25parse_headers_iter_uninit17h1ccca4832d4d265bE.llvm.3737690095155348513 (57 samples, 0.05%)</title><rect x="97.3275%" y="805" width="0.0488%" height="15" fill="rgb(251,47,18)" fg:x="113735" fg:w="57"/><text x="97.5775%" y="815.50"></text></g><g><title>_ZN8httparse7Request36parse_with_config_and_uninit_headers17hee7ce3546c02f99bE.llvm.3737690095155348513 (113 samples, 0.10%)</title><rect x="97.3010%" y="821" width="0.0967%" height="15" fill="rgb(242,102,42)" fg:x="113704" fg:w="113"/><text x="97.5510%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (27 samples, 0.02%)</title><rect x="97.4165%" y="821" width="0.0231%" height="15" fill="rgb(234,31,38)" fg:x="113839" fg:w="27"/><text x="97.6665%" y="831.50"></text></g><g><title>malloc (13 samples, 0.01%)</title><rect x="97.4285%" y="805" width="0.0111%" height="15" fill="rgb(221,117,51)" fg:x="113853" fg:w="13"/><text x="97.6785%" y="815.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append2 (29 samples, 0.02%)</title><rect x="97.4490%" y="821" width="0.0248%" height="15" fill="rgb(212,20,18)" fg:x="113877" fg:w="29"/><text x="97.6990%" y="831.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (43 samples, 0.04%)</title><rect x="97.4739%" y="821" width="0.0368%" height="15" fill="rgb(245,133,36)" fg:x="113906" fg:w="43"/><text x="97.7239%" y="831.50"></text></g><g><title>http::header::name::parse_hdr (41 samples, 0.04%)</title><rect x="97.4756%" y="805" width="0.0351%" height="15" fill="rgb(212,6,19)" fg:x="113908" fg:w="41"/><text x="97.7256%" y="815.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (33 samples, 0.03%)</title><rect x="97.4824%" y="789" width="0.0282%" height="15" fill="rgb(218,1,36)" fg:x="113916" fg:w="33"/><text x="97.7324%" y="799.50"></text></g><g><title>http::uri::Uri::from_shared (20 samples, 0.02%)</title><rect x="97.5175%" y="821" width="0.0171%" height="15" fill="rgb(246,84,54)" fg:x="113957" fg:w="20"/><text x="97.7675%" y="831.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (15,186 samples, 13.00%)</title><rect x="84.5582%" y="885" width="12.9953%" height="15" fill="rgb(242,110,6)" fg:x="98813" fg:w="15186"/><text x="84.8082%" y="895.50">&lt;hyper::server::conn..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (15,162 samples, 12.97%)</title><rect x="84.5787%" y="869" width="12.9747%" height="15" fill="rgb(214,47,5)" fg:x="98837" fg:w="15162"/><text x="84.8287%" y="879.50">hyper::proto::h1::d..</text></g><g><title>hyper::proto::h1::role::parse_headers (379 samples, 0.32%)</title><rect x="97.2291%" y="853" width="0.3243%" height="15" fill="rgb(218,159,25)" fg:x="113620" fg:w="379"/><text x="97.4791%" y="863.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (376 samples, 0.32%)</title><rect x="97.2317%" y="837" width="0.3218%" height="15" fill="rgb(215,211,28)" fg:x="113623" fg:w="376"/><text x="97.4817%" y="847.50"></text></g><g><title>malloc (22 samples, 0.02%)</title><rect x="97.5346%" y="821" width="0.0188%" height="15" fill="rgb(238,59,32)" fg:x="113977" fg:w="22"/><text x="97.7846%" y="831.50"></text></g><g><title>&lt;deno_unsync::task::MaskFutureAsSend&lt;F&gt; as core::future::future::Future&gt;::poll (15,309 samples, 13.10%)</title><rect x="84.4683%" y="901" width="13.1005%" height="15" fill="rgb(226,82,3)" fg:x="98708" fg:w="15309"/><text x="84.7183%" y="911.50">&lt;deno_unsync::task::..</text></g><g><title>deno_core::async_cancel::internal::Node::register (18 samples, 0.02%)</title><rect x="97.5534%" y="885" width="0.0154%" height="15" fill="rgb(240,164,32)" fg:x="113999" fg:w="18"/><text x="97.8034%" y="895.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (12 samples, 0.01%)</title><rect x="97.5723%" y="901" width="0.0103%" height="15" fill="rgb(232,46,7)" fg:x="114021" fg:w="12"/><text x="97.8223%" y="911.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (12 samples, 0.01%)</title><rect x="97.5911%" y="901" width="0.0103%" height="15" fill="rgb(229,129,53)" fg:x="114043" fg:w="12"/><text x="97.8411%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="97.6399%" y="901" width="0.0111%" height="15" fill="rgb(234,188,29)" fg:x="114100" fg:w="13"/><text x="97.8899%" y="911.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (32 samples, 0.03%)</title><rect x="97.7580%" y="885" width="0.0274%" height="15" fill="rgb(246,141,4)" fg:x="114238" fg:w="32"/><text x="98.0080%" y="895.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_processing_scheduled_tasks (13 samples, 0.01%)</title><rect x="97.8076%" y="885" width="0.0111%" height="15" fill="rgb(229,23,39)" fg:x="114296" fg:w="13"/><text x="98.0576%" y="895.50"></text></g><g><title>std::time::Instant::elapsed (12 samples, 0.01%)</title><rect x="97.8085%" y="869" width="0.0103%" height="15" fill="rgb(206,12,3)" fg:x="114297" fg:w="12"/><text x="98.0585%" y="879.50"></text></g><g><title>_ZN5tokio7runtime2io12scheduled_io11ScheduledIo4wake17h11389753db3fa480E.llvm.11917656699324148856 (39 samples, 0.03%)</title><rect x="97.8495%" y="837" width="0.0334%" height="15" fill="rgb(252,226,20)" fg:x="114345" fg:w="39"/><text x="98.0995%" y="847.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (25 samples, 0.02%)</title><rect x="97.8615%" y="821" width="0.0214%" height="15" fill="rgb(216,123,35)" fg:x="114359" fg:w="25"/><text x="98.1115%" y="831.50"></text></g><g><title>__fdget (16 samples, 0.01%)</title><rect x="97.9103%" y="741" width="0.0137%" height="15" fill="rgb(212,68,40)" fg:x="114416" fg:w="16"/><text x="98.1603%" y="751.50"></text></g><g><title>__fget_light (16 samples, 0.01%)</title><rect x="97.9103%" y="725" width="0.0137%" height="15" fill="rgb(254,125,32)" fg:x="114416" fg:w="16"/><text x="98.1603%" y="735.50"></text></g><g><title>sock_poll (37 samples, 0.03%)</title><rect x="97.9736%" y="693" width="0.0317%" height="15" fill="rgb(253,97,22)" fg:x="114490" fg:w="37"/><text x="98.2236%" y="703.50"></text></g><g><title>tcp_poll (17 samples, 0.01%)</title><rect x="97.9907%" y="677" width="0.0145%" height="15" fill="rgb(241,101,14)" fg:x="114510" fg:w="17"/><text x="98.2407%" y="687.50"></text></g><g><title>ep_item_poll.isra.0 (62 samples, 0.05%)</title><rect x="97.9539%" y="709" width="0.0531%" height="15" fill="rgb(238,103,29)" fg:x="114467" fg:w="62"/><text x="98.2039%" y="719.50"></text></g><g><title>ep_send_events (89 samples, 0.08%)</title><rect x="97.9377%" y="725" width="0.0762%" height="15" fill="rgb(233,195,47)" fg:x="114448" fg:w="89"/><text x="98.1877%" y="735.50"></text></g><g><title>ep_poll (112 samples, 0.10%)</title><rect x="97.9240%" y="741" width="0.0958%" height="15" fill="rgb(246,218,30)" fg:x="114432" fg:w="112"/><text x="98.1740%" y="751.50"></text></g><g><title>do_epoll_wait (131 samples, 0.11%)</title><rect x="97.9086%" y="757" width="0.1121%" height="15" fill="rgb(219,145,47)" fg:x="114414" fg:w="131"/><text x="98.1586%" y="767.50"></text></g><g><title>__x64_sys_epoll_wait (139 samples, 0.12%)</title><rect x="97.9069%" y="773" width="0.1189%" height="15" fill="rgb(243,12,26)" fg:x="114412" fg:w="139"/><text x="98.1569%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (20 samples, 0.02%)</title><rect x="98.0275%" y="773" width="0.0171%" height="15" fill="rgb(214,87,16)" fg:x="114553" fg:w="20"/><text x="98.2775%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (177 samples, 0.15%)</title><rect x="97.8957%" y="805" width="0.1515%" height="15" fill="rgb(208,99,42)" fg:x="114399" fg:w="177"/><text x="98.1457%" y="815.50"></text></g><g><title>do_syscall_64 (167 samples, 0.14%)</title><rect x="97.9043%" y="789" width="0.1429%" height="15" fill="rgb(253,99,2)" fg:x="114409" fg:w="167"/><text x="98.1543%" y="799.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (261 samples, 0.22%)</title><rect x="97.8358%" y="853" width="0.2233%" height="15" fill="rgb(220,168,23)" fg:x="114329" fg:w="261"/><text x="98.0858%" y="863.50"></text></g><g><title>mio::poll::Poll::poll (206 samples, 0.18%)</title><rect x="97.8829%" y="837" width="0.1763%" height="15" fill="rgb(242,38,24)" fg:x="114384" fg:w="206"/><text x="98.1329%" y="847.50"></text></g><g><title>epoll_wait (202 samples, 0.17%)</title><rect x="97.8863%" y="821" width="0.1729%" height="15" fill="rgb(225,182,9)" fg:x="114388" fg:w="202"/><text x="98.1363%" y="831.50"></text></g><g><title>syscall_return_via_sysret (14 samples, 0.01%)</title><rect x="98.0472%" y="805" width="0.0120%" height="15" fill="rgb(243,178,37)" fg:x="114576" fg:w="14"/><text x="98.2972%" y="815.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (19 samples, 0.02%)</title><rect x="98.0592%" y="853" width="0.0163%" height="15" fill="rgb(232,139,19)" fg:x="114590" fg:w="19"/><text x="98.3092%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (309 samples, 0.26%)</title><rect x="97.8187%" y="885" width="0.2644%" height="15" fill="rgb(225,201,24)" fg:x="114309" fg:w="309"/><text x="98.0687%" y="895.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (302 samples, 0.26%)</title><rect x="97.8247%" y="869" width="0.2584%" height="15" fill="rgb(221,47,46)" fg:x="114316" fg:w="302"/><text x="98.0747%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Core::next_task (21 samples, 0.02%)</title><rect x="98.0831%" y="885" width="0.0180%" height="15" fill="rgb(249,23,13)" fg:x="114618" fg:w="21"/><text x="98.3331%" y="895.50"></text></g><g><title>&lt;deno_unsync::task::MaskFutureAsSend&lt;F&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="98.1242%" y="869" width="0.0171%" height="15" fill="rgb(219,9,5)" fg:x="114666" fg:w="20"/><text x="98.3742%" y="879.50"></text></g><g><title>deno::spawn_subcommand::_{{closure}} (16 samples, 0.01%)</title><rect x="98.1276%" y="853" width="0.0137%" height="15" fill="rgb(254,171,16)" fg:x="114670" fg:w="16"/><text x="98.3776%" y="863.50"></text></g><g><title>&lt;deno_core::runtime::op_driver::future_arena::DynFutureInfo&lt;T,C,M,F&gt; as core::future::future::Future&gt;::poll (50 samples, 0.04%)</title><rect x="98.1756%" y="853" width="0.0428%" height="15" fill="rgb(230,171,20)" fg:x="114726" fg:w="50"/><text x="98.4256%" y="863.50"></text></g><g><title>deno_http::http_next::op_http_wait::call::_{{closure}} (50 samples, 0.04%)</title><rect x="98.1756%" y="837" width="0.0428%" height="15" fill="rgb(210,71,41)" fg:x="114726" fg:w="50"/><text x="98.4256%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;deno_core::runtime::op_driver::future_arena::FutureAllocation&lt;deno_core::runtime::op_driver::op_results::PendingOp&lt;deno_core::runtime::op_driver::op_results::V8OpMappingContext&gt;,deno_core::runtime::op_driver::op_results::PendingOpInfo&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="98.2184%" y="853" width="0.0103%" height="15" fill="rgb(206,173,20)" fg:x="114776" fg:w="12"/><text x="98.4684%" y="863.50"></text></g><g><title>tokio::runtime::task::raw::schedule (12 samples, 0.01%)</title><rect x="98.2346%" y="853" width="0.0103%" height="15" fill="rgb(233,88,34)" fg:x="114795" fg:w="12"/><text x="98.4846%" y="863.50"></text></g><g><title>deno_core::runtime::op_driver::futures_unordered_driver::poll_task::_{{closure}} (131 samples, 0.11%)</title><rect x="98.1422%" y="869" width="0.1121%" height="15" fill="rgb(223,209,46)" fg:x="114687" fg:w="131"/><text x="98.3922%" y="879.50"></text></g><g><title>deno::main (654 samples, 0.56%)</title><rect x="97.7023%" y="901" width="0.5597%" height="15" fill="rgb(250,43,18)" fg:x="114173" fg:w="654"/><text x="97.9523%" y="911.50"></text></g><g><title>tokio::runtime::task::raw::poll (187 samples, 0.16%)</title><rect x="98.1020%" y="885" width="0.1600%" height="15" fill="rgb(208,13,10)" fg:x="114640" fg:w="187"/><text x="98.3520%" y="895.50"></text></g><g><title>_ZN2v85scope4data9ScopeData14try_exit_scope17h865bd31857dc58adE.llvm.2939411559403687827 (24 samples, 0.02%)</title><rect x="98.3245%" y="821" width="0.0205%" height="15" fill="rgb(212,200,36)" fg:x="114900" fg:w="24"/><text x="98.5745%" y="831.50"></text></g><g><title>_ZN4core3ptr59drop_in_place$LT$v8..scope..data..ScopeTypeSpecificData$GT$17ha2882d932335d1fbE.llvm.2939411559403687827 (20 samples, 0.02%)</title><rect x="98.3279%" y="805" width="0.0171%" height="15" fill="rgb(225,90,30)" fg:x="114904" fg:w="20"/><text x="98.5779%" y="815.50"></text></g><g><title>v8::internal::Factory::AllocateRawWithAllocationSite (19 samples, 0.02%)</title><rect x="98.4006%" y="741" width="0.0163%" height="15" fill="rgb(236,182,39)" fg:x="114989" fg:w="19"/><text x="98.6506%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (38 samples, 0.03%)</title><rect x="98.3972%" y="805" width="0.0325%" height="15" fill="rgb(212,144,35)" fg:x="114985" fg:w="38"/><text x="98.6472%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (38 samples, 0.03%)</title><rect x="98.3972%" y="789" width="0.0325%" height="15" fill="rgb(228,63,44)" fg:x="114985" fg:w="38"/><text x="98.6472%" y="799.50"></text></g><g><title>v8::External::New (36 samples, 0.03%)</title><rect x="98.3989%" y="773" width="0.0308%" height="15" fill="rgb(228,109,6)" fg:x="114987" fg:w="36"/><text x="98.6489%" y="783.50"></text></g><g><title>v8::internal::Factory::NewExternal (34 samples, 0.03%)</title><rect x="98.4006%" y="757" width="0.0291%" height="15" fill="rgb(238,117,24)" fg:x="114989" fg:w="34"/><text x="98.6506%" y="767.50"></text></g><g><title>Builtins_JSEntry (45 samples, 0.04%)</title><rect x="98.4913%" y="757" width="0.0385%" height="15" fill="rgb(242,26,26)" fg:x="115095" fg:w="45"/><text x="98.7413%" y="767.50"></text></g><g><title>Builtins_JSEntryTrampoline (30 samples, 0.03%)</title><rect x="98.5042%" y="741" width="0.0257%" height="15" fill="rgb(221,92,48)" fg:x="115110" fg:w="30"/><text x="98.7542%" y="751.50"></text></g><g><title>v8::internal::Execution::Call (103 samples, 0.09%)</title><rect x="98.4468%" y="789" width="0.0881%" height="15" fill="rgb(209,209,32)" fg:x="115043" fg:w="103"/><text x="98.6968%" y="799.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (97 samples, 0.08%)</title><rect x="98.4520%" y="773" width="0.0830%" height="15" fill="rgb(221,70,22)" fg:x="115049" fg:w="97"/><text x="98.7020%" y="783.50"></text></g><g><title>v8::Function::Call (118 samples, 0.10%)</title><rect x="98.4357%" y="805" width="0.1010%" height="15" fill="rgb(248,145,5)" fg:x="115030" fg:w="118"/><text x="98.6857%" y="815.50"></text></g><g><title>deno_core::runtime::jsruntime::JsRuntime::do_js_event_loop_tick_realm (213 samples, 0.18%)</title><rect x="98.3595%" y="821" width="0.1823%" height="15" fill="rgb(226,116,26)" fg:x="114941" fg:w="213"/><text x="98.6095%" y="831.50"></text></g><g><title>v8::internal::wasm::WasmEngine::HasRunningCompileJob (13 samples, 0.01%)</title><rect x="98.5649%" y="821" width="0.0111%" height="15" fill="rgb(244,5,17)" fg:x="115181" fg:w="13"/><text x="98.8149%" y="831.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (12 samples, 0.01%)</title><rect x="98.5932%" y="805" width="0.0103%" height="15" fill="rgb(252,159,33)" fg:x="115214" fg:w="12"/><text x="98.8432%" y="815.50"></text></g><g><title>__GI___printf_fp_l (38 samples, 0.03%)</title><rect x="98.6437%" y="629" width="0.0325%" height="15" fill="rgb(206,71,0)" fg:x="115273" fg:w="38"/><text x="98.8937%" y="639.50"></text></g><g><title>v8::internal::GCTracer::StopObservablePause (83 samples, 0.07%)</title><rect x="98.6163%" y="725" width="0.0710%" height="15" fill="rgb(233,118,54)" fg:x="115241" fg:w="83"/><text x="98.8663%" y="735.50"></text></g><g><title>v8::internal::GCTracer::Print (80 samples, 0.07%)</title><rect x="98.6188%" y="709" width="0.0685%" height="15" fill="rgb(234,83,48)" fg:x="115244" fg:w="80"/><text x="98.8688%" y="719.50"></text></g><g><title>v8::internal::GCTracer::Output (75 samples, 0.06%)</title><rect x="98.6231%" y="693" width="0.0642%" height="15" fill="rgb(228,3,54)" fg:x="115249" fg:w="75"/><text x="98.8731%" y="703.50"></text></g><g><title>v8::base::OS::VSNPrintF (74 samples, 0.06%)</title><rect x="98.6240%" y="677" width="0.0633%" height="15" fill="rgb(226,155,13)" fg:x="115250" fg:w="74"/><text x="98.8740%" y="687.50"></text></g><g><title>__vsnprintf_internal (70 samples, 0.06%)</title><rect x="98.6274%" y="661" width="0.0599%" height="15" fill="rgb(241,28,37)" fg:x="115254" fg:w="70"/><text x="98.8774%" y="671.50"></text></g><g><title>__vfprintf_internal (67 samples, 0.06%)</title><rect x="98.6300%" y="645" width="0.0573%" height="15" fill="rgb(233,93,10)" fg:x="115257" fg:w="67"/><text x="98.8800%" y="655.50"></text></g><g><title>v8::internal::Heap::NewSpaceAllocationCounter (117 samples, 0.10%)</title><rect x="98.7061%" y="693" width="0.1001%" height="15" fill="rgb(225,113,19)" fg:x="115346" fg:w="117"/><text x="98.9561%" y="703.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AllocatedSinceLastGC (117 samples, 0.10%)</title><rect x="98.7061%" y="677" width="0.1001%" height="15" fill="rgb(241,2,18)" fg:x="115346" fg:w="117"/><text x="98.9561%" y="687.50"></text></g><g><title>v8::internal::GCTracer::StartInSafepoint (119 samples, 0.10%)</title><rect x="98.7061%" y="709" width="0.1018%" height="15" fill="rgb(228,207,21)" fg:x="115346" fg:w="119"/><text x="98.9561%" y="719.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (23 samples, 0.02%)</title><rect x="98.8182%" y="709" width="0.0197%" height="15" fill="rgb(213,211,35)" fg:x="115477" fg:w="23"/><text x="99.0682%" y="719.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::MakeAllPagesInFromSpaceIterable (15 samples, 0.01%)</title><rect x="98.8251%" y="693" width="0.0128%" height="15" fill="rgb(209,83,10)" fg:x="115485" fg:w="15"/><text x="99.0751%" y="703.50"></text></g><g><title>v8::internal::Heap::CreateFillerObjectAt (15 samples, 0.01%)</title><rect x="98.8251%" y="677" width="0.0128%" height="15" fill="rgb(209,164,1)" fg:x="115485" fg:w="15"/><text x="99.0751%" y="687.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionPrologueInSafepoint (13 samples, 0.01%)</title><rect x="98.8379%" y="709" width="0.0111%" height="15" fill="rgb(213,184,43)" fg:x="115500" fg:w="13"/><text x="99.0879%" y="719.50"></text></g><g><title>v8::internal::ConcurrentMarking::ClearMemoryChunkData (13 samples, 0.01%)</title><rect x="98.8798%" y="677" width="0.0111%" height="15" fill="rgb(231,61,34)" fg:x="115549" fg:w="13"/><text x="99.1298%" y="687.50"></text></g><g><title>v8::internal::SerializerDeserializer::IterateStartupObjectCache (212 samples, 0.18%)</title><rect x="98.9141%" y="661" width="0.1814%" height="15" fill="rgb(235,75,3)" fg:x="115589" fg:w="212"/><text x="99.1641%" y="671.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (86 samples, 0.07%)</title><rect x="99.0219%" y="645" width="0.0736%" height="15" fill="rgb(220,106,47)" fg:x="115715" fg:w="86"/><text x="99.2719%" y="655.50"></text></g><g><title>v8::internal::Heap::IterateRoots (240 samples, 0.21%)</title><rect x="98.8910%" y="677" width="0.2054%" height="15" fill="rgb(210,196,33)" fg:x="115562" fg:w="240"/><text x="99.1410%" y="687.50"></text></g><g><title>v8::internal::OldGenerationMemoryChunkIterator::next (55 samples, 0.05%)</title><rect x="99.0972%" y="677" width="0.0471%" height="15" fill="rgb(229,154,42)" fg:x="115803" fg:w="55"/><text x="99.3472%" y="687.50"></text></g><g><title>v8::internal::Scavenger::Finalize (14 samples, 0.01%)</title><rect x="99.1443%" y="677" width="0.0120%" height="15" fill="rgb(228,114,26)" fg:x="115858" fg:w="14"/><text x="99.3943%" y="687.50"></text></g><g><title>operator new (15 samples, 0.01%)</title><rect x="99.1605%" y="661" width="0.0128%" height="15" fill="rgb(208,144,1)" fg:x="115877" fg:w="15"/><text x="99.4105%" y="671.50"></text></g><g><title>malloc (15 samples, 0.01%)</title><rect x="99.1605%" y="645" width="0.0128%" height="15" fill="rgb(239,112,37)" fg:x="115877" fg:w="15"/><text x="99.4105%" y="655.50"></text></g><g><title>_int_malloc (13 samples, 0.01%)</title><rect x="99.1622%" y="629" width="0.0111%" height="15" fill="rgb(210,96,50)" fg:x="115879" fg:w="13"/><text x="99.4122%" y="639.50"></text></g><g><title>operator new (19 samples, 0.02%)</title><rect x="99.1819%" y="613" width="0.0163%" height="15" fill="rgb(222,178,2)" fg:x="115902" fg:w="19"/><text x="99.4319%" y="623.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="99.1819%" y="597" width="0.0163%" height="15" fill="rgb(226,74,18)" fg:x="115902" fg:w="19"/><text x="99.4319%" y="607.50"></text></g><g><title>_int_malloc (13 samples, 0.01%)</title><rect x="99.1870%" y="581" width="0.0111%" height="15" fill="rgb(225,67,54)" fg:x="115908" fg:w="13"/><text x="99.4370%" y="591.50"></text></g><g><title>v8::internal::FreeList::CreateFreeList (48 samples, 0.04%)</title><rect x="99.1802%" y="629" width="0.0411%" height="15" fill="rgb(251,92,32)" fg:x="115900" fg:w="48"/><text x="99.4302%" y="639.50"></text></g><g><title>v8::internal::FreeListManyCached::FreeListManyCached (27 samples, 0.02%)</title><rect x="99.1982%" y="613" width="0.0231%" height="15" fill="rgb(228,149,22)" fg:x="115921" fg:w="27"/><text x="99.4482%" y="623.50"></text></g><g><title>operator new (20 samples, 0.02%)</title><rect x="99.2042%" y="597" width="0.0171%" height="15" fill="rgb(243,54,13)" fg:x="115928" fg:w="20"/><text x="99.4542%" y="607.50"></text></g><g><title>malloc (20 samples, 0.02%)</title><rect x="99.2042%" y="581" width="0.0171%" height="15" fill="rgb(243,180,28)" fg:x="115928" fg:w="20"/><text x="99.4542%" y="591.50"></text></g><g><title>_int_malloc (14 samples, 0.01%)</title><rect x="99.2093%" y="565" width="0.0120%" height="15" fill="rgb(208,167,24)" fg:x="115934" fg:w="14"/><text x="99.4593%" y="575.50"></text></g><g><title>v8::internal::CompactionSpaceCollection::CompactionSpaceCollection (58 samples, 0.05%)</title><rect x="99.1734%" y="645" width="0.0496%" height="15" fill="rgb(245,73,45)" fg:x="115892" fg:w="58"/><text x="99.4234%" y="655.50"></text></g><g><title>v8::internal::PagedSpace::CreateAllocatorPolicy (12 samples, 0.01%)</title><rect x="99.2230%" y="629" width="0.0103%" height="15" fill="rgb(237,203,48)" fg:x="115950" fg:w="12"/><text x="99.4730%" y="639.50"></text></g><g><title>v8::internal::Scavenger::Scavenger (96 samples, 0.08%)</title><rect x="99.1562%" y="677" width="0.0822%" height="15" fill="rgb(211,197,16)" fg:x="115872" fg:w="96"/><text x="99.4062%" y="687.50"></text></g><g><title>v8::internal::EvacuationAllocator::EvacuationAllocator (76 samples, 0.07%)</title><rect x="99.1734%" y="661" width="0.0650%" height="15" fill="rgb(243,99,51)" fg:x="115892" fg:w="76"/><text x="99.4234%" y="671.50"></text></g><g><title>v8::internal::MainAllocator::MainAllocator (18 samples, 0.02%)</title><rect x="99.2230%" y="645" width="0.0154%" height="15" fill="rgb(215,123,29)" fg:x="115950" fg:w="18"/><text x="99.4730%" y="655.50"></text></g><g><title>v8::internal::CompactionSpaceCollection::~CompactionSpaceCollection (26 samples, 0.02%)</title><rect x="99.2564%" y="661" width="0.0222%" height="15" fill="rgb(239,186,37)" fg:x="115989" fg:w="26"/><text x="99.5064%" y="671.50"></text></g><g><title>v8::internal::Scavenger::~Scavenger (52 samples, 0.04%)</title><rect x="99.2384%" y="677" width="0.0445%" height="15" fill="rgb(252,136,39)" fg:x="115968" fg:w="52"/><text x="99.4884%" y="687.50"></text></g><g><title>v8::internal::Scavenger::Process (22 samples, 0.02%)</title><rect x="99.2914%" y="613" width="0.0188%" height="15" fill="rgb(223,213,32)" fg:x="116030" fg:w="22"/><text x="99.5414%" y="623.50"></text></g><g><title>v8::internal::Scavenger::ScavengePage (22 samples, 0.02%)</title><rect x="99.3103%" y="613" width="0.0188%" height="15" fill="rgb(233,115,5)" fg:x="116052" fg:w="22"/><text x="99.5603%" y="623.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (16 samples, 0.01%)</title><rect x="99.3154%" y="597" width="0.0137%" height="15" fill="rgb(207,226,44)" fg:x="116058" fg:w="16"/><text x="99.5654%" y="607.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::Run (48 samples, 0.04%)</title><rect x="99.2889%" y="645" width="0.0411%" height="15" fill="rgb(208,126,0)" fg:x="116027" fg:w="48"/><text x="99.5389%" y="655.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (47 samples, 0.04%)</title><rect x="99.2897%" y="629" width="0.0402%" height="15" fill="rgb(244,66,21)" fg:x="116028" fg:w="47"/><text x="99.5397%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="99.3325%" y="613" width="0.0103%" height="15" fill="rgb(222,97,12)" fg:x="116078" fg:w="12"/><text x="99.5825%" y="623.50"></text></g><g><title>pthread_cond_broadcast@@GLIBC_2.3.2 (14 samples, 0.01%)</title><rect x="99.3317%" y="629" width="0.0120%" height="15" fill="rgb(219,213,19)" fg:x="116077" fg:w="14"/><text x="99.5817%" y="639.50"></text></g><g><title>v8::platform::DefaultJobState::Join (68 samples, 0.06%)</title><rect x="99.2863%" y="661" width="0.0582%" height="15" fill="rgb(252,169,30)" fg:x="116024" fg:w="68"/><text x="99.5363%" y="671.50"></text></g><g><title>v8::platform::DefaultWorkerThreadsTaskRunner::PostTask (17 samples, 0.01%)</title><rect x="99.3300%" y="645" width="0.0145%" height="15" fill="rgb(206,32,51)" fg:x="116075" fg:w="17"/><text x="99.5800%" y="655.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (69 samples, 0.06%)</title><rect x="99.2863%" y="677" width="0.0590%" height="15" fill="rgb(250,172,42)" fg:x="116024" fg:w="69"/><text x="99.5363%" y="687.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (581 samples, 0.50%)</title><rect x="98.8533%" y="693" width="0.4972%" height="15" fill="rgb(209,34,43)" fg:x="115518" fg:w="581"/><text x="99.1033%" y="703.50"></text></g><g><title>v8::internal::MemoryChunk::ClearLiveness (134 samples, 0.11%)</title><rect x="99.3608%" y="677" width="0.1147%" height="15" fill="rgb(223,11,35)" fg:x="116111" fg:w="134"/><text x="99.6108%" y="687.50"></text></g><g><title>__memset_avx2_unaligned_erms (133 samples, 0.11%)</title><rect x="99.3616%" y="661" width="0.1138%" height="15" fill="rgb(251,219,26)" fg:x="116112" fg:w="133"/><text x="99.6116%" y="671.50"></text></g><g><title>v8::internal::Heap::Scavenge (897 samples, 0.77%)</title><rect x="98.8516%" y="709" width="0.7676%" height="15" fill="rgb(231,119,3)" fg:x="115516" fg:w="897"/><text x="99.1016%" y="719.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EvacuatePrologue (314 samples, 0.27%)</title><rect x="99.3505%" y="693" width="0.2687%" height="15" fill="rgb(216,97,11)" fg:x="116099" fg:w="314"/><text x="99.6005%" y="703.50"></text></g><g><title>v8::internal::SemiSpace::Swap (168 samples, 0.14%)</title><rect x="99.4754%" y="677" width="0.1438%" height="15" fill="rgb(223,59,9)" fg:x="116245" fg:w="168"/><text x="99.7254%" y="687.50"></text></g><g><title>PushAllRegistersAndIterateStack (1,199 samples, 1.03%)</title><rect x="98.6128%" y="773" width="1.0260%" height="15" fill="rgb(233,93,31)" fg:x="115237" fg:w="1199"/><text x="98.8628%" y="783.50"></text></g><g><title>void heap::base::Stack::SetMarkerAndCallbackImpl&lt;v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1&gt; (1,199 samples, 1.03%)</title><rect x="98.6128%" y="757" width="1.0260%" height="15" fill="rgb(239,81,33)" fg:x="115237" fg:w="1199"/><text x="98.8628%" y="767.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1,199 samples, 1.03%)</title><rect x="98.6128%" y="741" width="1.0260%" height="15" fill="rgb(213,120,34)" fg:x="115237" fg:w="1199"/><text x="98.8628%" y="751.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1,100 samples, 0.94%)</title><rect x="98.6976%" y="725" width="0.9413%" height="15" fill="rgb(243,49,53)" fg:x="115336" fg:w="1100"/><text x="98.9476%" y="735.50"></text></g><g><title>v8::internal::MinorGCJob::Task::RunInternal (1,213 samples, 1.04%)</title><rect x="98.6103%" y="805" width="1.0380%" height="15" fill="rgb(247,216,33)" fg:x="115234" fg:w="1213"/><text x="98.8603%" y="815.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1,213 samples, 1.04%)</title><rect x="98.6103%" y="789" width="1.0380%" height="15" fill="rgb(226,26,14)" fg:x="115234" fg:w="1213"/><text x="98.8603%" y="799.50"></text></g><g><title>v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue (29 samples, 0.02%)</title><rect x="99.6483%" y="805" width="0.0248%" height="15" fill="rgb(215,49,53)" fg:x="116447" fg:w="29"/><text x="99.8983%" y="815.50"></text></g><g><title>v8::platform::DefaultForegroundTaskRunner::PopTaskFromDelayedQueueLocked (24 samples, 0.02%)</title><rect x="99.6526%" y="789" width="0.0205%" height="15" fill="rgb(245,162,40)" fg:x="116452" fg:w="24"/><text x="99.9026%" y="799.50"></text></g><g><title>v8::platform::(anonymous namespace)::DefaultTimeFunction (22 samples, 0.02%)</title><rect x="99.6543%" y="773" width="0.0188%" height="15" fill="rgb(229,68,17)" fg:x="116454" fg:w="22"/><text x="99.9043%" y="783.50"></text></g><g><title>v8::platform::DefaultPlatform::PumpMessageLoop (1,283 samples, 1.10%)</title><rect x="98.5760%" y="821" width="1.0979%" height="15" fill="rgb(213,182,10)" fg:x="115194" fg:w="1283"/><text x="98.8260%" y="831.50"></text></g><g><title>deno::tools::run::run_script::_{{closure}} (1,661 samples, 1.42%)</title><rect x="98.2620%" y="901" width="1.4214%" height="15" fill="rgb(245,125,30)" fg:x="114827" fg:w="1661"/><text x="98.5120%" y="911.50"></text></g><g><title>deno::worker::CliMainWorker::run::_{{closure}} (1,643 samples, 1.41%)</title><rect x="98.2774%" y="885" width="1.4060%" height="15" fill="rgb(232,202,2)" fg:x="114845" fg:w="1643"/><text x="98.5274%" y="895.50"></text></g><g><title>deno_runtime::worker::MainWorker::run_event_loop::_{{closure}} (1,639 samples, 1.40%)</title><rect x="98.2808%" y="869" width="1.4026%" height="15" fill="rgb(237,140,51)" fg:x="114849" fg:w="1639"/><text x="98.5308%" y="879.50"></text></g><g><title>deno_core::runtime::jsruntime::JsRuntime::run_event_loop::_{{closure}} (1,624 samples, 1.39%)</title><rect x="98.2937%" y="853" width="1.3897%" height="15" fill="rgb(236,157,25)" fg:x="114864" fg:w="1624"/><text x="98.5437%" y="863.50"></text></g><g><title>deno_core::runtime::jsruntime::JsRuntime::poll_event_loop (1,616 samples, 1.38%)</title><rect x="98.3005%" y="837" width="1.3829%" height="15" fill="rgb(219,209,0)" fg:x="114872" fg:w="1616"/><text x="98.5505%" y="847.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (13 samples, 0.01%)</title><rect x="99.7535%" y="901" width="0.0111%" height="15" fill="rgb(240,116,54)" fg:x="116570" fg:w="13"/><text x="100.0035%" y="911.50"></text></g><g><title>hyper::proto::h1::conn::State::try_keep_alive (12 samples, 0.01%)</title><rect x="99.7664%" y="901" width="0.0103%" height="15" fill="rgb(216,10,36)" fg:x="116585" fg:w="12"/><text x="100.0164%" y="911.50"></text></g><g><title>tokio::runtime::task::raw::poll (60 samples, 0.05%)</title><rect x="99.8126%" y="901" width="0.0513%" height="15" fill="rgb(222,72,44)" fg:x="116639" fg:w="60"/><text x="100.0626%" y="911.50"></text></g><g><title>[unknown] (18,053 samples, 15.45%)</title><rect x="84.4598%" y="917" width="15.4487%" height="15" fill="rgb(232,159,9)" fg:x="98698" fg:w="18053"/><text x="84.7098%" y="927.50">[unknown]</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (31 samples, 0.03%)</title><rect x="99.8819%" y="901" width="0.0265%" height="15" fill="rgb(210,39,32)" fg:x="116720" fg:w="31"/><text x="100.1319%" y="911.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (23 samples, 0.02%)</title><rect x="99.9375%" y="917" width="0.0197%" height="15" fill="rgb(216,194,45)" fg:x="116785" fg:w="23"/><text x="100.1875%" y="927.50"></text></g><g><title>vtable for v8::internal::RootScavengeVisitor (13 samples, 0.01%)</title><rect x="99.9735%" y="917" width="0.0111%" height="15" fill="rgb(218,18,35)" fg:x="116827" fg:w="13"/><text x="100.2235%" y="927.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (13 samples, 0.01%)</title><rect x="99.9735%" y="901" width="0.0111%" height="15" fill="rgb(207,83,51)" fg:x="116827" fg:w="13"/><text x="100.2235%" y="911.50"></text></g><g><title>deno (116,177 samples, 99.42%)</title><rect x="0.5682%" y="933" width="99.4172%" height="15" fill="rgb(225,63,43)" fg:x="664" fg:w="116177"/><text x="0.8182%" y="943.50">deno</text></g><g><title>__perf_event_task_sched_in (12 samples, 0.01%)</title><rect x="99.9872%" y="645" width="0.0103%" height="15" fill="rgb(207,57,36)" fg:x="116843" fg:w="12"/><text x="100.2372%" y="655.50"></text></g><g><title>perf_ctx_enable (12 samples, 0.01%)</title><rect x="99.9872%" y="629" width="0.0103%" height="15" fill="rgb(216,99,33)" fg:x="116843" fg:w="12"/><text x="100.2372%" y="639.50"></text></g><g><title>x86_pmu_enable (12 samples, 0.01%)</title><rect x="99.9872%" y="613" width="0.0103%" height="15" fill="rgb(225,42,16)" fg:x="116843" fg:w="12"/><text x="100.2372%" y="623.50"></text></g><g><title>intel_pmu_enable_all (12 samples, 0.01%)</title><rect x="99.9872%" y="597" width="0.0103%" height="15" fill="rgb(220,201,45)" fg:x="116843" fg:w="12"/><text x="100.2372%" y="607.50"></text></g><g><title>native_write_msr (12 samples, 0.01%)</title><rect x="99.9872%" y="581" width="0.0103%" height="15" fill="rgb(225,33,4)" fg:x="116843" fg:w="12"/><text x="100.2372%" y="591.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (14 samples, 0.01%)</title><rect x="99.9863%" y="837" width="0.0120%" height="15" fill="rgb(224,33,50)" fg:x="116842" fg:w="14"/><text x="100.2363%" y="847.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (14 samples, 0.01%)</title><rect x="99.9863%" y="821" width="0.0120%" height="15" fill="rgb(246,198,51)" fg:x="116842" fg:w="14"/><text x="100.2363%" y="831.50"></text></g><g><title>syscall (14 samples, 0.01%)</title><rect x="99.9863%" y="805" width="0.0120%" height="15" fill="rgb(205,22,4)" fg:x="116842" fg:w="14"/><text x="100.2363%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="99.9863%" y="789" width="0.0120%" height="15" fill="rgb(206,3,8)" fg:x="116842" fg:w="14"/><text x="100.2363%" y="799.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="99.9863%" y="773" width="0.0120%" height="15" fill="rgb(251,23,15)" fg:x="116842" fg:w="14"/><text x="100.2363%" y="783.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.01%)</title><rect x="99.9863%" y="757" width="0.0120%" height="15" fill="rgb(252,88,28)" fg:x="116842" fg:w="14"/><text x="100.2363%" y="767.50"></text></g><g><title>do_futex (14 samples, 0.01%)</title><rect x="99.9863%" y="741" width="0.0120%" height="15" fill="rgb(212,127,14)" fg:x="116842" fg:w="14"/><text x="100.2363%" y="751.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="99.9863%" y="725" width="0.0120%" height="15" fill="rgb(247,145,37)" fg:x="116842" fg:w="14"/><text x="100.2363%" y="735.50"></text></g><g><title>futex_wait_queue (13 samples, 0.01%)</title><rect x="99.9872%" y="709" width="0.0111%" height="15" fill="rgb(209,117,53)" fg:x="116843" fg:w="13"/><text x="100.2372%" y="719.50"></text></g><g><title>schedule (13 samples, 0.01%)</title><rect x="99.9872%" y="693" width="0.0111%" height="15" fill="rgb(212,90,42)" fg:x="116843" fg:w="13"/><text x="100.2372%" y="703.50"></text></g><g><title>__schedule (13 samples, 0.01%)</title><rect x="99.9872%" y="677" width="0.0111%" height="15" fill="rgb(218,164,37)" fg:x="116843" fg:w="13"/><text x="100.2372%" y="687.50"></text></g><g><title>finish_task_switch.isra.0 (13 samples, 0.01%)</title><rect x="99.9872%" y="661" width="0.0111%" height="15" fill="rgb(246,65,34)" fg:x="116843" fg:w="13"/><text x="100.2372%" y="671.50"></text></g><g><title>clone3 (15 samples, 0.01%)</title><rect x="99.9863%" y="917" width="0.0128%" height="15" fill="rgb(231,100,33)" fg:x="116842" fg:w="15"/><text x="100.2363%" y="927.50"></text></g><g><title>start_thread (15 samples, 0.01%)</title><rect x="99.9863%" y="901" width="0.0128%" height="15" fill="rgb(228,126,14)" fg:x="116842" fg:w="15"/><text x="100.2363%" y="911.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 0.01%)</title><rect x="99.9863%" y="885" width="0.0128%" height="15" fill="rgb(215,173,21)" fg:x="116842" fg:w="15"/><text x="100.2363%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (15 samples, 0.01%)</title><rect x="99.9863%" y="869" width="0.0128%" height="15" fill="rgb(210,6,40)" fg:x="116842" fg:w="15"/><text x="100.2363%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 0.01%)</title><rect x="99.9863%" y="853" width="0.0128%" height="15" fill="rgb(212,48,18)" fg:x="116842" fg:w="15"/><text x="100.2363%" y="863.50"></text></g><g><title>all (116,858 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(230,214,11)" fg:x="0" fg:w="116858"/><text x="0.2500%" y="959.50"></text></g><g><title>tokio-runtime-w (17 samples, 0.01%)</title><rect x="99.9855%" y="933" width="0.0145%" height="15" fill="rgb(254,105,39)" fg:x="116841" fg:w="17"/><text x="100.2355%" y="943.50"></text></g></svg></svg>