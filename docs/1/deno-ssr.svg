<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="117518"><g><title>[anon] (22 samples, 0.02%)</title><rect x="0.0034%" y="933" width="0.0187%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="22"/><text x="0.2534%" y="943.50"></text></g><g><title>dequeue_task_fair (21 samples, 0.02%)</title><rect x="0.0698%" y="693" width="0.0179%" height="15" fill="rgb(217,0,24)" fg:x="82" fg:w="21"/><text x="0.3198%" y="703.50"></text></g><g><title>dequeue_entity (16 samples, 0.01%)</title><rect x="0.0740%" y="677" width="0.0136%" height="15" fill="rgb(221,193,54)" fg:x="87" fg:w="16"/><text x="0.3240%" y="687.50"></text></g><g><title>dequeue_task (24 samples, 0.02%)</title><rect x="0.0681%" y="709" width="0.0204%" height="15" fill="rgb(248,212,6)" fg:x="80" fg:w="24"/><text x="0.3181%" y="719.50"></text></g><g><title>__perf_event_task_sched_in (219 samples, 0.19%)</title><rect x="0.0945%" y="693" width="0.1864%" height="15" fill="rgb(208,68,35)" fg:x="111" fg:w="219"/><text x="0.3445%" y="703.50"></text></g><g><title>perf_ctx_enable (218 samples, 0.19%)</title><rect x="0.0953%" y="677" width="0.1855%" height="15" fill="rgb(232,128,0)" fg:x="112" fg:w="218"/><text x="0.3453%" y="687.50"></text></g><g><title>x86_pmu_enable (217 samples, 0.18%)</title><rect x="0.0962%" y="661" width="0.1847%" height="15" fill="rgb(207,160,47)" fg:x="113" fg:w="217"/><text x="0.3462%" y="671.50"></text></g><g><title>intel_pmu_enable_all (215 samples, 0.18%)</title><rect x="0.0979%" y="645" width="0.1830%" height="15" fill="rgb(228,23,34)" fg:x="115" fg:w="215"/><text x="0.3479%" y="655.50"></text></g><g><title>native_write_msr (215 samples, 0.18%)</title><rect x="0.0979%" y="629" width="0.1830%" height="15" fill="rgb(218,30,26)" fg:x="115" fg:w="215"/><text x="0.3479%" y="639.50"></text></g><g><title>finish_task_switch.isra.0 (233 samples, 0.20%)</title><rect x="0.0893%" y="709" width="0.1983%" height="15" fill="rgb(220,122,19)" fg:x="105" fg:w="233"/><text x="0.3393%" y="719.50"></text></g><g><title>psi_task_switch (13 samples, 0.01%)</title><rect x="0.2953%" y="709" width="0.0111%" height="15" fill="rgb(250,228,42)" fg:x="347" fg:w="13"/><text x="0.5453%" y="719.50"></text></g><g><title>__schedule (290 samples, 0.25%)</title><rect x="0.0604%" y="725" width="0.2468%" height="15" fill="rgb(240,193,28)" fg:x="71" fg:w="290"/><text x="0.3104%" y="735.50"></text></g><g><title>futex_wait_queue (291 samples, 0.25%)</title><rect x="0.0604%" y="757" width="0.2476%" height="15" fill="rgb(216,20,37)" fg:x="71" fg:w="291"/><text x="0.3104%" y="767.50"></text></g><g><title>schedule (291 samples, 0.25%)</title><rect x="0.0604%" y="741" width="0.2476%" height="15" fill="rgb(206,188,39)" fg:x="71" fg:w="291"/><text x="0.3104%" y="751.50"></text></g><g><title>futex_wait (298 samples, 0.25%)</title><rect x="0.0570%" y="773" width="0.2536%" height="15" fill="rgb(217,207,13)" fg:x="67" fg:w="298"/><text x="0.3070%" y="783.50"></text></g><g><title>do_futex (304 samples, 0.26%)</title><rect x="0.0536%" y="789" width="0.2587%" height="15" fill="rgb(231,73,38)" fg:x="63" fg:w="304"/><text x="0.3036%" y="799.50"></text></g><g><title>__x64_sys_futex (307 samples, 0.26%)</title><rect x="0.0528%" y="805" width="0.2612%" height="15" fill="rgb(225,20,46)" fg:x="62" fg:w="307"/><text x="0.3028%" y="815.50"></text></g><g><title>exit_to_user_mode_prepare (18 samples, 0.02%)</title><rect x="0.3174%" y="789" width="0.0153%" height="15" fill="rgb(210,31,41)" fg:x="373" fg:w="18"/><text x="0.5674%" y="799.50"></text></g><g><title>do_syscall_64 (331 samples, 0.28%)</title><rect x="0.0519%" y="821" width="0.2817%" height="15" fill="rgb(221,200,47)" fg:x="61" fg:w="331"/><text x="0.3019%" y="831.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.02%)</title><rect x="0.3140%" y="805" width="0.0196%" height="15" fill="rgb(226,26,5)" fg:x="369" fg:w="23"/><text x="0.5640%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (338 samples, 0.29%)</title><rect x="0.0468%" y="837" width="0.2876%" height="15" fill="rgb(249,33,26)" fg:x="55" fg:w="338"/><text x="0.2968%" y="847.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (352 samples, 0.30%)</title><rect x="0.0400%" y="853" width="0.2995%" height="15" fill="rgb(235,183,28)" fg:x="47" fg:w="352"/><text x="0.2900%" y="863.50"></text></g><g><title>pthread_cond_wait@@GLIBC_2.3.2 (373 samples, 0.32%)</title><rect x="0.0332%" y="869" width="0.3174%" height="15" fill="rgb(221,5,38)" fg:x="39" fg:w="373"/><text x="0.2832%" y="879.50"></text></g><g><title>__pthread_mutex_cond_lock (12 samples, 0.01%)</title><rect x="0.3404%" y="853" width="0.0102%" height="15" fill="rgb(247,18,42)" fg:x="400" fg:w="12"/><text x="0.5904%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.02%)</title><rect x="0.3608%" y="837" width="0.0153%" height="15" fill="rgb(241,131,45)" fg:x="424" fg:w="18"/><text x="0.6108%" y="847.50"></text></g><g><title>do_syscall_64 (17 samples, 0.01%)</title><rect x="0.3616%" y="821" width="0.0145%" height="15" fill="rgb(249,31,29)" fg:x="425" fg:w="17"/><text x="0.6116%" y="831.50"></text></g><g><title>pthread_mutex_unlock@@GLIBC_2.2.5 (30 samples, 0.03%)</title><rect x="0.3574%" y="869" width="0.0255%" height="15" fill="rgb(225,111,53)" fg:x="420" fg:w="30"/><text x="0.6074%" y="879.50"></text></g><g><title>__GI___lll_lock_wake (27 samples, 0.02%)</title><rect x="0.3599%" y="853" width="0.0230%" height="15" fill="rgb(238,160,17)" fg:x="423" fg:w="27"/><text x="0.6099%" y="863.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (17 samples, 0.01%)</title><rect x="0.4195%" y="821" width="0.0145%" height="15" fill="rgb(214,148,48)" fg:x="493" fg:w="17"/><text x="0.6695%" y="831.50"></text></g><g><title>v8::internal::ConcurrentMarking::JobTaskMajor::Run (56 samples, 0.05%)</title><rect x="0.3880%" y="853" width="0.0477%" height="15" fill="rgb(232,36,49)" fg:x="456" fg:w="56"/><text x="0.6380%" y="863.50"></text></g><g><title>v8::internal::ConcurrentMarking::RunMajor (56 samples, 0.05%)</title><rect x="0.3880%" y="837" width="0.0477%" height="15" fill="rgb(209,103,24)" fg:x="456" fg:w="56"/><text x="0.6380%" y="847.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (12 samples, 0.01%)</title><rect x="0.4391%" y="789" width="0.0102%" height="15" fill="rgb(229,88,8)" fg:x="516" fg:w="12"/><text x="0.6891%" y="799.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::Run (78 samples, 0.07%)</title><rect x="0.4357%" y="853" width="0.0664%" height="15" fill="rgb(213,181,19)" fg:x="512" fg:w="78"/><text x="0.6857%" y="863.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (78 samples, 0.07%)</title><rect x="0.4357%" y="837" width="0.0664%" height="15" fill="rgb(254,191,54)" fg:x="512" fg:w="78"/><text x="0.6857%" y="847.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (78 samples, 0.07%)</title><rect x="0.4357%" y="821" width="0.0664%" height="15" fill="rgb(241,83,37)" fg:x="512" fg:w="78"/><text x="0.6857%" y="831.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (78 samples, 0.07%)</title><rect x="0.4357%" y="805" width="0.0664%" height="15" fill="rgb(233,36,39)" fg:x="512" fg:w="78"/><text x="0.6857%" y="815.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (62 samples, 0.05%)</title><rect x="0.4493%" y="789" width="0.0528%" height="15" fill="rgb(226,3,54)" fg:x="528" fg:w="62"/><text x="0.6993%" y="799.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (149 samples, 0.13%)</title><rect x="0.3846%" y="869" width="0.1268%" height="15" fill="rgb(245,192,40)" fg:x="452" fg:w="149"/><text x="0.6346%" y="879.50"></text></g><g><title>cfree@GLIBC_2.2.5 (16 samples, 0.01%)</title><rect x="0.5114%" y="853" width="0.0136%" height="15" fill="rgb(238,167,29)" fg:x="601" fg:w="16"/><text x="0.7614%" y="863.50"></text></g><g><title>v8::platform::DefaultJobWorker::~DefaultJobWorker (18 samples, 0.02%)</title><rect x="0.5114%" y="869" width="0.0153%" height="15" fill="rgb(232,182,51)" fg:x="601" fg:w="18"/><text x="0.7614%" y="879.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (12 samples, 0.01%)</title><rect x="0.5327%" y="821" width="0.0102%" height="15" fill="rgb(231,60,39)" fg:x="626" fg:w="12"/><text x="0.7827%" y="831.50"></text></g><g><title>v8::platform::DelayedTaskQueue::TryGetNext (20 samples, 0.02%)</title><rect x="0.5267%" y="869" width="0.0170%" height="15" fill="rgb(208,69,12)" fg:x="619" fg:w="20"/><text x="0.7767%" y="879.50"></text></g><g><title>v8::platform::(anonymous namespace)::DefaultTimeFunction (14 samples, 0.01%)</title><rect x="0.5318%" y="853" width="0.0119%" height="15" fill="rgb(235,93,37)" fg:x="625" fg:w="14"/><text x="0.7818%" y="863.50"></text></g><g><title>v8::base::TimeTicks::Now (13 samples, 0.01%)</title><rect x="0.5327%" y="837" width="0.0111%" height="15" fill="rgb(213,116,39)" fg:x="626" fg:w="13"/><text x="0.7827%" y="847.50"></text></g><g><title>clone3 (611 samples, 0.52%)</title><rect x="0.0247%" y="933" width="0.5199%" height="15" fill="rgb(222,207,29)" fg:x="29" fg:w="611"/><text x="0.2747%" y="943.50"></text></g><g><title>start_thread (611 samples, 0.52%)</title><rect x="0.0247%" y="917" width="0.5199%" height="15" fill="rgb(206,96,30)" fg:x="29" fg:w="611"/><text x="0.2747%" y="927.50"></text></g><g><title>v8::base::ThreadEntry (611 samples, 0.52%)</title><rect x="0.0247%" y="901" width="0.5199%" height="15" fill="rgb(218,138,4)" fg:x="29" fg:w="611"/><text x="0.2747%" y="911.50"></text></g><g><title>v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (610 samples, 0.52%)</title><rect x="0.0255%" y="885" width="0.5191%" height="15" fill="rgb(250,191,14)" fg:x="30" fg:w="610"/><text x="0.2755%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (44 samples, 0.04%)</title><rect x="0.5446%" y="933" width="0.0374%" height="15" fill="rgb(239,60,40)" fg:x="640" fg:w="44"/><text x="0.7946%" y="943.50"></text></g><g><title>do_syscall_64 (44 samples, 0.04%)</title><rect x="0.5446%" y="917" width="0.0374%" height="15" fill="rgb(206,27,48)" fg:x="640" fg:w="44"/><text x="0.7946%" y="927.50"></text></g><g><title>syscall_exit_to_user_mode (41 samples, 0.03%)</title><rect x="0.5472%" y="901" width="0.0349%" height="15" fill="rgb(225,35,8)" fg:x="643" fg:w="41"/><text x="0.7972%" y="911.50"></text></g><g><title>exit_to_user_mode_prepare (41 samples, 0.03%)</title><rect x="0.5472%" y="885" width="0.0349%" height="15" fill="rgb(250,213,24)" fg:x="643" fg:w="41"/><text x="0.7972%" y="895.50"></text></g><g><title>exit_to_user_mode_loop (41 samples, 0.03%)</title><rect x="0.5472%" y="869" width="0.0349%" height="15" fill="rgb(247,123,22)" fg:x="643" fg:w="41"/><text x="0.7972%" y="879.50"></text></g><g><title>arch_do_signal_or_restart (41 samples, 0.03%)</title><rect x="0.5472%" y="853" width="0.0349%" height="15" fill="rgb(231,138,38)" fg:x="643" fg:w="41"/><text x="0.7972%" y="863.50"></text></g><g><title>get_signal (41 samples, 0.03%)</title><rect x="0.5472%" y="837" width="0.0349%" height="15" fill="rgb(231,145,46)" fg:x="643" fg:w="41"/><text x="0.7972%" y="847.50"></text></g><g><title>do_group_exit (41 samples, 0.03%)</title><rect x="0.5472%" y="821" width="0.0349%" height="15" fill="rgb(251,118,11)" fg:x="643" fg:w="41"/><text x="0.7972%" y="831.50"></text></g><g><title>do_exit (41 samples, 0.03%)</title><rect x="0.5472%" y="805" width="0.0349%" height="15" fill="rgb(217,147,25)" fg:x="643" fg:w="41"/><text x="0.7972%" y="815.50"></text></g><g><title>exit_mm (41 samples, 0.03%)</title><rect x="0.5472%" y="789" width="0.0349%" height="15" fill="rgb(247,81,37)" fg:x="643" fg:w="41"/><text x="0.7972%" y="799.50"></text></g><g><title>mmput (41 samples, 0.03%)</title><rect x="0.5472%" y="773" width="0.0349%" height="15" fill="rgb(209,12,38)" fg:x="643" fg:w="41"/><text x="0.7972%" y="783.50"></text></g><g><title>__mmput (41 samples, 0.03%)</title><rect x="0.5472%" y="757" width="0.0349%" height="15" fill="rgb(227,1,9)" fg:x="643" fg:w="41"/><text x="0.7972%" y="767.50"></text></g><g><title>exit_mmap (41 samples, 0.03%)</title><rect x="0.5472%" y="741" width="0.0349%" height="15" fill="rgb(248,47,43)" fg:x="643" fg:w="41"/><text x="0.7972%" y="751.50"></text></g><g><title>unmap_vmas (34 samples, 0.03%)</title><rect x="0.5531%" y="725" width="0.0289%" height="15" fill="rgb(221,10,30)" fg:x="650" fg:w="34"/><text x="0.8031%" y="735.50"></text></g><g><title>unmap_single_vma (34 samples, 0.03%)</title><rect x="0.5531%" y="709" width="0.0289%" height="15" fill="rgb(210,229,1)" fg:x="650" fg:w="34"/><text x="0.8031%" y="719.50"></text></g><g><title>unmap_page_range (34 samples, 0.03%)</title><rect x="0.5531%" y="693" width="0.0289%" height="15" fill="rgb(222,148,37)" fg:x="650" fg:w="34"/><text x="0.8031%" y="703.50"></text></g><g><title>zap_pmd_range.isra.0 (33 samples, 0.03%)</title><rect x="0.5540%" y="677" width="0.0281%" height="15" fill="rgb(234,67,33)" fg:x="651" fg:w="33"/><text x="0.8040%" y="687.50"></text></g><g><title>zap_pte_range (22 samples, 0.02%)</title><rect x="0.5633%" y="661" width="0.0187%" height="15" fill="rgb(247,98,35)" fg:x="662" fg:w="22"/><text x="0.8133%" y="671.50"></text></g><g><title>tlb_flush_mmu (16 samples, 0.01%)</title><rect x="0.5684%" y="645" width="0.0136%" height="15" fill="rgb(247,138,52)" fg:x="668" fg:w="16"/><text x="0.8184%" y="655.50"></text></g><g><title>tlb_batch_pages_flush (16 samples, 0.01%)</title><rect x="0.5684%" y="629" width="0.0136%" height="15" fill="rgb(213,79,30)" fg:x="668" fg:w="16"/><text x="0.8184%" y="639.50"></text></g><g><title>free_pages_and_swap_cache (16 samples, 0.01%)</title><rect x="0.5684%" y="613" width="0.0136%" height="15" fill="rgb(246,177,23)" fg:x="668" fg:w="16"/><text x="0.8184%" y="623.50"></text></g><g><title>release_pages (16 samples, 0.01%)</title><rect x="0.5684%" y="597" width="0.0136%" height="15" fill="rgb(230,62,27)" fg:x="668" fg:w="16"/><text x="0.8184%" y="607.50"></text></g><g><title>V8_DefaultWorke (686 samples, 0.58%)</title><rect x="0.0000%" y="949" width="0.5837%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="686"/><text x="0.2500%" y="959.50"></text></g><g><title>&lt;deno_unsync::task::MaskFutureAsSend&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="0.6169%" y="917" width="0.0111%" height="15" fill="rgb(244,35,45)" fg:x="725" fg:w="13"/><text x="0.8669%" y="927.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (13 samples, 0.01%)</title><rect x="0.6322%" y="917" width="0.0111%" height="15" fill="rgb(251,115,12)" fg:x="743" fg:w="13"/><text x="0.8822%" y="927.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="0.6433%" y="917" width="0.0255%" height="15" fill="rgb(240,54,50)" fg:x="756" fg:w="30"/><text x="0.8933%" y="927.50"></text></g><g><title>_ZN5bytes5bytes11static_drop17hb60b87892a9b1de9E.llvm.11931941952298071965 (16 samples, 0.01%)</title><rect x="0.7097%" y="917" width="0.0136%" height="15" fill="rgb(233,84,52)" fg:x="834" fg:w="16"/><text x="0.9597%" y="927.50"></text></g><g><title>_ZN8httparse7Request36parse_with_config_and_uninit_headers17hee7ce3546c02f99bE.llvm.3737690095155348513 (13 samples, 0.01%)</title><rect x="0.7403%" y="917" width="0.0111%" height="15" fill="rgb(207,117,47)" fg:x="870" fg:w="13"/><text x="0.9903%" y="927.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (30 samples, 0.03%)</title><rect x="0.7769%" y="917" width="0.0255%" height="15" fill="rgb(249,43,39)" fg:x="913" fg:w="30"/><text x="1.0269%" y="927.50"></text></g><g><title>deno_core::async_cancel::internal::Node::register (16 samples, 0.01%)</title><rect x="0.8297%" y="917" width="0.0136%" height="15" fill="rgb(209,38,44)" fg:x="975" fg:w="16"/><text x="1.0797%" y="927.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (17 samples, 0.01%)</title><rect x="0.9258%" y="917" width="0.0145%" height="15" fill="rgb(236,212,23)" fg:x="1088" fg:w="17"/><text x="1.1758%" y="927.50"></text></g><g><title>tokio::runtime::signal::Driver::process (13 samples, 0.01%)</title><rect x="0.9803%" y="917" width="0.0111%" height="15" fill="rgb(242,79,21)" fg:x="1152" fg:w="13"/><text x="1.2303%" y="927.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (13 samples, 0.01%)</title><rect x="0.9922%" y="917" width="0.0111%" height="15" fill="rgb(211,96,35)" fg:x="1166" fg:w="13"/><text x="1.2422%" y="927.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (13 samples, 0.01%)</title><rect x="1.0118%" y="917" width="0.0111%" height="15" fill="rgb(253,215,40)" fg:x="1189" fg:w="13"/><text x="1.2618%" y="927.50"></text></g><g><title>[[heap]] (542 samples, 0.46%)</title><rect x="0.5871%" y="933" width="0.4612%" height="15" fill="rgb(211,81,21)" fg:x="690" fg:w="542"/><text x="0.8371%" y="943.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="1.0730%" y="917" width="0.0136%" height="15" fill="rgb(208,190,38)" fg:x="1261" fg:w="16"/><text x="1.3230%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (15 samples, 0.01%)</title><rect x="1.1658%" y="917" width="0.0128%" height="15" fill="rgb(235,213,38)" fg:x="1370" fg:w="15"/><text x="1.4158%" y="927.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve (14 samples, 0.01%)</title><rect x="1.2645%" y="917" width="0.0119%" height="15" fill="rgb(237,122,38)" fg:x="1486" fg:w="14"/><text x="1.5145%" y="927.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (24 samples, 0.02%)</title><rect x="1.2764%" y="917" width="0.0204%" height="15" fill="rgb(244,218,35)" fg:x="1500" fg:w="24"/><text x="1.5264%" y="927.50"></text></g><g><title>http::header::map::hash_elem_using (13 samples, 0.01%)</title><rect x="1.2968%" y="917" width="0.0111%" height="15" fill="rgb(240,68,47)" fg:x="1524" fg:w="13"/><text x="1.5468%" y="927.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (12 samples, 0.01%)</title><rect x="1.3572%" y="917" width="0.0102%" height="15" fill="rgb(210,16,53)" fg:x="1595" fg:w="12"/><text x="1.6072%" y="927.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_poll (17 samples, 0.01%)</title><rect x="1.3700%" y="917" width="0.0145%" height="15" fill="rgb(235,124,12)" fg:x="1610" fg:w="17"/><text x="1.6200%" y="927.50"></text></g><g><title>tokio::runtime::task::raw::poll (44 samples, 0.04%)</title><rect x="1.3930%" y="917" width="0.0374%" height="15" fill="rgb(224,169,11)" fg:x="1637" fg:w="44"/><text x="1.6430%" y="927.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (148 samples, 0.13%)</title><rect x="1.6355%" y="917" width="0.1259%" height="15" fill="rgb(250,166,2)" fg:x="1922" fg:w="148"/><text x="1.8855%" y="927.50"></text></g><g><title>v8::internal::Runtime_AllocateInYoungGeneration (12 samples, 0.01%)</title><rect x="1.7631%" y="917" width="0.0102%" height="15" fill="rgb(242,216,29)" fg:x="2072" fg:w="12"/><text x="2.0131%" y="927.50"></text></g><g><title>[[stack]] (962 samples, 0.82%)</title><rect x="1.0484%" y="933" width="0.8186%" height="15" fill="rgb(230,116,27)" fg:x="1232" fg:w="962"/><text x="1.2984%" y="943.50"></text></g><g><title>[anon] (17 samples, 0.01%)</title><rect x="1.8669%" y="933" width="0.0145%" height="15" fill="rgb(228,99,48)" fg:x="2194" fg:w="17"/><text x="2.1169%" y="943.50"></text></g><g><title>std::sys::unix::time::Timespec::now (14 samples, 0.01%)</title><rect x="1.8695%" y="917" width="0.0119%" height="15" fill="rgb(253,11,6)" fg:x="2197" fg:w="14"/><text x="2.1195%" y="927.50"></text></g><g><title>[deno] (34 samples, 0.03%)</title><rect x="1.8814%" y="933" width="0.0289%" height="15" fill="rgb(247,143,39)" fg:x="2211" fg:w="34"/><text x="2.1314%" y="943.50"></text></g><g><title>Builtins_EnqueueMicrotask (22 samples, 0.02%)</title><rect x="10.1729%" y="901" width="0.0187%" height="15" fill="rgb(236,97,10)" fg:x="11955" fg:w="22"/><text x="10.4229%" y="911.50"></text></g><g><title>Builtins_AsyncFunctionAwaitCaught (178 samples, 0.15%)</title><rect x="10.0904%" y="917" width="0.1515%" height="15" fill="rgb(233,208,19)" fg:x="11858" fg:w="178"/><text x="10.3404%" y="927.50"></text></g><g><title>Builtins_ResolvePromise (51 samples, 0.04%)</title><rect x="10.1984%" y="901" width="0.0434%" height="15" fill="rgb(216,164,2)" fg:x="11985" fg:w="51"/><text x="10.4484%" y="911.50"></text></g><g><title>Builtins_GetProperty (46 samples, 0.04%)</title><rect x="10.2027%" y="885" width="0.0391%" height="15" fill="rgb(220,129,5)" fg:x="11990" fg:w="46"/><text x="10.4527%" y="895.50"></text></g><g><title>Builtins_CallApiCallbackGeneric (26 samples, 0.02%)</title><rect x="10.2486%" y="917" width="0.0221%" height="15" fill="rgb(242,17,10)" fg:x="12044" fg:w="26"/><text x="10.4986%" y="927.50"></text></g><g><title>v8::Context::GetNumberOfEmbedderDataFields (24 samples, 0.02%)</title><rect x="10.3057%" y="885" width="0.0204%" height="15" fill="rgb(242,107,0)" fg:x="12111" fg:w="24"/><text x="10.5557%" y="895.50"></text></g><g><title>deno_core::ops_builtin_v8::op_has_tick_scheduled::v8_fn_ptr (58 samples, 0.05%)</title><rect x="10.2810%" y="901" width="0.0494%" height="15" fill="rgb(251,28,31)" fg:x="12082" fg:w="58"/><text x="10.5310%" y="911.50"></text></g><g><title>v8::External::Value (17 samples, 0.01%)</title><rect x="10.3388%" y="885" width="0.0145%" height="15" fill="rgb(233,223,10)" fg:x="12150" fg:w="17"/><text x="10.5888%" y="895.50"></text></g><g><title>Builtins_CallFunction_ReceiverIsNullOrUndefined (28 samples, 0.02%)</title><rect x="10.5039%" y="773" width="0.0238%" height="15" fill="rgb(215,21,27)" fg:x="12344" fg:w="28"/><text x="10.7539%" y="783.50"></text></g><g><title>Builtins_CompileLazy (32 samples, 0.03%)</title><rect x="10.5277%" y="773" width="0.0272%" height="15" fill="rgb(232,23,21)" fg:x="12372" fg:w="32"/><text x="10.7777%" y="783.50"></text></g><g><title>Builtins_CallApiCallbackOptimizedNoProfiling (15 samples, 0.01%)</title><rect x="10.5720%" y="741" width="0.0128%" height="15" fill="rgb(244,5,23)" fg:x="12424" fg:w="15"/><text x="10.8220%" y="751.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (37 samples, 0.03%)</title><rect x="10.5626%" y="757" width="0.0315%" height="15" fill="rgb(226,81,46)" fg:x="12413" fg:w="37"/><text x="10.8126%" y="767.50"></text></g><g><title>Builtins_EnqueueMicrotask (13 samples, 0.01%)</title><rect x="10.6052%" y="741" width="0.0111%" height="15" fill="rgb(247,70,30)" fg:x="12463" fg:w="13"/><text x="10.8552%" y="751.50"></text></g><g><title>Builtins_ResolvePromise (20 samples, 0.02%)</title><rect x="10.6035%" y="757" width="0.0170%" height="15" fill="rgb(212,68,19)" fg:x="12461" fg:w="20"/><text x="10.8535%" y="767.50"></text></g><g><title>Builtins_ResumeGeneratorTrampoline (79 samples, 0.07%)</title><rect x="10.6205%" y="757" width="0.0672%" height="15" fill="rgb(240,187,13)" fg:x="12481" fg:w="79"/><text x="10.8705%" y="767.50"></text></g><g><title>Builtins_RecordWriteIgnoreFP (19 samples, 0.02%)</title><rect x="10.6716%" y="741" width="0.0162%" height="15" fill="rgb(223,113,26)" fg:x="12541" fg:w="19"/><text x="10.9216%" y="751.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (157 samples, 0.13%)</title><rect x="10.5550%" y="773" width="0.1336%" height="15" fill="rgb(206,192,2)" fg:x="12404" fg:w="157"/><text x="10.8050%" y="783.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (351 samples, 0.30%)</title><rect x="10.3942%" y="805" width="0.2987%" height="15" fill="rgb(241,108,4)" fg:x="12215" fg:w="351"/><text x="10.6442%" y="815.50"></text></g><g><title>Builtins_RunMicrotasks (341 samples, 0.29%)</title><rect x="10.4027%" y="789" width="0.2902%" height="15" fill="rgb(247,173,49)" fg:x="12225" fg:w="341"/><text x="10.6527%" y="799.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpointInternal (400 samples, 0.34%)</title><rect x="10.3584%" y="885" width="0.3404%" height="15" fill="rgb(224,114,35)" fg:x="12173" fg:w="400"/><text x="10.6084%" y="895.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (396 samples, 0.34%)</title><rect x="10.3618%" y="869" width="0.3370%" height="15" fill="rgb(245,159,27)" fg:x="12177" fg:w="396"/><text x="10.6118%" y="879.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (377 samples, 0.32%)</title><rect x="10.3780%" y="853" width="0.3208%" height="15" fill="rgb(245,172,44)" fg:x="12196" fg:w="377"/><text x="10.6280%" y="863.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (377 samples, 0.32%)</title><rect x="10.3780%" y="837" width="0.3208%" height="15" fill="rgb(236,23,11)" fg:x="12196" fg:w="377"/><text x="10.6280%" y="847.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (370 samples, 0.31%)</title><rect x="10.3839%" y="821" width="0.3148%" height="15" fill="rgb(205,117,38)" fg:x="12203" fg:w="370"/><text x="10.6339%" y="831.50"></text></g><g><title>deno_core::ops_builtin_v8::op_run_microtasks::v8_fn_ptr (435 samples, 0.37%)</title><rect x="10.3303%" y="901" width="0.3702%" height="15" fill="rgb(237,72,25)" fg:x="12140" fg:w="435"/><text x="10.5803%" y="911.50"></text></g><g><title>cfree@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="10.7405%" y="869" width="0.0128%" height="15" fill="rgb(244,70,9)" fg:x="12622" fg:w="15"/><text x="10.9905%" y="879.50"></text></g><g><title>_int_free (13 samples, 0.01%)</title><rect x="10.7422%" y="853" width="0.0111%" height="15" fill="rgb(217,125,39)" fg:x="12624" fg:w="13"/><text x="10.9922%" y="863.50"></text></g><g><title>deno_core::external::ExternalPointer&lt;E&gt;::unsafely_take (19 samples, 0.02%)</title><rect x="10.7379%" y="885" width="0.0162%" height="15" fill="rgb(235,36,10)" fg:x="12619" fg:w="19"/><text x="10.9879%" y="895.50"></text></g><g><title>deno_core::runtime::ops::to_u32_option (12 samples, 0.01%)</title><rect x="10.7541%" y="885" width="0.0102%" height="15" fill="rgb(251,123,47)" fg:x="12638" fg:w="12"/><text x="11.0041%" y="895.50"></text></g><g><title>deno_http::http_next::is_request_compressible (45 samples, 0.04%)</title><rect x="10.7643%" y="885" width="0.0383%" height="15" fill="rgb(221,13,13)" fg:x="12650" fg:w="45"/><text x="11.0143%" y="895.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (37 samples, 0.03%)</title><rect x="10.7711%" y="869" width="0.0315%" height="15" fill="rgb(238,131,9)" fg:x="12658" fg:w="37"/><text x="11.0211%" y="879.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get_mut (22 samples, 0.02%)</title><rect x="10.8154%" y="869" width="0.0187%" height="15" fill="rgb(211,50,8)" fg:x="12710" fg:w="22"/><text x="11.0654%" y="879.50"></text></g><g><title>deno_http::http_next::modify_compressibility_from_response (57 samples, 0.05%)</title><rect x="10.8026%" y="885" width="0.0485%" height="15" fill="rgb(245,182,24)" fg:x="12695" fg:w="57"/><text x="11.0526%" y="895.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert2 (20 samples, 0.02%)</title><rect x="10.8341%" y="869" width="0.0170%" height="15" fill="rgb(242,14,37)" fg:x="12732" fg:w="20"/><text x="11.0841%" y="879.50"></text></g><g><title>deno_http::response_body::ResponseBytesInner::from_vec (40 samples, 0.03%)</title><rect x="10.8511%" y="885" width="0.0340%" height="15" fill="rgb(246,228,12)" fg:x="12752" fg:w="40"/><text x="11.1011%" y="895.50"></text></g><g><title>deno_http::service::HttpRecord::complete (46 samples, 0.04%)</title><rect x="10.8851%" y="885" width="0.0391%" height="15" fill="rgb(213,55,15)" fg:x="12792" fg:w="46"/><text x="11.1351%" y="895.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (45 samples, 0.04%)</title><rect x="10.8860%" y="869" width="0.0383%" height="15" fill="rgb(209,9,3)" fg:x="12793" fg:w="45"/><text x="11.1360%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (22 samples, 0.02%)</title><rect x="10.9243%" y="869" width="0.0187%" height="15" fill="rgb(230,59,30)" fg:x="12838" fg:w="22"/><text x="11.1743%" y="879.50"></text></g><g><title>deno_http::service::HttpRecord::set_response_body (35 samples, 0.03%)</title><rect x="10.9243%" y="885" width="0.0298%" height="15" fill="rgb(209,121,21)" fg:x="12838" fg:w="35"/><text x="11.1743%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;deno_http::response_body::ResponseBytesInner&gt; (13 samples, 0.01%)</title><rect x="10.9430%" y="869" width="0.0111%" height="15" fill="rgb(220,109,13)" fg:x="12860" fg:w="13"/><text x="11.1930%" y="879.50"></text></g><g><title>malloc_consolidate (22 samples, 0.02%)</title><rect x="11.1013%" y="837" width="0.0187%" height="15" fill="rgb(232,18,1)" fg:x="13046" fg:w="22"/><text x="11.3513%" y="847.50"></text></g><g><title>malloc (197 samples, 0.17%)</title><rect x="10.9617%" y="869" width="0.1676%" height="15" fill="rgb(215,41,42)" fg:x="12882" fg:w="197"/><text x="11.2117%" y="879.50"></text></g><g><title>_int_malloc (132 samples, 0.11%)</title><rect x="11.0170%" y="853" width="0.1123%" height="15" fill="rgb(224,123,36)" fg:x="12947" fg:w="132"/><text x="11.2670%" y="863.50"></text></g><g><title>v8::String::IsOneByte (28 samples, 0.02%)</title><rect x="11.1294%" y="869" width="0.0238%" height="15" fill="rgb(240,125,3)" fg:x="13079" fg:w="28"/><text x="11.3794%" y="879.50"></text></g><g><title>__hrtimer_run_queues (12 samples, 0.01%)</title><rect x="21.9337%" y="789" width="0.0102%" height="15" fill="rgb(205,98,50)" fg:x="25776" fg:w="12"/><text x="22.1837%" y="799.50"></text></g><g><title>__sysvec_apic_timer_interrupt (13 samples, 0.01%)</title><rect x="21.9337%" y="821" width="0.0111%" height="15" fill="rgb(205,185,37)" fg:x="25776" fg:w="13"/><text x="22.1837%" y="831.50"></text></g><g><title>hrtimer_interrupt (13 samples, 0.01%)</title><rect x="21.9337%" y="805" width="0.0111%" height="15" fill="rgb(238,207,15)" fg:x="25776" fg:w="13"/><text x="22.1837%" y="815.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (29 samples, 0.02%)</title><rect x="21.9328%" y="853" width="0.0247%" height="15" fill="rgb(213,199,42)" fg:x="25775" fg:w="29"/><text x="22.1828%" y="863.50"></text></g><g><title>sysvec_apic_timer_interrupt (28 samples, 0.02%)</title><rect x="21.9337%" y="837" width="0.0238%" height="15" fill="rgb(235,201,11)" fg:x="25776" fg:w="28"/><text x="22.1837%" y="847.50"></text></g><g><title>irqentry_exit (15 samples, 0.01%)</title><rect x="21.9447%" y="821" width="0.0128%" height="15" fill="rgb(207,46,11)" fg:x="25789" fg:w="15"/><text x="22.1947%" y="831.50"></text></g><g><title>irqentry_exit_to_user_mode (15 samples, 0.01%)</title><rect x="21.9447%" y="805" width="0.0128%" height="15" fill="rgb(241,35,35)" fg:x="25789" fg:w="15"/><text x="22.1947%" y="815.50"></text></g><g><title>exit_to_user_mode_prepare (14 samples, 0.01%)</title><rect x="21.9456%" y="789" width="0.0119%" height="15" fill="rgb(243,32,47)" fg:x="25790" fg:w="14"/><text x="22.1956%" y="799.50"></text></g><g><title>exit_to_user_mode_loop (14 samples, 0.01%)</title><rect x="21.9456%" y="773" width="0.0119%" height="15" fill="rgb(247,202,23)" fg:x="25790" fg:w="14"/><text x="22.1956%" y="783.50"></text></g><g><title>schedule (13 samples, 0.01%)</title><rect x="21.9464%" y="757" width="0.0111%" height="15" fill="rgb(219,102,11)" fg:x="25791" fg:w="13"/><text x="22.1964%" y="767.50"></text></g><g><title>__schedule (13 samples, 0.01%)</title><rect x="21.9464%" y="741" width="0.0111%" height="15" fill="rgb(243,110,44)" fg:x="25791" fg:w="13"/><text x="22.1964%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (13 samples, 0.01%)</title><rect x="21.9464%" y="725" width="0.0111%" height="15" fill="rgb(222,74,54)" fg:x="25791" fg:w="13"/><text x="22.1964%" y="735.50"></text></g><g><title>__perf_event_task_sched_in (13 samples, 0.01%)</title><rect x="21.9464%" y="709" width="0.0111%" height="15" fill="rgb(216,99,12)" fg:x="25791" fg:w="13"/><text x="22.1964%" y="719.50"></text></g><g><title>perf_ctx_enable (13 samples, 0.01%)</title><rect x="21.9464%" y="693" width="0.0111%" height="15" fill="rgb(226,22,26)" fg:x="25791" fg:w="13"/><text x="22.1964%" y="703.50"></text></g><g><title>x86_pmu_enable (13 samples, 0.01%)</title><rect x="21.9464%" y="677" width="0.0111%" height="15" fill="rgb(217,163,10)" fg:x="25791" fg:w="13"/><text x="22.1964%" y="687.50"></text></g><g><title>intel_pmu_enable_all (13 samples, 0.01%)</title><rect x="21.9464%" y="661" width="0.0111%" height="15" fill="rgb(213,25,53)" fg:x="25791" fg:w="13"/><text x="22.1964%" y="671.50"></text></g><g><title>native_write_msr (13 samples, 0.01%)</title><rect x="21.9464%" y="645" width="0.0111%" height="15" fill="rgb(252,105,26)" fg:x="25791" fg:w="13"/><text x="22.1964%" y="655.50"></text></g><g><title>v8::internal::AllocationCounter::InvokeAllocationObservers (13 samples, 0.01%)</title><rect x="22.0775%" y="789" width="0.0111%" height="15" fill="rgb(220,39,43)" fg:x="25945" fg:w="13"/><text x="22.3275%" y="799.50"></text></g><g><title>v8::internal::SemiSpace::AddRangeToActiveSystemPages (48 samples, 0.04%)</title><rect x="22.1064%" y="773" width="0.0408%" height="15" fill="rgb(229,68,48)" fg:x="25979" fg:w="48"/><text x="22.3564%" y="783.50"></text></g><g><title>heap::base::ActiveSystemPages::Add (33 samples, 0.03%)</title><rect x="22.1192%" y="757" width="0.0281%" height="15" fill="rgb(252,8,32)" fg:x="25994" fg:w="33"/><text x="22.3692%" y="767.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::Allocate (96 samples, 0.08%)</title><rect x="22.1472%" y="773" width="0.0817%" height="15" fill="rgb(223,20,43)" fg:x="26027" fg:w="96"/><text x="22.3972%" y="783.50"></text></g><g><title>v8::internal::MainAllocator::AllocateRawSlowUnaligned (215 samples, 0.18%)</title><rect x="22.0630%" y="805" width="0.1830%" height="15" fill="rgb(229,81,49)" fg:x="25928" fg:w="215"/><text x="22.3130%" y="815.50"></text></g><g><title>v8::internal::SemiSpaceNewSpaceAllocatorPolicy::EnsureAllocation (185 samples, 0.16%)</title><rect x="22.0885%" y="789" width="0.1574%" height="15" fill="rgb(236,28,36)" fg:x="25958" fg:w="185"/><text x="22.3385%" y="799.50"></text></g><g><title>v8::internal::SemiSpaceNewSpaceAllocatorPolicy::FreeLinearAllocationAreaUnsynchronized (18 samples, 0.02%)</title><rect x="22.2306%" y="773" width="0.0153%" height="15" fill="rgb(249,185,26)" fg:x="26125" fg:w="18"/><text x="22.4806%" y="783.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (262 samples, 0.22%)</title><rect x="22.0239%" y="821" width="0.2229%" height="15" fill="rgb(249,174,33)" fg:x="25882" fg:w="262"/><text x="22.2739%" y="831.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (298 samples, 0.25%)</title><rect x="21.9941%" y="837" width="0.2536%" height="15" fill="rgb(233,201,37)" fg:x="25847" fg:w="298"/><text x="22.2441%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (4,259 samples, 3.62%)</title><rect x="45.3803%" y="821" width="3.6241%" height="15" fill="rgb(221,78,26)" fg:x="53330" fg:w="4259"/><text x="45.6303%" y="831.50">__me..</text></g><g><title>__hrtimer_run_queues (23 samples, 0.02%)</title><rect x="49.0104%" y="757" width="0.0196%" height="15" fill="rgb(250,127,30)" fg:x="57596" fg:w="23"/><text x="49.2604%" y="767.50"></text></g><g><title>tick_sched_timer (18 samples, 0.02%)</title><rect x="49.0146%" y="741" width="0.0153%" height="15" fill="rgb(230,49,44)" fg:x="57601" fg:w="18"/><text x="49.2646%" y="751.50"></text></g><g><title>tick_sched_handle (16 samples, 0.01%)</title><rect x="49.0163%" y="725" width="0.0136%" height="15" fill="rgb(229,67,23)" fg:x="57603" fg:w="16"/><text x="49.2663%" y="735.50"></text></g><g><title>update_process_times (16 samples, 0.01%)</title><rect x="49.0163%" y="709" width="0.0136%" height="15" fill="rgb(249,83,47)" fg:x="57603" fg:w="16"/><text x="49.2663%" y="719.50"></text></g><g><title>scheduler_tick (15 samples, 0.01%)</title><rect x="49.0172%" y="693" width="0.0128%" height="15" fill="rgb(215,43,3)" fg:x="57604" fg:w="15"/><text x="49.2672%" y="703.50"></text></g><g><title>__sysvec_apic_timer_interrupt (30 samples, 0.03%)</title><rect x="49.0053%" y="789" width="0.0255%" height="15" fill="rgb(238,154,13)" fg:x="57590" fg:w="30"/><text x="49.2553%" y="799.50"></text></g><g><title>hrtimer_interrupt (28 samples, 0.02%)</title><rect x="49.0070%" y="773" width="0.0238%" height="15" fill="rgb(219,56,2)" fg:x="57592" fg:w="28"/><text x="49.2570%" y="783.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (36 samples, 0.03%)</title><rect x="49.0044%" y="821" width="0.0306%" height="15" fill="rgb(233,0,4)" fg:x="57589" fg:w="36"/><text x="49.2544%" y="831.50"></text></g><g><title>sysvec_apic_timer_interrupt (35 samples, 0.03%)</title><rect x="49.0053%" y="805" width="0.0298%" height="15" fill="rgb(235,30,7)" fg:x="57590" fg:w="35"/><text x="49.2553%" y="815.50"></text></g><g><title>memmove@plt (493 samples, 0.42%)</title><rect x="49.0393%" y="821" width="0.4195%" height="15" fill="rgb(250,79,13)" fg:x="57630" fg:w="493"/><text x="49.2893%" y="831.50"></text></g><g><title>v8::String::Utf8Length (45,016 samples, 38.31%)</title><rect x="11.1540%" y="869" width="38.3056%" height="15" fill="rgb(211,146,34)" fg:x="13108" fg:w="45016"/><text x="11.4040%" y="879.50">v8::String::Utf8Length</text></g><g><title>v8::internal::String::SlowFlatten (32,320 samples, 27.50%)</title><rect x="21.9575%" y="853" width="27.5022%" height="15" fill="rgb(228,22,38)" fg:x="25804" fg:w="32320"/><text x="22.2075%" y="863.50">v8::internal::String::SlowFlatten</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (31,979 samples, 27.21%)</title><rect x="22.2477%" y="837" width="27.2120%" height="15" fill="rgb(235,168,5)" fg:x="26145" fg:w="31979"/><text x="22.4977%" y="847.50">void v8::internal::String::WriteToFlat&lt;unsig..</text></g><g><title>__memmove_avx_unaligned_erms (2,961 samples, 2.52%)</title><rect x="49.4954%" y="821" width="2.5196%" height="15" fill="rgb(221,155,16)" fg:x="58166" fg:w="2961"/><text x="49.7454%" y="831.50">__..</text></g><g><title>v8::String::WriteOneByte (3,005 samples, 2.56%)</title><rect x="49.4597%" y="869" width="2.5571%" height="15" fill="rgb(215,215,53)" fg:x="58124" fg:w="3005"/><text x="49.7097%" y="879.50">v8..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (2,980 samples, 2.54%)</title><rect x="49.4809%" y="853" width="2.5358%" height="15" fill="rgb(223,4,10)" fg:x="58149" fg:w="2980"/><text x="49.7309%" y="863.50">vo..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (2,975 samples, 2.53%)</title><rect x="49.4852%" y="837" width="2.5315%" height="15" fill="rgb(234,103,6)" fg:x="58154" fg:w="2975"/><text x="49.7352%" y="847.50">vo..</text></g><g><title>v8::string::&lt;impl v8::data::String&gt;::to_rust_string_lossy (48,258 samples, 41.06%)</title><rect x="10.9549%" y="885" width="41.0643%" height="15" fill="rgb(227,97,0)" fg:x="12874" fg:w="48258"/><text x="11.2049%" y="895.50">v8::string::&lt;impl v8::data::String&gt;::to_rust_string_lossy</text></g><g><title>deno_http::http_next::op_http_set_response_body_text::v8_fn_ptr (48,558 samples, 41.32%)</title><rect x="10.7005%" y="901" width="41.3196%" height="15" fill="rgb(234,150,53)" fg:x="12575" fg:w="48558"/><text x="10.9505%" y="911.50">deno_http::http_next::op_http_set_response_body_text::v8_fn_ptr</text></g><g><title>cfree@GLIBC_2.2.5 (14 samples, 0.01%)</title><rect x="52.0907%" y="885" width="0.0119%" height="15" fill="rgb(228,201,54)" fg:x="61216" fg:w="14"/><text x="52.3407%" y="895.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append2 (34 samples, 0.03%)</title><rect x="52.1027%" y="885" width="0.0289%" height="15" fill="rgb(222,22,37)" fg:x="61230" fg:w="34"/><text x="52.3527%" y="895.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (25 samples, 0.02%)</title><rect x="52.1316%" y="885" width="0.0213%" height="15" fill="rgb(237,53,32)" fg:x="61264" fg:w="25"/><text x="52.3816%" y="895.50"></text></g><g><title>http::header::name::parse_hdr (25 samples, 0.02%)</title><rect x="52.1316%" y="869" width="0.0213%" height="15" fill="rgb(233,25,53)" fg:x="61264" fg:w="25"/><text x="52.3816%" y="879.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (12 samples, 0.01%)</title><rect x="52.1427%" y="853" width="0.0102%" height="15" fill="rgb(210,40,34)" fg:x="61277" fg:w="12"/><text x="52.3927%" y="863.50"></text></g><g><title>malloc (43 samples, 0.04%)</title><rect x="52.1529%" y="885" width="0.0366%" height="15" fill="rgb(241,220,44)" fg:x="61289" fg:w="43"/><text x="52.4029%" y="895.50"></text></g><g><title>v8::String::WriteOneByte (46 samples, 0.04%)</title><rect x="52.1963%" y="885" width="0.0391%" height="15" fill="rgb(235,28,35)" fg:x="61340" fg:w="46"/><text x="52.4463%" y="895.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (38 samples, 0.03%)</title><rect x="52.2031%" y="869" width="0.0323%" height="15" fill="rgb(210,56,17)" fg:x="61348" fg:w="38"/><text x="52.4531%" y="879.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (33 samples, 0.03%)</title><rect x="52.2073%" y="853" width="0.0281%" height="15" fill="rgb(224,130,29)" fg:x="61353" fg:w="33"/><text x="52.4573%" y="863.50"></text></g><g><title>deno_http::http_next::op_http_set_response_header::v8_fn_ptr (268 samples, 0.23%)</title><rect x="52.0201%" y="901" width="0.2281%" height="15" fill="rgb(235,212,8)" fg:x="61133" fg:w="268"/><text x="52.2701%" y="911.50"></text></g><g><title>v8__Value__IsString (13 samples, 0.01%)</title><rect x="52.2371%" y="885" width="0.0111%" height="15" fill="rgb(223,33,50)" fg:x="61388" fg:w="13"/><text x="52.4871%" y="895.50"></text></g><g><title>malloc (31 samples, 0.03%)</title><rect x="52.3733%" y="885" width="0.0264%" height="15" fill="rgb(219,149,13)" fg:x="61548" fg:w="31"/><text x="52.6233%" y="895.50"></text></g><g><title>v8::internal::Factory::AllocateRawWithAllocationSite (13 samples, 0.01%)</title><rect x="52.4073%" y="853" width="0.0111%" height="15" fill="rgb(250,156,29)" fg:x="61588" fg:w="13"/><text x="52.6573%" y="863.50"></text></g><g><title>v8::External::New (30 samples, 0.03%)</title><rect x="52.3996%" y="885" width="0.0255%" height="15" fill="rgb(216,193,19)" fg:x="61579" fg:w="30"/><text x="52.6496%" y="895.50"></text></g><g><title>v8::internal::Factory::NewExternal (27 samples, 0.02%)</title><rect x="52.4022%" y="869" width="0.0230%" height="15" fill="rgb(216,135,14)" fg:x="61582" fg:w="27"/><text x="52.6522%" y="879.50"></text></g><g><title>deno_http::http_next::op_http_try_wait::v8_fn_ptr (215 samples, 0.18%)</title><rect x="52.2482%" y="901" width="0.1830%" height="15" fill="rgb(241,47,5)" fg:x="61401" fg:w="215"/><text x="52.4982%" y="911.50"></text></g><g><title>deno_http::http_next::op_http_wait::call::_{{closure}} (43 samples, 0.04%)</title><rect x="52.4796%" y="885" width="0.0366%" height="15" fill="rgb(233,42,35)" fg:x="61673" fg:w="43"/><text x="52.7296%" y="895.50"></text></g><g><title>Builtins_CallApiCallbackOptimizedNoProfiling (49,667 samples, 42.26%)</title><rect x="10.2708%" y="917" width="42.2633%" height="15" fill="rgb(231,13,6)" fg:x="12070" fg:w="49667"/><text x="10.5208%" y="927.50">Builtins_CallApiCallbackOptimizedNoProfiling</text></g><g><title>deno_http::http_next::op_http_wait::v8_fn_ptr (121 samples, 0.10%)</title><rect x="52.4311%" y="901" width="0.1030%" height="15" fill="rgb(207,181,40)" fg:x="61616" fg:w="121"/><text x="52.6811%" y="911.50"></text></g><g><title>Builtins_EnqueueMicrotask (34 samples, 0.03%)</title><rect x="52.5392%" y="917" width="0.0289%" height="15" fill="rgb(254,173,49)" fg:x="61743" fg:w="34"/><text x="52.7892%" y="927.50"></text></g><g><title>Builtins_FastNewObject (21 samples, 0.02%)</title><rect x="52.5681%" y="917" width="0.0179%" height="15" fill="rgb(221,1,38)" fg:x="61777" fg:w="21"/><text x="52.8181%" y="927.50"></text></g><g><title>Builtins_ForInEnumerate (25 samples, 0.02%)</title><rect x="52.5860%" y="917" width="0.0213%" height="15" fill="rgb(206,124,46)" fg:x="61798" fg:w="25"/><text x="52.8360%" y="927.50"></text></g><g><title>Builtins_FulfillPromise (39 samples, 0.03%)</title><rect x="52.6073%" y="917" width="0.0332%" height="15" fill="rgb(249,21,11)" fg:x="61823" fg:w="39"/><text x="52.8573%" y="927.50"></text></g><g><title>Builtins_JSConstructStubGeneric (56 samples, 0.05%)</title><rect x="52.6549%" y="917" width="0.0477%" height="15" fill="rgb(222,201,40)" fg:x="61879" fg:w="56"/><text x="52.9049%" y="927.50"></text></g><g><title>Builtins_LoadIC (212 samples, 0.18%)</title><rect x="52.7085%" y="917" width="0.1804%" height="15" fill="rgb(235,61,29)" fg:x="61942" fg:w="212"/><text x="52.9585%" y="927.50"></text></g><g><title>Builtins_LoadICTrampoline (29 samples, 0.02%)</title><rect x="52.8889%" y="917" width="0.0247%" height="15" fill="rgb(219,207,3)" fg:x="62154" fg:w="29"/><text x="53.1389%" y="927.50"></text></g><g><title>Builtins_ObjectHasOwn (38 samples, 0.03%)</title><rect x="52.9144%" y="917" width="0.0323%" height="15" fill="rgb(222,56,46)" fg:x="62184" fg:w="38"/><text x="53.1644%" y="927.50"></text></g><g><title>Builtins_ObjectPrototypeHasOwnProperty (33 samples, 0.03%)</title><rect x="52.9187%" y="901" width="0.0281%" height="15" fill="rgb(239,76,54)" fg:x="62189" fg:w="33"/><text x="53.1687%" y="911.50"></text></g><g><title>Builtins_ObjectPrototypeIsPrototypeOf (20 samples, 0.02%)</title><rect x="52.9493%" y="917" width="0.0170%" height="15" fill="rgb(231,124,27)" fg:x="62225" fg:w="20"/><text x="53.1993%" y="927.50"></text></g><g><title>Builtins_GetProperty (12 samples, 0.01%)</title><rect x="52.9749%" y="901" width="0.0102%" height="15" fill="rgb(249,195,6)" fg:x="62255" fg:w="12"/><text x="53.2249%" y="911.50"></text></g><g><title>Builtins_PromiseCapabilityDefaultResolve (43 samples, 0.04%)</title><rect x="52.9689%" y="917" width="0.0366%" height="15" fill="rgb(237,174,47)" fg:x="62248" fg:w="43"/><text x="53.2189%" y="927.50"></text></g><g><title>Builtins_ResolvePromise (24 samples, 0.02%)</title><rect x="52.9851%" y="901" width="0.0204%" height="15" fill="rgb(206,201,31)" fg:x="62267" fg:w="24"/><text x="53.2351%" y="911.50"></text></g><g><title>Builtins_PromisePrototypeThen (35 samples, 0.03%)</title><rect x="53.0055%" y="917" width="0.0298%" height="15" fill="rgb(231,57,52)" fg:x="62291" fg:w="35"/><text x="53.2555%" y="927.50"></text></g><g><title>Builtins_RecordWriteSaveFP (17 samples, 0.01%)</title><rect x="53.0353%" y="917" width="0.0145%" height="15" fill="rgb(248,177,22)" fg:x="62326" fg:w="17"/><text x="53.2853%" y="927.50"></text></g><g><title>Builtins_ResolvePromise (12 samples, 0.01%)</title><rect x="53.0497%" y="917" width="0.0102%" height="15" fill="rgb(215,211,37)" fg:x="62343" fg:w="12"/><text x="53.2997%" y="927.50"></text></g><g><title>v8::internal::AllocationCounter::InvokeAllocationObservers (14 samples, 0.01%)</title><rect x="69.4719%" y="837" width="0.0119%" height="15" fill="rgb(241,128,51)" fg:x="81642" fg:w="14"/><text x="69.7219%" y="847.50"></text></g><g><title>v8::internal::SemiSpace::AddRangeToActiveSystemPages (38 samples, 0.03%)</title><rect x="69.5017%" y="821" width="0.0323%" height="15" fill="rgb(227,165,31)" fg:x="81677" fg:w="38"/><text x="69.7517%" y="831.50"></text></g><g><title>heap::base::ActiveSystemPages::Add (29 samples, 0.02%)</title><rect x="69.5094%" y="805" width="0.0247%" height="15" fill="rgb(228,167,24)" fg:x="81686" fg:w="29"/><text x="69.7594%" y="815.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::Allocate (163 samples, 0.14%)</title><rect x="69.5340%" y="821" width="0.1387%" height="15" fill="rgb(228,143,12)" fg:x="81715" fg:w="163"/><text x="69.7840%" y="831.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::Free (14 samples, 0.01%)</title><rect x="69.6727%" y="821" width="0.0119%" height="15" fill="rgb(249,149,8)" fg:x="81878" fg:w="14"/><text x="69.9227%" y="831.50"></text></g><g><title>pthread_rwlock_unlock@@GLIBC_2.34 (15 samples, 0.01%)</title><rect x="69.6915%" y="805" width="0.0128%" height="15" fill="rgb(243,35,44)" fg:x="81900" fg:w="15"/><text x="69.9415%" y="815.50"></text></g><g><title>pthread_rwlock_wrlock@@GLIBC_2.34 (20 samples, 0.02%)</title><rect x="69.7068%" y="805" width="0.0170%" height="15" fill="rgb(246,89,9)" fg:x="81918" fg:w="20"/><text x="69.9568%" y="815.50"></text></g><g><title>Builtins_WasmCEntry (397 samples, 0.34%)</title><rect x="69.3970%" y="901" width="0.3378%" height="15" fill="rgb(233,213,13)" fg:x="81554" fg:w="397"/><text x="69.6470%" y="911.50"></text></g><g><title>v8::internal::Runtime_AllocateInYoungGeneration (392 samples, 0.33%)</title><rect x="69.4013%" y="885" width="0.3336%" height="15" fill="rgb(233,141,41)" fg:x="81559" fg:w="392"/><text x="69.6513%" y="895.50"></text></g><g><title>v8::internal::Factory::NewFillerObject (368 samples, 0.31%)</title><rect x="69.4217%" y="869" width="0.3131%" height="15" fill="rgb(239,167,4)" fg:x="81583" fg:w="368"/><text x="69.6717%" y="879.50"></text></g><g><title>v8::internal::MainAllocator::AllocateRawSlowUnaligned (335 samples, 0.29%)</title><rect x="69.4498%" y="853" width="0.2851%" height="15" fill="rgb(209,217,16)" fg:x="81616" fg:w="335"/><text x="69.6998%" y="863.50"></text></g><g><title>v8::internal::SemiSpaceNewSpaceAllocatorPolicy::EnsureAllocation (295 samples, 0.25%)</title><rect x="69.4838%" y="837" width="0.2510%" height="15" fill="rgb(219,88,35)" fg:x="81656" fg:w="295"/><text x="69.7338%" y="847.50"></text></g><g><title>v8::internal::SemiSpaceNewSpaceAllocatorPolicy::FreeLinearAllocationAreaUnsynchronized (59 samples, 0.05%)</title><rect x="69.6846%" y="821" width="0.0502%" height="15" fill="rgb(220,193,23)" fg:x="81892" fg:w="59"/><text x="69.9346%" y="831.50"></text></g><g><title>perf_event_task_tick (12 samples, 0.01%)</title><rect x="69.7502%" y="757" width="0.0102%" height="15" fill="rgb(230,90,52)" fg:x="81969" fg:w="12"/><text x="70.0002%" y="767.50"></text></g><g><title>perf_adjust_freq_unthr_context (12 samples, 0.01%)</title><rect x="69.7502%" y="741" width="0.0102%" height="15" fill="rgb(252,106,19)" fg:x="81969" fg:w="12"/><text x="70.0002%" y="751.50"></text></g><g><title>__hrtimer_run_queues (35 samples, 0.03%)</title><rect x="69.7374%" y="837" width="0.0298%" height="15" fill="rgb(206,74,20)" fg:x="81954" fg:w="35"/><text x="69.9874%" y="847.50"></text></g><g><title>tick_sched_timer (30 samples, 0.03%)</title><rect x="69.7417%" y="821" width="0.0255%" height="15" fill="rgb(230,138,44)" fg:x="81959" fg:w="30"/><text x="69.9917%" y="831.50"></text></g><g><title>tick_sched_handle (28 samples, 0.02%)</title><rect x="69.7434%" y="805" width="0.0238%" height="15" fill="rgb(235,182,43)" fg:x="81961" fg:w="28"/><text x="69.9934%" y="815.50"></text></g><g><title>update_process_times (28 samples, 0.02%)</title><rect x="69.7434%" y="789" width="0.0238%" height="15" fill="rgb(242,16,51)" fg:x="81961" fg:w="28"/><text x="69.9934%" y="799.50"></text></g><g><title>scheduler_tick (22 samples, 0.02%)</title><rect x="69.7485%" y="773" width="0.0187%" height="15" fill="rgb(248,9,4)" fg:x="81967" fg:w="22"/><text x="69.9985%" y="783.50"></text></g><g><title>__sysvec_apic_timer_interrupt (37 samples, 0.03%)</title><rect x="69.7374%" y="869" width="0.0315%" height="15" fill="rgb(210,31,22)" fg:x="81954" fg:w="37"/><text x="69.9874%" y="879.50"></text></g><g><title>hrtimer_interrupt (37 samples, 0.03%)</title><rect x="69.7374%" y="853" width="0.0315%" height="15" fill="rgb(239,54,39)" fg:x="81954" fg:w="37"/><text x="69.9874%" y="863.50"></text></g><g><title>Builtins_StringAdd_CheckNone (19,641 samples, 16.71%)</title><rect x="53.0625%" y="917" width="16.7132%" height="15" fill="rgb(230,99,41)" fg:x="62358" fg:w="19641"/><text x="53.3125%" y="927.50">Builtins_StringAdd_CheckNo..</text></g><g><title>asm_sysvec_apic_timer_interrupt (46 samples, 0.04%)</title><rect x="69.7366%" y="901" width="0.0391%" height="15" fill="rgb(253,106,12)" fg:x="81953" fg:w="46"/><text x="69.9866%" y="911.50"></text></g><g><title>sysvec_apic_timer_interrupt (46 samples, 0.04%)</title><rect x="69.7366%" y="885" width="0.0391%" height="15" fill="rgb(213,46,41)" fg:x="81953" fg:w="46"/><text x="69.9866%" y="895.50"></text></g><g><title>Builtins_StringEqual (13 samples, 0.01%)</title><rect x="69.7757%" y="917" width="0.0111%" height="15" fill="rgb(215,133,35)" fg:x="81999" fg:w="13"/><text x="70.0257%" y="927.50"></text></g><g><title>Builtins_StringToLowerCaseIntl (65 samples, 0.06%)</title><rect x="69.7876%" y="917" width="0.0553%" height="15" fill="rgb(213,28,5)" fg:x="82013" fg:w="65"/><text x="70.0376%" y="927.50"></text></g><g><title>Builtins_WasmAllocateInYoungGeneration (18 samples, 0.02%)</title><rect x="69.8455%" y="917" width="0.0153%" height="15" fill="rgb(215,77,49)" fg:x="82081" fg:w="18"/><text x="70.0955%" y="927.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (18 samples, 0.02%)</title><rect x="69.8633%" y="917" width="0.0153%" height="15" fill="rgb(248,100,22)" fg:x="82102" fg:w="18"/><text x="70.1133%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (18 samples, 0.02%)</title><rect x="69.8633%" y="901" width="0.0153%" height="15" fill="rgb(208,67,9)" fg:x="82102" fg:w="18"/><text x="70.1133%" y="911.50"></text></g><g><title>construct_stub_create_deopt_addr (81 samples, 0.07%)</title><rect x="69.8787%" y="917" width="0.0689%" height="15" fill="rgb(219,133,21)" fg:x="82120" fg:w="81"/><text x="70.1287%" y="927.50"></text></g><g><title>[perf-1077835.map] (79,974 samples, 68.05%)</title><rect x="1.9103%" y="933" width="68.0526%" height="15" fill="rgb(246,46,29)" fg:x="2245" fg:w="79974"/><text x="2.1603%" y="943.50">[perf-1077835.map]</text></g><g><title>&lt;deno_http::service::HttpRecordResponse as http_body::Body&gt;::poll_frame (71 samples, 0.06%)</title><rect x="70.4930%" y="869" width="0.0604%" height="15" fill="rgb(246,185,52)" fg:x="82842" fg:w="71"/><text x="70.7430%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (33 samples, 0.03%)</title><rect x="70.5254%" y="853" width="0.0281%" height="15" fill="rgb(252,136,11)" fg:x="82880" fg:w="33"/><text x="70.7754%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (55 samples, 0.05%)</title><rect x="70.6224%" y="853" width="0.0468%" height="15" fill="rgb(219,138,53)" fg:x="82994" fg:w="55"/><text x="70.8724%" y="863.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (154 samples, 0.13%)</title><rect x="70.5534%" y="869" width="0.1310%" height="15" fill="rgb(211,51,23)" fg:x="82913" fg:w="154"/><text x="70.8034%" y="879.50"></text></g><g><title>[[vdso]] (50 samples, 0.04%)</title><rect x="70.7313%" y="821" width="0.0425%" height="15" fill="rgb(247,221,28)" fg:x="83122" fg:w="50"/><text x="70.9813%" y="831.50"></text></g><g><title>std::sys::unix::time::Timespec::now (111 samples, 0.09%)</title><rect x="70.6887%" y="853" width="0.0945%" height="15" fill="rgb(251,222,45)" fg:x="83072" fg:w="111"/><text x="70.9387%" y="863.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (111 samples, 0.09%)</title><rect x="70.6887%" y="837" width="0.0945%" height="15" fill="rgb(217,162,53)" fg:x="83072" fg:w="111"/><text x="70.9387%" y="847.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (122 samples, 0.10%)</title><rect x="70.6845%" y="869" width="0.1038%" height="15" fill="rgb(229,93,14)" fg:x="83067" fg:w="122"/><text x="70.9345%" y="879.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (157 samples, 0.13%)</title><rect x="70.8564%" y="837" width="0.1336%" height="15" fill="rgb(209,67,49)" fg:x="83269" fg:w="157"/><text x="71.1064%" y="847.50"></text></g><g><title>cfree@GLIBC_2.2.5 (130 samples, 0.11%)</title><rect x="70.8794%" y="821" width="0.1106%" height="15" fill="rgb(213,87,29)" fg:x="83296" fg:w="130"/><text x="71.1294%" y="831.50"></text></g><g><title>_int_free (107 samples, 0.09%)</title><rect x="70.8989%" y="805" width="0.0910%" height="15" fill="rgb(205,151,52)" fg:x="83319" fg:w="107"/><text x="71.1489%" y="815.50"></text></g><g><title>unlink_chunk.constprop.0 (14 samples, 0.01%)</title><rect x="70.9781%" y="789" width="0.0119%" height="15" fill="rgb(253,215,39)" fg:x="83412" fg:w="14"/><text x="71.2281%" y="799.50"></text></g><g><title>_ZN4core3ptr96drop_in_place$LT$$u5b$http..header..map..Bucket$LT$http..header..value..HeaderValue$GT$$u5d$$GT$17h03254313ff94b202E.llvm.14137614649970884473 (189 samples, 0.16%)</title><rect x="70.8377%" y="853" width="0.1608%" height="15" fill="rgb(221,220,41)" fg:x="83247" fg:w="189"/><text x="71.0877%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (29 samples, 0.02%)</title><rect x="70.9985%" y="853" width="0.0247%" height="15" fill="rgb(218,133,21)" fg:x="83436" fg:w="29"/><text x="71.2485%" y="863.50"></text></g><g><title>_ZN9deno_http7service10HttpRecord7recycle17h22f3720de05f77a7E.llvm.14137614649970884473 (283 samples, 0.24%)</title><rect x="70.7960%" y="869" width="0.2408%" height="15" fill="rgb(221,193,43)" fg:x="83198" fg:w="283"/><text x="71.0460%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;deno_http::response_body::ResponseBytesInner&gt; (15 samples, 0.01%)</title><rect x="71.0240%" y="853" width="0.0128%" height="15" fill="rgb(240,128,52)" fg:x="83466" fg:w="15"/><text x="71.2740%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (106 samples, 0.09%)</title><rect x="71.0368%" y="869" width="0.0902%" height="15" fill="rgb(253,114,12)" fg:x="83481" fg:w="106"/><text x="71.2868%" y="879.50"></text></g><g><title>deno_http::response_body::ResponseBytesInner::size_hint (30 samples, 0.03%)</title><rect x="71.1278%" y="869" width="0.0255%" height="15" fill="rgb(215,223,47)" fg:x="83588" fg:w="30"/><text x="71.3778%" y="879.50"></text></g><g><title>&lt;deno_http::service::HttpRecord::response_ready::HttpRecordReady as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="71.2767%" y="853" width="0.0119%" height="15" fill="rgb(248,225,23)" fg:x="83763" fg:w="14"/><text x="71.5267%" y="863.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="71.2887%" y="853" width="0.0204%" height="15" fill="rgb(250,108,0)" fg:x="83777" fg:w="24"/><text x="71.5387%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (44 samples, 0.04%)</title><rect x="71.3542%" y="837" width="0.0374%" height="15" fill="rgb(228,208,7)" fg:x="83854" fg:w="44"/><text x="71.6042%" y="847.50"></text></g><g><title>deno_http::service::HttpRecord::new (78 samples, 0.07%)</title><rect x="71.3286%" y="853" width="0.0664%" height="15" fill="rgb(244,45,10)" fg:x="83824" fg:w="78"/><text x="71.5786%" y="863.50"></text></g><g><title>futures_task::waker::wake_arc_raw (22 samples, 0.02%)</title><rect x="71.3950%" y="853" width="0.0187%" height="15" fill="rgb(207,125,25)" fg:x="83902" fg:w="22"/><text x="71.6450%" y="863.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (20 samples, 0.02%)</title><rect x="71.3967%" y="837" width="0.0170%" height="15" fill="rgb(210,195,18)" fg:x="83904" fg:w="20"/><text x="71.6467%" y="847.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (12 samples, 0.01%)</title><rect x="71.4035%" y="821" width="0.0102%" height="15" fill="rgb(249,80,12)" fg:x="83912" fg:w="12"/><text x="71.6535%" y="831.50"></text></g><g><title>deno_http::service::handle_request::_{{closure}} (319 samples, 0.27%)</title><rect x="71.1534%" y="869" width="0.2714%" height="15" fill="rgb(221,65,9)" fg:x="83618" fg:w="319"/><text x="71.4034%" y="879.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (13 samples, 0.01%)</title><rect x="71.4137%" y="853" width="0.0111%" height="15" fill="rgb(235,49,36)" fg:x="83924" fg:w="13"/><text x="71.6637%" y="863.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (18 samples, 0.02%)</title><rect x="71.4248%" y="869" width="0.0153%" height="15" fill="rgb(225,32,20)" fg:x="83937" fg:w="18"/><text x="71.6748%" y="879.50"></text></g><g><title>__GI___pthread_disable_asynccancel (18 samples, 0.02%)</title><rect x="71.5320%" y="805" width="0.0153%" height="15" fill="rgb(215,141,46)" fg:x="84063" fg:w="18"/><text x="71.7820%" y="815.50"></text></g><g><title>__GI___pthread_enable_asynccancel (19 samples, 0.02%)</title><rect x="71.5473%" y="805" width="0.0162%" height="15" fill="rgb(250,160,47)" fg:x="84081" fg:w="19"/><text x="71.7973%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (60 samples, 0.05%)</title><rect x="71.5720%" y="805" width="0.0511%" height="15" fill="rgb(216,222,40)" fg:x="84110" fg:w="60"/><text x="71.8220%" y="815.50"></text></g><g><title>__x64_sys_sendto (13 samples, 0.01%)</title><rect x="71.7175%" y="789" width="0.0111%" height="15" fill="rgb(234,217,39)" fg:x="84281" fg:w="13"/><text x="71.9675%" y="799.50"></text></g><g><title>apparmor_socket_sendmsg (22 samples, 0.02%)</title><rect x="71.8409%" y="741" width="0.0187%" height="15" fill="rgb(207,178,40)" fg:x="84426" fg:w="22"/><text x="72.0909%" y="751.50"></text></g><g><title>_raw_spin_lock_bh (45 samples, 0.04%)</title><rect x="71.9209%" y="709" width="0.0383%" height="15" fill="rgb(221,136,13)" fg:x="84520" fg:w="45"/><text x="72.1709%" y="719.50"></text></g><g><title>release_sock (28 samples, 0.02%)</title><rect x="71.9660%" y="709" width="0.0238%" height="15" fill="rgb(249,199,10)" fg:x="84573" fg:w="28"/><text x="72.2160%" y="719.50"></text></g><g><title>tcp_push (23 samples, 0.02%)</title><rect x="71.9992%" y="709" width="0.0196%" height="15" fill="rgb(249,222,13)" fg:x="84612" fg:w="23"/><text x="72.2492%" y="719.50"></text></g><g><title>tcp_push_one (27 samples, 0.02%)</title><rect x="72.0188%" y="709" width="0.0230%" height="15" fill="rgb(244,185,38)" fg:x="84635" fg:w="27"/><text x="72.2688%" y="719.50"></text></g><g><title>tcp_rate_check_app_limited (21 samples, 0.02%)</title><rect x="72.0417%" y="709" width="0.0179%" height="15" fill="rgb(236,202,9)" fg:x="84662" fg:w="21"/><text x="72.2917%" y="719.50"></text></g><g><title>sk_forced_mem_schedule (13 samples, 0.01%)</title><rect x="72.4034%" y="693" width="0.0111%" height="15" fill="rgb(250,229,37)" fg:x="85087" fg:w="13"/><text x="72.6534%" y="703.50"></text></g><g><title>__next_zones_zonelist (50 samples, 0.04%)</title><rect x="72.5761%" y="629" width="0.0425%" height="15" fill="rgb(206,174,23)" fg:x="85290" fg:w="50"/><text x="72.8261%" y="639.50"></text></g><g><title>__zone_watermark_ok (36 samples, 0.03%)</title><rect x="72.6723%" y="613" width="0.0306%" height="15" fill="rgb(211,33,43)" fg:x="85403" fg:w="36"/><text x="72.9223%" y="623.50"></text></g><g><title>_raw_spin_trylock (41 samples, 0.03%)</title><rect x="72.7029%" y="613" width="0.0349%" height="15" fill="rgb(245,58,50)" fg:x="85439" fg:w="41"/><text x="72.9529%" y="623.50"></text></g><g><title>clear_page_erms (3,182 samples, 2.71%)</title><rect x="72.7403%" y="613" width="2.7077%" height="15" fill="rgb(244,68,36)" fg:x="85483" fg:w="3182"/><text x="72.9903%" y="623.50">cl..</text></g><g><title>post_alloc_hook (95 samples, 0.08%)</title><rect x="75.4480%" y="613" width="0.0808%" height="15" fill="rgb(232,229,15)" fg:x="88665" fg:w="95"/><text x="75.6980%" y="623.50"></text></g><g><title>prep_compound_page (87 samples, 0.07%)</title><rect x="75.5289%" y="613" width="0.0740%" height="15" fill="rgb(254,30,23)" fg:x="88760" fg:w="87"/><text x="75.7789%" y="623.50"></text></g><g><title>__rmqueue_pcplist (98 samples, 0.08%)</title><rect x="75.6616%" y="597" width="0.0834%" height="15" fill="rgb(235,160,14)" fg:x="88916" fg:w="98"/><text x="75.9116%" y="607.50"></text></g><g><title>get_page_from_freelist (3,676 samples, 3.13%)</title><rect x="72.6195%" y="629" width="3.1280%" height="15" fill="rgb(212,155,44)" fg:x="85341" fg:w="3676"/><text x="72.8695%" y="639.50">get..</text></g><g><title>rmqueue (170 samples, 0.14%)</title><rect x="75.6029%" y="613" width="0.1447%" height="15" fill="rgb(226,2,50)" fg:x="88847" fg:w="170"/><text x="75.8529%" y="623.50"></text></g><g><title>__alloc_pages (3,818 samples, 3.25%)</title><rect x="72.5131%" y="645" width="3.2489%" height="15" fill="rgb(234,177,6)" fg:x="85216" fg:w="3818"/><text x="72.7631%" y="655.50">__a..</text></g><g><title>__next_zones_zonelist (24 samples, 0.02%)</title><rect x="75.7620%" y="645" width="0.0204%" height="15" fill="rgb(217,24,9)" fg:x="89034" fg:w="24"/><text x="76.0120%" y="655.50"></text></g><g><title>alloc_pages (3,907 samples, 3.32%)</title><rect x="72.4825%" y="661" width="3.3246%" height="15" fill="rgb(220,13,46)" fg:x="85180" fg:w="3907"/><text x="72.7325%" y="671.50">all..</text></g><g><title>policy_node (15 samples, 0.01%)</title><rect x="75.8071%" y="661" width="0.0128%" height="15" fill="rgb(239,221,27)" fg:x="89087" fg:w="15"/><text x="76.0571%" y="671.50"></text></g><g><title>sk_page_frag_refill (4,005 samples, 3.41%)</title><rect x="72.4144%" y="693" width="3.4080%" height="15" fill="rgb(222,198,25)" fg:x="85100" fg:w="4005"/><text x="72.6644%" y="703.50">sk_..</text></g><g><title>skb_page_frag_refill (3,999 samples, 3.40%)</title><rect x="72.4195%" y="677" width="3.4029%" height="15" fill="rgb(211,99,13)" fg:x="85106" fg:w="3999"/><text x="72.6695%" y="687.50">skb..</text></g><g><title>__virt_addr_valid (18 samples, 0.02%)</title><rect x="75.8871%" y="645" width="0.0153%" height="15" fill="rgb(232,111,31)" fg:x="89181" fg:w="18"/><text x="76.1371%" y="655.50"></text></g><g><title>__virt_addr_valid (119 samples, 0.10%)</title><rect x="75.9313%" y="629" width="0.1013%" height="15" fill="rgb(245,82,37)" fg:x="89233" fg:w="119"/><text x="76.1813%" y="639.50"></text></g><g><title>check_heap_object (156 samples, 0.13%)</title><rect x="75.9024%" y="645" width="0.1327%" height="15" fill="rgb(227,149,46)" fg:x="89199" fg:w="156"/><text x="76.1524%" y="655.50"></text></g><g><title>__check_object_size.part.0 (217 samples, 0.18%)</title><rect x="75.8582%" y="661" width="0.1847%" height="15" fill="rgb(218,36,50)" fg:x="89147" fg:w="217"/><text x="76.1082%" y="671.50"></text></g><g><title>__check_object_size (247 samples, 0.21%)</title><rect x="75.8582%" y="677" width="0.2102%" height="15" fill="rgb(226,80,48)" fg:x="89147" fg:w="247"/><text x="76.1082%" y="687.50"></text></g><g><title>check_stack_object (20 samples, 0.02%)</title><rect x="76.0513%" y="661" width="0.0170%" height="15" fill="rgb(238,224,15)" fg:x="89374" fg:w="20"/><text x="76.3013%" y="671.50"></text></g><g><title>copyin (40 samples, 0.03%)</title><rect x="76.1228%" y="661" width="0.0340%" height="15" fill="rgb(241,136,10)" fg:x="89458" fg:w="40"/><text x="76.3728%" y="671.50"></text></g><g><title>_copy_from_iter (3,977 samples, 3.38%)</title><rect x="76.0683%" y="677" width="3.3842%" height="15" fill="rgb(208,32,45)" fg:x="89394" fg:w="3977"/><text x="76.3183%" y="687.50">_co..</text></g><g><title>rep_movs_alternative (3,872 samples, 3.29%)</title><rect x="76.1577%" y="661" width="3.2948%" height="15" fill="rgb(207,135,9)" fg:x="89499" fg:w="3872"/><text x="76.4077%" y="671.50">rep..</text></g><g><title>skb_do_copy_data_nocache (4,288 samples, 3.65%)</title><rect x="75.8224%" y="693" width="3.6488%" height="15" fill="rgb(206,86,44)" fg:x="89105" fg:w="4288"/><text x="76.0724%" y="703.50">skb_..</text></g><g><title>copyin (22 samples, 0.02%)</title><rect x="79.4525%" y="677" width="0.0187%" height="15" fill="rgb(245,177,15)" fg:x="93371" fg:w="22"/><text x="79.7025%" y="687.50"></text></g><g><title>__tcp_select_window (14 samples, 0.01%)</title><rect x="79.6516%" y="629" width="0.0119%" height="15" fill="rgb(206,64,50)" fg:x="93605" fg:w="14"/><text x="79.9016%" y="639.50"></text></g><g><title>__sk_dst_check (28 samples, 0.02%)</title><rect x="79.6933%" y="597" width="0.0238%" height="15" fill="rgb(234,36,40)" fg:x="93654" fg:w="28"/><text x="79.9433%" y="607.50"></text></g><g><title>ip_send_check (13 samples, 0.01%)</title><rect x="79.7435%" y="565" width="0.0111%" height="15" fill="rgb(213,64,8)" fg:x="93713" fg:w="13"/><text x="79.9935%" y="575.50"></text></g><g><title>ipv4_conntrack_defrag (21 samples, 0.02%)</title><rect x="79.7546%" y="565" width="0.0179%" height="15" fill="rgb(210,75,36)" fg:x="93726" fg:w="21"/><text x="80.0046%" y="575.50"></text></g><g><title>ipv4_conntrack_local (19 samples, 0.02%)</title><rect x="79.7725%" y="565" width="0.0162%" height="15" fill="rgb(229,88,21)" fg:x="93747" fg:w="19"/><text x="80.0225%" y="575.50"></text></g><g><title>nf_conntrack_tcp_packet (123 samples, 0.10%)</title><rect x="79.8627%" y="501" width="0.1047%" height="15" fill="rgb(252,204,47)" fg:x="93853" fg:w="123"/><text x="80.1127%" y="511.50"></text></g><g><title>tcp_in_window (50 samples, 0.04%)</title><rect x="79.9248%" y="485" width="0.0425%" height="15" fill="rgb(208,77,27)" fg:x="93926" fg:w="50"/><text x="80.1748%" y="495.50"></text></g><g><title>nf_conntrack_handle_packet (148 samples, 0.13%)</title><rect x="79.8448%" y="517" width="0.1259%" height="15" fill="rgb(221,76,26)" fg:x="93832" fg:w="148"/><text x="80.0948%" y="527.50"></text></g><g><title>__nf_conntrack_find_get (54 samples, 0.05%)</title><rect x="79.9954%" y="501" width="0.0460%" height="15" fill="rgb(225,139,18)" fg:x="94009" fg:w="54"/><text x="80.2454%" y="511.50"></text></g><g><title>hash_conntrack_raw (36 samples, 0.03%)</title><rect x="80.0507%" y="501" width="0.0306%" height="15" fill="rgb(230,137,11)" fg:x="94074" fg:w="36"/><text x="80.3007%" y="511.50"></text></g><g><title>__siphash_unaligned (25 samples, 0.02%)</title><rect x="80.0601%" y="485" width="0.0213%" height="15" fill="rgb(212,28,1)" fg:x="94085" fg:w="25"/><text x="80.3101%" y="495.50"></text></g><g><title>nf_conntrack_in (324 samples, 0.28%)</title><rect x="79.8184%" y="533" width="0.2757%" height="15" fill="rgb(248,164,17)" fg:x="93801" fg:w="324"/><text x="80.0684%" y="543.50"></text></g><g><title>resolve_normal_ct (139 samples, 0.12%)</title><rect x="79.9758%" y="517" width="0.1183%" height="15" fill="rgb(222,171,42)" fg:x="93986" fg:w="139"/><text x="80.2258%" y="527.50"></text></g><g><title>nf_ct_get_tuple (15 samples, 0.01%)</title><rect x="80.0813%" y="501" width="0.0128%" height="15" fill="rgb(243,84,45)" fg:x="94110" fg:w="15"/><text x="80.3313%" y="511.50"></text></g><g><title>ipv4_conntrack_local (331 samples, 0.28%)</title><rect x="79.8133%" y="549" width="0.2817%" height="15" fill="rgb(252,49,23)" fg:x="93795" fg:w="331"/><text x="80.0633%" y="559.50"></text></g><g><title>nf_hook_slow (384 samples, 0.33%)</title><rect x="79.7886%" y="565" width="0.3268%" height="15" fill="rgb(215,19,7)" fg:x="93766" fg:w="384"/><text x="80.0386%" y="575.50"></text></g><g><title>nf_nat_ipv4_local_fn (17 samples, 0.01%)</title><rect x="80.1009%" y="549" width="0.0145%" height="15" fill="rgb(238,81,41)" fg:x="94133" fg:w="17"/><text x="80.3509%" y="559.50"></text></g><g><title>__ip_local_out (462 samples, 0.39%)</title><rect x="79.7316%" y="581" width="0.3931%" height="15" fill="rgb(210,199,37)" fg:x="93699" fg:w="462"/><text x="79.9816%" y="591.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (53 samples, 0.05%)</title><rect x="80.4498%" y="357" width="0.0451%" height="15" fill="rgb(244,192,49)" fg:x="94543" fg:w="53"/><text x="80.6998%" y="367.50"></text></g><g><title>raw_local_deliver (15 samples, 0.01%)</title><rect x="80.5996%" y="293" width="0.0128%" height="15" fill="rgb(226,211,11)" fg:x="94719" fg:w="15"/><text x="80.8496%" y="303.50"></text></g><g><title>__inet_lookup_established (40 samples, 0.03%)</title><rect x="80.6685%" y="277" width="0.0340%" height="15" fill="rgb(236,162,54)" fg:x="94800" fg:w="40"/><text x="80.9185%" y="287.50"></text></g><g><title>tcp_filter (39 samples, 0.03%)</title><rect x="80.7323%" y="277" width="0.0332%" height="15" fill="rgb(220,229,9)" fg:x="94875" fg:w="39"/><text x="80.9823%" y="287.50"></text></g><g><title>sk_filter_trim_cap (32 samples, 0.03%)</title><rect x="80.7383%" y="261" width="0.0272%" height="15" fill="rgb(250,87,22)" fg:x="94882" fg:w="32"/><text x="80.9883%" y="271.50"></text></g><g><title>security_sock_rcv_skb (14 samples, 0.01%)</title><rect x="80.7536%" y="245" width="0.0119%" height="15" fill="rgb(239,43,17)" fg:x="94900" fg:w="14"/><text x="81.0036%" y="255.50"></text></g><g><title>tcp_check_space (15 samples, 0.01%)</title><rect x="80.7910%" y="261" width="0.0128%" height="15" fill="rgb(231,177,25)" fg:x="94944" fg:w="15"/><text x="81.0410%" y="271.50"></text></g><g><title>__tcp_ack_snd_check (53 samples, 0.05%)</title><rect x="80.8319%" y="245" width="0.0451%" height="15" fill="rgb(219,179,1)" fg:x="94992" fg:w="53"/><text x="81.0819%" y="255.50"></text></g><g><title>tcp_send_delayed_ack (20 samples, 0.02%)</title><rect x="80.8600%" y="229" width="0.0170%" height="15" fill="rgb(238,219,53)" fg:x="95025" fg:w="20"/><text x="81.1100%" y="239.50"></text></g><g><title>tcp_ack (60 samples, 0.05%)</title><rect x="80.8855%" y="245" width="0.0511%" height="15" fill="rgb(232,167,36)" fg:x="95055" fg:w="60"/><text x="81.1355%" y="255.50"></text></g><g><title>_raw_read_lock_irqsave (25 samples, 0.02%)</title><rect x="81.0412%" y="133" width="0.0213%" height="15" fill="rgb(244,19,51)" fg:x="95238" fg:w="25"/><text x="81.2912%" y="143.50"></text></g><g><title>__raw_read_lock_irqsave (24 samples, 0.02%)</title><rect x="81.0421%" y="117" width="0.0204%" height="15" fill="rgb(224,6,22)" fg:x="95239" fg:w="24"/><text x="81.2921%" y="127.50"></text></g><g><title>__wake_up_common (69 samples, 0.06%)</title><rect x="81.0123%" y="165" width="0.0587%" height="15" fill="rgb(224,145,5)" fg:x="95204" fg:w="69"/><text x="81.2623%" y="175.50"></text></g><g><title>ep_poll_callback (59 samples, 0.05%)</title><rect x="81.0208%" y="149" width="0.0502%" height="15" fill="rgb(234,130,49)" fg:x="95214" fg:w="59"/><text x="81.2708%" y="159.50"></text></g><g><title>_raw_spin_lock_irqsave (14 samples, 0.01%)</title><rect x="81.0710%" y="165" width="0.0119%" height="15" fill="rgb(254,6,2)" fg:x="95273" fg:w="14"/><text x="81.3210%" y="175.50"></text></g><g><title>__raw_spin_lock_irqsave (14 samples, 0.01%)</title><rect x="81.0710%" y="149" width="0.0119%" height="15" fill="rgb(208,96,46)" fg:x="95273" fg:w="14"/><text x="81.3210%" y="159.50"></text></g><g><title>__wake_up_common_lock (99 samples, 0.08%)</title><rect x="81.0055%" y="181" width="0.0842%" height="15" fill="rgb(239,3,39)" fg:x="95196" fg:w="99"/><text x="81.2555%" y="191.50"></text></g><g><title>tcp_data_ready (124 samples, 0.11%)</title><rect x="80.9850%" y="229" width="0.1055%" height="15" fill="rgb(233,210,1)" fg:x="95172" fg:w="124"/><text x="81.2350%" y="239.50"></text></g><g><title>sock_def_readable (114 samples, 0.10%)</title><rect x="80.9935%" y="213" width="0.0970%" height="15" fill="rgb(244,137,37)" fg:x="95182" fg:w="114"/><text x="81.2435%" y="223.50"></text></g><g><title>__wake_up_sync_key (100 samples, 0.09%)</title><rect x="81.0055%" y="197" width="0.0851%" height="15" fill="rgb(240,136,2)" fg:x="95196" fg:w="100"/><text x="81.2555%" y="207.50"></text></g><g><title>tcp_event_data_recv (19 samples, 0.02%)</title><rect x="81.0906%" y="229" width="0.0162%" height="15" fill="rgb(239,18,37)" fg:x="95296" fg:w="19"/><text x="81.3406%" y="239.50"></text></g><g><title>tcp_queue_rcv (50 samples, 0.04%)</title><rect x="81.1076%" y="229" width="0.0425%" height="15" fill="rgb(218,185,22)" fg:x="95316" fg:w="50"/><text x="81.3576%" y="239.50"></text></g><g><title>tcp_try_coalesce (25 samples, 0.02%)</title><rect x="81.1288%" y="213" width="0.0213%" height="15" fill="rgb(225,218,4)" fg:x="95341" fg:w="25"/><text x="81.3788%" y="223.50"></text></g><g><title>mod_memcg_state (25 samples, 0.02%)</title><rect x="81.1901%" y="165" width="0.0213%" height="15" fill="rgb(230,182,32)" fg:x="95413" fg:w="25"/><text x="81.4401%" y="175.50"></text></g><g><title>__mod_memcg_state (19 samples, 0.02%)</title><rect x="81.1952%" y="149" width="0.0162%" height="15" fill="rgb(242,56,43)" fg:x="95419" fg:w="19"/><text x="81.4452%" y="159.50"></text></g><g><title>page_counter_try_charge (13 samples, 0.01%)</title><rect x="81.2378%" y="149" width="0.0111%" height="15" fill="rgb(233,99,24)" fg:x="95469" fg:w="13"/><text x="81.4878%" y="159.50"></text></g><g><title>__sk_mem_raise_allocated (94 samples, 0.08%)</title><rect x="81.1697%" y="197" width="0.0800%" height="15" fill="rgb(234,209,42)" fg:x="95389" fg:w="94"/><text x="81.4197%" y="207.50"></text></g><g><title>mem_cgroup_charge_skmem (73 samples, 0.06%)</title><rect x="81.1876%" y="181" width="0.0621%" height="15" fill="rgb(227,7,12)" fg:x="95410" fg:w="73"/><text x="81.4376%" y="191.50"></text></g><g><title>try_charge_memcg (44 samples, 0.04%)</title><rect x="81.2122%" y="165" width="0.0374%" height="15" fill="rgb(245,203,43)" fg:x="95439" fg:w="44"/><text x="81.4622%" y="175.50"></text></g><g><title>tcp_data_queue (369 samples, 0.31%)</title><rect x="80.9365%" y="245" width="0.3140%" height="15" fill="rgb(238,205,33)" fg:x="95115" fg:w="369"/><text x="81.1865%" y="255.50"></text></g><g><title>tcp_try_rmem_schedule (115 samples, 0.10%)</title><rect x="81.1527%" y="229" width="0.0979%" height="15" fill="rgb(231,56,7)" fg:x="95369" fg:w="115"/><text x="81.4027%" y="239.50"></text></g><g><title>__sk_mem_schedule (100 samples, 0.09%)</title><rect x="81.1654%" y="213" width="0.0851%" height="15" fill="rgb(244,186,29)" fg:x="95384" fg:w="100"/><text x="81.4154%" y="223.50"></text></g><g><title>tcp_mstamp_refresh (21 samples, 0.02%)</title><rect x="81.2599%" y="245" width="0.0179%" height="15" fill="rgb(234,111,31)" fg:x="95495" fg:w="21"/><text x="81.5099%" y="255.50"></text></g><g><title>read_tsc (16 samples, 0.01%)</title><rect x="81.2641%" y="229" width="0.0136%" height="15" fill="rgb(241,149,10)" fg:x="95500" fg:w="16"/><text x="81.5141%" y="239.50"></text></g><g><title>tcp_try_rmem_schedule (12 samples, 0.01%)</title><rect x="81.2812%" y="245" width="0.0102%" height="15" fill="rgb(249,206,44)" fg:x="95520" fg:w="12"/><text x="81.5312%" y="255.50"></text></g><g><title>tcp_rcv_established (572 samples, 0.49%)</title><rect x="80.8080%" y="261" width="0.4867%" height="15" fill="rgb(251,153,30)" fg:x="94964" fg:w="572"/><text x="81.0580%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (611 samples, 0.52%)</title><rect x="80.7757%" y="277" width="0.5199%" height="15" fill="rgb(239,152,38)" fg:x="94926" fg:w="611"/><text x="81.0257%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (876 samples, 0.75%)</title><rect x="80.5553%" y="309" width="0.7454%" height="15" fill="rgb(249,139,47)" fg:x="94667" fg:w="876"/><text x="80.8053%" y="319.50"></text></g><g><title>tcp_v4_rcv (789 samples, 0.67%)</title><rect x="80.6294%" y="293" width="0.6714%" height="15" fill="rgb(244,64,35)" fg:x="94754" fg:w="789"/><text x="80.8794%" y="303.50"></text></g><g><title>ip_local_deliver_finish (889 samples, 0.76%)</title><rect x="80.5485%" y="325" width="0.7565%" height="15" fill="rgb(216,46,15)" fg:x="94659" fg:w="889"/><text x="80.7985%" y="335.50"></text></g><g><title>nf_hook_slow (28 samples, 0.02%)</title><rect x="81.3161%" y="325" width="0.0238%" height="15" fill="rgb(250,74,19)" fg:x="95561" fg:w="28"/><text x="81.5661%" y="335.50"></text></g><g><title>nf_nat_ipv4_local_in (17 samples, 0.01%)</title><rect x="81.3254%" y="309" width="0.0145%" height="15" fill="rgb(249,42,33)" fg:x="95572" fg:w="17"/><text x="81.5754%" y="319.50"></text></g><g><title>ip_local_deliver (971 samples, 0.83%)</title><rect x="80.5281%" y="341" width="0.8263%" height="15" fill="rgb(242,149,17)" fg:x="94635" fg:w="971"/><text x="80.7781%" y="351.50"></text></g><g><title>nf_nat_ipv4_local_in (17 samples, 0.01%)</title><rect x="81.3399%" y="325" width="0.0145%" height="15" fill="rgb(244,29,21)" fg:x="95589" fg:w="17"/><text x="81.5899%" y="335.50"></text></g><g><title>ip_rcv_core (25 samples, 0.02%)</title><rect x="81.3577%" y="341" width="0.0213%" height="15" fill="rgb(220,130,37)" fg:x="95610" fg:w="25"/><text x="81.6077%" y="351.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (37 samples, 0.03%)</title><rect x="81.3790%" y="341" width="0.0315%" height="15" fill="rgb(211,67,2)" fg:x="95635" fg:w="37"/><text x="81.6290%" y="351.50"></text></g><g><title>ip_sabotage_in (13 samples, 0.01%)</title><rect x="81.4105%" y="341" width="0.0111%" height="15" fill="rgb(235,68,52)" fg:x="95672" fg:w="13"/><text x="81.6605%" y="351.50"></text></g><g><title>ipv4_conntrack_in (24 samples, 0.02%)</title><rect x="81.4292%" y="341" width="0.0204%" height="15" fill="rgb(246,142,3)" fg:x="95694" fg:w="24"/><text x="81.6792%" y="351.50"></text></g><g><title>nf_hook_slow (63 samples, 0.05%)</title><rect x="81.4497%" y="341" width="0.0536%" height="15" fill="rgb(241,25,7)" fg:x="95718" fg:w="63"/><text x="81.6997%" y="351.50"></text></g><g><title>nf_nat_ipv4_pre_routing (18 samples, 0.02%)</title><rect x="81.4879%" y="325" width="0.0153%" height="15" fill="rgb(242,119,39)" fg:x="95763" fg:w="18"/><text x="81.7379%" y="335.50"></text></g><g><title>ip_rcv (1,193 samples, 1.02%)</title><rect x="80.5034%" y="357" width="1.0152%" height="15" fill="rgb(241,98,45)" fg:x="94606" fg:w="1193"/><text x="80.7534%" y="367.50"></text></g><g><title>nf_nat_ipv4_pre_routing (18 samples, 0.02%)</title><rect x="81.5033%" y="341" width="0.0153%" height="15" fill="rgb(254,28,30)" fg:x="95781" fg:w="18"/><text x="81.7533%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (1,275 samples, 1.08%)</title><rect x="80.4421%" y="373" width="1.0849%" height="15" fill="rgb(241,142,54)" fg:x="94534" fg:w="1275"/><text x="80.6921%" y="383.50"></text></g><g><title>__netif_receive_skb (1,295 samples, 1.10%)</title><rect x="80.4302%" y="389" width="1.1020%" height="15" fill="rgb(222,85,15)" fg:x="94520" fg:w="1295"/><text x="80.6802%" y="399.50"></text></g><g><title>_raw_spin_lock_irq (13 samples, 0.01%)</title><rect x="81.5356%" y="389" width="0.0111%" height="15" fill="rgb(210,85,47)" fg:x="95819" fg:w="13"/><text x="81.7856%" y="399.50"></text></g><g><title>__napi_poll (1,352 samples, 1.15%)</title><rect x="80.3979%" y="421" width="1.1505%" height="15" fill="rgb(224,206,25)" fg:x="94482" fg:w="1352"/><text x="80.6479%" y="431.50"></text></g><g><title>process_backlog (1,327 samples, 1.13%)</title><rect x="80.4192%" y="405" width="1.1292%" height="15" fill="rgb(243,201,19)" fg:x="94507" fg:w="1327"/><text x="80.6692%" y="415.50"></text></g><g><title>free_compound_page (109 samples, 0.09%)</title><rect x="81.6062%" y="357" width="0.0928%" height="15" fill="rgb(236,59,4)" fg:x="95902" fg:w="109"/><text x="81.8562%" y="367.50"></text></g><g><title>free_unref_page (101 samples, 0.09%)</title><rect x="81.6130%" y="341" width="0.0859%" height="15" fill="rgb(254,179,45)" fg:x="95910" fg:w="101"/><text x="81.8630%" y="351.50"></text></g><g><title>free_unref_page_prepare (93 samples, 0.08%)</title><rect x="81.6198%" y="325" width="0.0791%" height="15" fill="rgb(226,14,10)" fg:x="95918" fg:w="93"/><text x="81.8698%" y="335.50"></text></g><g><title>free_tail_page_prepare (21 samples, 0.02%)</title><rect x="81.6811%" y="309" width="0.0179%" height="15" fill="rgb(244,27,41)" fg:x="95990" fg:w="21"/><text x="81.9311%" y="319.50"></text></g><g><title>destroy_large_folio (113 samples, 0.10%)</title><rect x="81.6037%" y="373" width="0.0962%" height="15" fill="rgb(235,35,32)" fg:x="95899" fg:w="113"/><text x="81.8537%" y="383.50"></text></g><g><title>__folio_put (121 samples, 0.10%)</title><rect x="81.5986%" y="389" width="0.1030%" height="15" fill="rgb(218,68,31)" fg:x="95893" fg:w="121"/><text x="81.8486%" y="399.50"></text></g><g><title>skb_release_data (175 samples, 0.15%)</title><rect x="81.5654%" y="405" width="0.1489%" height="15" fill="rgb(207,120,37)" fg:x="95854" fg:w="175"/><text x="81.8154%" y="415.50"></text></g><g><title>skb_free_head (12 samples, 0.01%)</title><rect x="81.7041%" y="389" width="0.0102%" height="15" fill="rgb(227,98,0)" fg:x="96017" fg:w="12"/><text x="81.9541%" y="399.50"></text></g><g><title>napi_consume_skb (191 samples, 0.16%)</title><rect x="81.5526%" y="421" width="0.1625%" height="15" fill="rgb(207,7,3)" fg:x="95839" fg:w="191"/><text x="81.8026%" y="431.50"></text></g><g><title>__do_softirq (1,643 samples, 1.40%)</title><rect x="80.3230%" y="453" width="1.3981%" height="15" fill="rgb(206,98,19)" fg:x="94394" fg:w="1643"/><text x="80.5730%" y="463.50"></text></g><g><title>net_rx_action (1,600 samples, 1.36%)</title><rect x="80.3596%" y="437" width="1.3615%" height="15" fill="rgb(217,5,26)" fg:x="94437" fg:w="1600"/><text x="80.6096%" y="447.50"></text></g><g><title>__local_bh_enable_ip (1,667 samples, 1.42%)</title><rect x="80.3068%" y="485" width="1.4185%" height="15" fill="rgb(235,190,38)" fg:x="94375" fg:w="1667"/><text x="80.5568%" y="495.50"></text></g><g><title>do_softirq.part.0 (1,656 samples, 1.41%)</title><rect x="80.3162%" y="469" width="1.4091%" height="15" fill="rgb(247,86,24)" fg:x="94386" fg:w="1656"/><text x="80.5662%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (15 samples, 0.01%)</title><rect x="81.7875%" y="405" width="0.0128%" height="15" fill="rgb(205,101,16)" fg:x="96115" fg:w="15"/><text x="82.0375%" y="415.50"></text></g><g><title>__raw_spin_lock_irqsave (13 samples, 0.01%)</title><rect x="81.7892%" y="389" width="0.0111%" height="15" fill="rgb(246,168,33)" fg:x="96117" fg:w="13"/><text x="82.0392%" y="399.50"></text></g><g><title>__netif_rx (55 samples, 0.05%)</title><rect x="81.7577%" y="453" width="0.0468%" height="15" fill="rgb(231,114,1)" fg:x="96080" fg:w="55"/><text x="82.0077%" y="463.50"></text></g><g><title>netif_rx_internal (49 samples, 0.04%)</title><rect x="81.7628%" y="437" width="0.0417%" height="15" fill="rgb(207,184,53)" fg:x="96086" fg:w="49"/><text x="82.0128%" y="447.50"></text></g><g><title>enqueue_to_backlog (41 samples, 0.03%)</title><rect x="81.7696%" y="421" width="0.0349%" height="15" fill="rgb(224,95,51)" fg:x="96094" fg:w="41"/><text x="82.0196%" y="431.50"></text></g><g><title>loopback_xmit (112 samples, 0.10%)</title><rect x="81.7381%" y="469" width="0.0953%" height="15" fill="rgb(212,188,45)" fg:x="96057" fg:w="112"/><text x="81.9881%" y="479.50"></text></g><g><title>tcp_wfree (20 samples, 0.02%)</title><rect x="81.8164%" y="453" width="0.0170%" height="15" fill="rgb(223,154,38)" fg:x="96149" fg:w="20"/><text x="82.0664%" y="463.50"></text></g><g><title>dev_hard_start_xmit (144 samples, 0.12%)</title><rect x="81.7262%" y="485" width="0.1225%" height="15" fill="rgb(251,22,52)" fg:x="96043" fg:w="144"/><text x="81.9762%" y="495.50"></text></g><g><title>tcp_wfree (15 samples, 0.01%)</title><rect x="81.8360%" y="469" width="0.0128%" height="15" fill="rgb(229,209,22)" fg:x="96172" fg:w="15"/><text x="82.0860%" y="479.50"></text></g><g><title>validate_xmit_skb (27 samples, 0.02%)</title><rect x="81.8709%" y="485" width="0.0230%" height="15" fill="rgb(234,138,34)" fg:x="96213" fg:w="27"/><text x="82.1209%" y="495.50"></text></g><g><title>__dev_queue_xmit (1,923 samples, 1.64%)</title><rect x="80.2592%" y="501" width="1.6363%" height="15" fill="rgb(212,95,11)" fg:x="94319" fg:w="1923"/><text x="80.5092%" y="511.50"></text></g><g><title>ip_finish_output2 (1,985 samples, 1.69%)</title><rect x="80.2115%" y="533" width="1.6891%" height="15" fill="rgb(240,179,47)" fg:x="94263" fg:w="1985"/><text x="80.4615%" y="543.50"></text></g><g><title>neigh_hh_output (1,939 samples, 1.65%)</title><rect x="80.2507%" y="517" width="1.6500%" height="15" fill="rgb(240,163,11)" fg:x="94309" fg:w="1939"/><text x="80.5007%" y="527.50"></text></g><g><title>__ip_finish_output (2,016 samples, 1.72%)</title><rect x="80.1979%" y="549" width="1.7155%" height="15" fill="rgb(236,37,12)" fg:x="94247" fg:w="2016"/><text x="80.4479%" y="559.50"></text></g><g><title>ip_skb_dst_mtu (15 samples, 0.01%)</title><rect x="81.9006%" y="533" width="0.0128%" height="15" fill="rgb(232,164,16)" fg:x="96248" fg:w="15"/><text x="82.1506%" y="543.50"></text></g><g><title>ip_finish_output (2,046 samples, 1.74%)</title><rect x="80.1741%" y="565" width="1.7410%" height="15" fill="rgb(244,205,15)" fg:x="94219" fg:w="2046"/><text x="80.4241%" y="575.50"></text></g><g><title>nf_confirm (12 samples, 0.01%)</title><rect x="81.9347%" y="549" width="0.0102%" height="15" fill="rgb(223,117,47)" fg:x="96288" fg:w="12"/><text x="82.1847%" y="559.50"></text></g><g><title>nf_hook_slow (45 samples, 0.04%)</title><rect x="81.9245%" y="565" width="0.0383%" height="15" fill="rgb(244,107,35)" fg:x="96276" fg:w="45"/><text x="82.1745%" y="575.50"></text></g><g><title>nf_nat_ipv4_out (20 samples, 0.02%)</title><rect x="81.9457%" y="549" width="0.0170%" height="15" fill="rgb(205,140,8)" fg:x="96301" fg:w="20"/><text x="82.1957%" y="559.50"></text></g><g><title>ip_output (2,158 samples, 1.84%)</title><rect x="80.1341%" y="581" width="1.8363%" height="15" fill="rgb(228,84,46)" fg:x="94172" fg:w="2158"/><text x="80.3841%" y="591.50">i..</text></g><g><title>ip_local_out (2,661 samples, 2.26%)</title><rect x="79.7171%" y="597" width="2.2643%" height="15" fill="rgb(254,188,9)" fg:x="93682" fg:w="2661"/><text x="79.9671%" y="607.50">i..</text></g><g><title>__ip_queue_xmit (2,714 samples, 2.31%)</title><rect x="79.6729%" y="613" width="2.3094%" height="15" fill="rgb(206,112,54)" fg:x="93630" fg:w="2714"/><text x="79.9229%" y="623.50">_..</text></g><g><title>ip_queue_xmit (2,732 samples, 2.32%)</title><rect x="79.6729%" y="629" width="2.3248%" height="15" fill="rgb(216,84,49)" fg:x="93630" fg:w="2732"/><text x="79.9229%" y="639.50">i..</text></g><g><title>skb_clone (37 samples, 0.03%)</title><rect x="81.9977%" y="629" width="0.0315%" height="15" fill="rgb(214,194,35)" fg:x="96362" fg:w="37"/><text x="82.2477%" y="639.50"></text></g><g><title>__skb_clone (29 samples, 0.02%)</title><rect x="82.0045%" y="613" width="0.0247%" height="15" fill="rgb(249,28,3)" fg:x="96370" fg:w="29"/><text x="82.2545%" y="623.50"></text></g><g><title>tcp_established_options (13 samples, 0.01%)</title><rect x="82.0291%" y="629" width="0.0111%" height="15" fill="rgb(222,56,52)" fg:x="96399" fg:w="13"/><text x="82.2791%" y="639.50"></text></g><g><title>tcp_update_skb_after_send (13 samples, 0.01%)</title><rect x="82.0487%" y="629" width="0.0111%" height="15" fill="rgb(245,217,50)" fg:x="96422" fg:w="13"/><text x="82.2987%" y="639.50"></text></g><g><title>__tcp_transmit_skb (2,935 samples, 2.50%)</title><rect x="79.5631%" y="645" width="2.4975%" height="15" fill="rgb(213,201,24)" fg:x="93501" fg:w="2935"/><text x="79.8131%" y="655.50">__..</text></g><g><title>ktime_get (12 samples, 0.01%)</title><rect x="82.0674%" y="645" width="0.0102%" height="15" fill="rgb(248,116,28)" fg:x="96444" fg:w="12"/><text x="82.3174%" y="655.50"></text></g><g><title>read_tsc (17 samples, 0.01%)</title><rect x="82.0819%" y="645" width="0.0145%" height="15" fill="rgb(219,72,43)" fg:x="96461" fg:w="17"/><text x="82.3319%" y="655.50"></text></g><g><title>tcp_check_space (16 samples, 0.01%)</title><rect x="82.1032%" y="645" width="0.0136%" height="15" fill="rgb(209,138,14)" fg:x="96486" fg:w="16"/><text x="82.3532%" y="655.50"></text></g><g><title>tcp_cwnd_validate (20 samples, 0.02%)</title><rect x="82.1168%" y="645" width="0.0170%" height="15" fill="rgb(222,18,33)" fg:x="96502" fg:w="20"/><text x="82.3668%" y="655.50"></text></g><g><title>tcp_event_new_data_sent (98 samples, 0.08%)</title><rect x="82.1338%" y="645" width="0.0834%" height="15" fill="rgb(213,199,7)" fg:x="96522" fg:w="98"/><text x="82.3838%" y="655.50"></text></g><g><title>tcp_rearm_rto (50 samples, 0.04%)</title><rect x="82.1746%" y="629" width="0.0425%" height="15" fill="rgb(250,110,10)" fg:x="96570" fg:w="50"/><text x="82.4246%" y="639.50"></text></g><g><title>get_nohz_timer_target (12 samples, 0.01%)</title><rect x="82.2861%" y="581" width="0.0102%" height="15" fill="rgb(248,123,6)" fg:x="96701" fg:w="12"/><text x="82.5361%" y="591.50"></text></g><g><title>__mod_timer (71 samples, 0.06%)</title><rect x="82.2546%" y="597" width="0.0604%" height="15" fill="rgb(206,91,31)" fg:x="96664" fg:w="71"/><text x="82.5046%" y="607.50"></text></g><g><title>lock_timer_base (22 samples, 0.02%)</title><rect x="82.2963%" y="581" width="0.0187%" height="15" fill="rgb(211,154,13)" fg:x="96713" fg:w="22"/><text x="82.5463%" y="591.50"></text></g><g><title>_raw_spin_lock_irqsave (13 samples, 0.01%)</title><rect x="82.3040%" y="565" width="0.0111%" height="15" fill="rgb(225,148,7)" fg:x="96722" fg:w="13"/><text x="82.5540%" y="575.50"></text></g><g><title>__raw_spin_lock_irqsave (13 samples, 0.01%)</title><rect x="82.3040%" y="549" width="0.0111%" height="15" fill="rgb(220,160,43)" fg:x="96722" fg:w="13"/><text x="82.5540%" y="559.50"></text></g><g><title>tcp_schedule_loss_probe (110 samples, 0.09%)</title><rect x="82.2308%" y="645" width="0.0936%" height="15" fill="rgb(213,52,39)" fg:x="96636" fg:w="110"/><text x="82.4808%" y="655.50"></text></g><g><title>sk_reset_timer (85 samples, 0.07%)</title><rect x="82.2521%" y="629" width="0.0723%" height="15" fill="rgb(243,137,7)" fg:x="96661" fg:w="85"/><text x="82.5021%" y="639.50"></text></g><g><title>mod_timer (82 samples, 0.07%)</title><rect x="82.2546%" y="613" width="0.0698%" height="15" fill="rgb(230,79,13)" fg:x="96664" fg:w="82"/><text x="82.5046%" y="623.50"></text></g><g><title>tcp_tso_segs (21 samples, 0.02%)</title><rect x="82.3287%" y="645" width="0.0179%" height="15" fill="rgb(247,105,23)" fg:x="96751" fg:w="21"/><text x="82.5787%" y="655.50"></text></g><g><title>__tcp_push_pending_frames (3,375 samples, 2.87%)</title><rect x="79.4831%" y="677" width="2.8719%" height="15" fill="rgb(223,179,41)" fg:x="93407" fg:w="3375"/><text x="79.7331%" y="687.50">__..</text></g><g><title>tcp_write_xmit (3,335 samples, 2.84%)</title><rect x="79.5172%" y="661" width="2.8379%" height="15" fill="rgb(218,9,34)" fg:x="93447" fg:w="3335"/><text x="79.7672%" y="671.50">tc..</text></g><g><title>tcp_push (3,377 samples, 2.87%)</title><rect x="79.4831%" y="693" width="2.8736%" height="15" fill="rgb(222,106,8)" fg:x="93407" fg:w="3377"/><text x="79.7331%" y="703.50">tc..</text></g><g><title>__tcp_select_window (16 samples, 0.01%)</title><rect x="82.5499%" y="645" width="0.0136%" height="15" fill="rgb(211,220,0)" fg:x="97011" fg:w="16"/><text x="82.7999%" y="655.50"></text></g><g><title>bpf_skops_write_hdr_opt.isra.0 (18 samples, 0.02%)</title><rect x="82.5635%" y="645" width="0.0153%" height="15" fill="rgb(229,52,16)" fg:x="97027" fg:w="18"/><text x="82.8135%" y="655.50"></text></g><g><title>cubictcp_cwnd_event (15 samples, 0.01%)</title><rect x="82.5788%" y="645" width="0.0128%" height="15" fill="rgb(212,155,18)" fg:x="97045" fg:w="15"/><text x="82.8288%" y="655.50"></text></g><g><title>__sk_dst_check (14 samples, 0.01%)</title><rect x="82.6324%" y="613" width="0.0119%" height="15" fill="rgb(242,21,14)" fg:x="97108" fg:w="14"/><text x="82.8824%" y="623.50"></text></g><g><title>ip_send_check (14 samples, 0.01%)</title><rect x="82.6707%" y="581" width="0.0119%" height="15" fill="rgb(222,19,48)" fg:x="97153" fg:w="14"/><text x="82.9207%" y="591.50"></text></g><g><title>ipv4_conntrack_defrag (19 samples, 0.02%)</title><rect x="82.6827%" y="581" width="0.0162%" height="15" fill="rgb(232,45,27)" fg:x="97167" fg:w="19"/><text x="82.9327%" y="591.50"></text></g><g><title>ipv4_conntrack_local (21 samples, 0.02%)</title><rect x="82.6988%" y="581" width="0.0179%" height="15" fill="rgb(249,103,42)" fg:x="97186" fg:w="21"/><text x="82.9488%" y="591.50"></text></g><g><title>__nf_ct_refresh_acct (17 samples, 0.01%)</title><rect x="82.7856%" y="517" width="0.0145%" height="15" fill="rgb(246,81,33)" fg:x="97288" fg:w="17"/><text x="83.0356%" y="527.50"></text></g><g><title>nf_conntrack_tcp_packet (168 samples, 0.14%)</title><rect x="82.8043%" y="517" width="0.1430%" height="15" fill="rgb(252,33,42)" fg:x="97310" fg:w="168"/><text x="83.0543%" y="527.50"></text></g><g><title>tcp_in_window (69 samples, 0.06%)</title><rect x="82.8886%" y="501" width="0.0587%" height="15" fill="rgb(209,212,41)" fg:x="97409" fg:w="69"/><text x="83.1386%" y="511.50"></text></g><g><title>nf_conntrack_handle_packet (197 samples, 0.17%)</title><rect x="82.7814%" y="533" width="0.1676%" height="15" fill="rgb(207,154,6)" fg:x="97283" fg:w="197"/><text x="83.0314%" y="543.50"></text></g><g><title>nf_conntrack_tcp_packet (17 samples, 0.01%)</title><rect x="82.9490%" y="533" width="0.0145%" height="15" fill="rgb(223,64,47)" fg:x="97480" fg:w="17"/><text x="83.1990%" y="543.50"></text></g><g><title>__nf_conntrack_find_get (134 samples, 0.11%)</title><rect x="82.9958%" y="517" width="0.1140%" height="15" fill="rgb(211,161,38)" fg:x="97535" fg:w="134"/><text x="83.2458%" y="527.50"></text></g><g><title>__siphash_unaligned (13 samples, 0.01%)</title><rect x="83.1098%" y="517" width="0.0111%" height="15" fill="rgb(219,138,40)" fg:x="97669" fg:w="13"/><text x="83.3598%" y="527.50"></text></g><g><title>hash_conntrack_raw (28 samples, 0.02%)</title><rect x="83.1209%" y="517" width="0.0238%" height="15" fill="rgb(241,228,46)" fg:x="97682" fg:w="28"/><text x="83.3709%" y="527.50"></text></g><g><title>__siphash_unaligned (14 samples, 0.01%)</title><rect x="83.1328%" y="501" width="0.0119%" height="15" fill="rgb(223,209,38)" fg:x="97696" fg:w="14"/><text x="83.3828%" y="511.50"></text></g><g><title>nf_conntrack_in (497 samples, 0.42%)</title><rect x="82.7414%" y="549" width="0.4229%" height="15" fill="rgb(236,164,45)" fg:x="97236" fg:w="497"/><text x="82.9914%" y="559.50"></text></g><g><title>resolve_normal_ct (229 samples, 0.19%)</title><rect x="82.9694%" y="533" width="0.1949%" height="15" fill="rgb(231,15,5)" fg:x="97504" fg:w="229"/><text x="83.2194%" y="543.50"></text></g><g><title>nf_ct_get_tuple (23 samples, 0.02%)</title><rect x="83.1447%" y="517" width="0.0196%" height="15" fill="rgb(252,35,15)" fg:x="97710" fg:w="23"/><text x="83.3947%" y="527.50"></text></g><g><title>ipv4_conntrack_local (516 samples, 0.44%)</title><rect x="82.7337%" y="565" width="0.4391%" height="15" fill="rgb(248,181,18)" fg:x="97227" fg:w="516"/><text x="82.9837%" y="575.50"></text></g><g><title>nf_hook_slow (577 samples, 0.49%)</title><rect x="82.7167%" y="581" width="0.4910%" height="15" fill="rgb(233,39,42)" fg:x="97207" fg:w="577"/><text x="82.9667%" y="591.50"></text></g><g><title>nf_nat_ipv4_local_fn (26 samples, 0.02%)</title><rect x="83.1856%" y="565" width="0.0221%" height="15" fill="rgb(238,110,33)" fg:x="97758" fg:w="26"/><text x="83.4356%" y="575.50"></text></g><g><title>nf_nat_inet_fn (14 samples, 0.01%)</title><rect x="83.1958%" y="549" width="0.0119%" height="15" fill="rgb(233,195,10)" fg:x="97770" fg:w="14"/><text x="83.4458%" y="559.50"></text></g><g><title>__ip_local_out (671 samples, 0.57%)</title><rect x="82.6554%" y="597" width="0.5710%" height="15" fill="rgb(254,105,3)" fg:x="97135" fg:w="671"/><text x="82.9054%" y="607.50"></text></g><g><title>nf_nat_ipv4_local_fn (22 samples, 0.02%)</title><rect x="83.2077%" y="581" width="0.0187%" height="15" fill="rgb(221,225,9)" fg:x="97784" fg:w="22"/><text x="83.4577%" y="591.50"></text></g><g><title>apparmor_ip_postroute (23 samples, 0.02%)</title><rect x="83.2775%" y="581" width="0.0196%" height="15" fill="rgb(224,227,45)" fg:x="97866" fg:w="23"/><text x="83.5275%" y="591.50"></text></g><g><title>_raw_spin_lock (15 samples, 0.01%)</title><rect x="83.5863%" y="453" width="0.0128%" height="15" fill="rgb(229,198,43)" fg:x="98229" fg:w="15"/><text x="83.8363%" y="463.50"></text></g><g><title>__rcu_read_unlock (20 samples, 0.02%)</title><rect x="83.6782%" y="421" width="0.0170%" height="15" fill="rgb(206,209,35)" fg:x="98337" fg:w="20"/><text x="83.9282%" y="431.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (67 samples, 0.06%)</title><rect x="83.7429%" y="373" width="0.0570%" height="15" fill="rgb(245,195,53)" fg:x="98413" fg:w="67"/><text x="83.9929%" y="383.50"></text></g><g><title>raw_local_deliver (16 samples, 0.01%)</title><rect x="83.9378%" y="309" width="0.0136%" height="15" fill="rgb(240,92,26)" fg:x="98642" fg:w="16"/><text x="84.1878%" y="319.50"></text></g><g><title>raw_v4_input (15 samples, 0.01%)</title><rect x="83.9386%" y="293" width="0.0128%" height="15" fill="rgb(207,40,23)" fg:x="98643" fg:w="15"/><text x="84.1886%" y="303.50"></text></g><g><title>__inet_lookup_established (108 samples, 0.09%)</title><rect x="84.0561%" y="293" width="0.0919%" height="15" fill="rgb(223,111,35)" fg:x="98781" fg:w="108"/><text x="84.3061%" y="303.50"></text></g><g><title>tcp_filter (54 samples, 0.05%)</title><rect x="84.1786%" y="293" width="0.0460%" height="15" fill="rgb(229,147,28)" fg:x="98925" fg:w="54"/><text x="84.4286%" y="303.50"></text></g><g><title>sk_filter_trim_cap (47 samples, 0.04%)</title><rect x="84.1846%" y="277" width="0.0400%" height="15" fill="rgb(211,29,28)" fg:x="98932" fg:w="47"/><text x="84.4346%" y="287.50"></text></g><g><title>tcp_check_space (37 samples, 0.03%)</title><rect x="84.2501%" y="277" width="0.0315%" height="15" fill="rgb(228,72,33)" fg:x="99009" fg:w="37"/><text x="84.5001%" y="287.50"></text></g><g><title>__mod_timer (65 samples, 0.06%)</title><rect x="84.3658%" y="197" width="0.0553%" height="15" fill="rgb(205,214,31)" fg:x="99145" fg:w="65"/><text x="84.6158%" y="207.50"></text></g><g><title>__tcp_ack_snd_check (108 samples, 0.09%)</title><rect x="84.3420%" y="261" width="0.0919%" height="15" fill="rgb(224,111,15)" fg:x="99117" fg:w="108"/><text x="84.5920%" y="271.50"></text></g><g><title>tcp_send_delayed_ack (95 samples, 0.08%)</title><rect x="84.3530%" y="245" width="0.0808%" height="15" fill="rgb(253,21,26)" fg:x="99130" fg:w="95"/><text x="84.6030%" y="255.50"></text></g><g><title>sk_reset_timer (83 samples, 0.07%)</title><rect x="84.3632%" y="229" width="0.0706%" height="15" fill="rgb(245,139,43)" fg:x="99142" fg:w="83"/><text x="84.6132%" y="239.50"></text></g><g><title>mod_timer (80 samples, 0.07%)</title><rect x="84.3658%" y="213" width="0.0681%" height="15" fill="rgb(252,170,7)" fg:x="99145" fg:w="80"/><text x="84.6158%" y="223.50"></text></g><g><title>dst_release (12 samples, 0.01%)</title><rect x="84.4424%" y="261" width="0.0102%" height="15" fill="rgb(231,118,14)" fg:x="99235" fg:w="12"/><text x="84.6924%" y="271.50"></text></g><g><title>sk_forced_mem_schedule (12 samples, 0.01%)</title><rect x="84.4594%" y="261" width="0.0102%" height="15" fill="rgb(238,83,0)" fg:x="99255" fg:w="12"/><text x="84.7094%" y="271.50"></text></g><g><title>cubictcp_acked (20 samples, 0.02%)</title><rect x="84.5641%" y="245" width="0.0170%" height="15" fill="rgb(221,39,39)" fg:x="99378" fg:w="20"/><text x="84.8141%" y="255.50"></text></g><g><title>rb_erase (27 samples, 0.02%)</title><rect x="84.5862%" y="245" width="0.0230%" height="15" fill="rgb(222,119,46)" fg:x="99404" fg:w="27"/><text x="84.8362%" y="255.50"></text></g><g><title>__slab_free (17 samples, 0.01%)</title><rect x="84.7377%" y="181" width="0.0145%" height="15" fill="rgb(222,165,49)" fg:x="99582" fg:w="17"/><text x="84.9877%" y="191.50"></text></g><g><title>cache_from_obj (29 samples, 0.02%)</title><rect x="84.7521%" y="181" width="0.0247%" height="15" fill="rgb(219,113,52)" fg:x="99599" fg:w="29"/><text x="85.0021%" y="191.50"></text></g><g><title>kfree_skbmem (64 samples, 0.05%)</title><rect x="84.7232%" y="213" width="0.0545%" height="15" fill="rgb(214,7,15)" fg:x="99565" fg:w="64"/><text x="84.9732%" y="223.50"></text></g><g><title>kmem_cache_free (53 samples, 0.05%)</title><rect x="84.7326%" y="197" width="0.0451%" height="15" fill="rgb(235,32,4)" fg:x="99576" fg:w="53"/><text x="84.9826%" y="207.50"></text></g><g><title>__slab_free (26 samples, 0.02%)</title><rect x="84.8466%" y="165" width="0.0221%" height="15" fill="rgb(238,90,54)" fg:x="99710" fg:w="26"/><text x="85.0966%" y="175.50"></text></g><g><title>skb_release_data (117 samples, 0.10%)</title><rect x="84.7785%" y="213" width="0.0996%" height="15" fill="rgb(213,208,19)" fg:x="99630" fg:w="117"/><text x="85.0285%" y="223.50"></text></g><g><title>skb_free_head (72 samples, 0.06%)</title><rect x="84.8168%" y="197" width="0.0613%" height="15" fill="rgb(233,156,4)" fg:x="99675" fg:w="72"/><text x="85.0668%" y="207.50"></text></g><g><title>kmem_cache_free (63 samples, 0.05%)</title><rect x="84.8245%" y="181" width="0.0536%" height="15" fill="rgb(207,194,5)" fg:x="99684" fg:w="63"/><text x="85.0745%" y="191.50"></text></g><g><title>__kfree_skb (191 samples, 0.16%)</title><rect x="84.7181%" y="229" width="0.1625%" height="15" fill="rgb(206,111,30)" fg:x="99559" fg:w="191"/><text x="84.9681%" y="239.50"></text></g><g><title>mod_memcg_state (14 samples, 0.01%)</title><rect x="84.8900%" y="181" width="0.0119%" height="15" fill="rgb(243,70,54)" fg:x="99761" fg:w="14"/><text x="85.1400%" y="191.50"></text></g><g><title>mem_cgroup_uncharge_skmem (33 samples, 0.03%)</title><rect x="84.8874%" y="197" width="0.0281%" height="15" fill="rgb(242,28,8)" fg:x="99758" fg:w="33"/><text x="85.1374%" y="207.50"></text></g><g><title>refill_stock (16 samples, 0.01%)</title><rect x="84.9019%" y="181" width="0.0136%" height="15" fill="rgb(219,106,18)" fg:x="99775" fg:w="16"/><text x="85.1519%" y="191.50"></text></g><g><title>__sk_mem_reduce_allocated (48 samples, 0.04%)</title><rect x="84.8806%" y="213" width="0.0408%" height="15" fill="rgb(244,222,10)" fg:x="99750" fg:w="48"/><text x="85.1306%" y="223.50"></text></g><g><title>__sk_mem_reclaim (55 samples, 0.05%)</title><rect x="84.8806%" y="229" width="0.0468%" height="15" fill="rgb(236,179,52)" fg:x="99750" fg:w="55"/><text x="85.1306%" y="239.50"></text></g><g><title>tcp_ack_update_rtt (45 samples, 0.04%)</title><rect x="84.9385%" y="229" width="0.0383%" height="15" fill="rgb(213,23,39)" fg:x="99818" fg:w="45"/><text x="85.1885%" y="239.50"></text></g><g><title>tcp_rtt_estimator (26 samples, 0.02%)</title><rect x="84.9546%" y="213" width="0.0221%" height="15" fill="rgb(238,48,10)" fg:x="99837" fg:w="26"/><text x="85.2046%" y="223.50"></text></g><g><title>tcp_chrono_stop (17 samples, 0.01%)</title><rect x="84.9768%" y="229" width="0.0145%" height="15" fill="rgb(251,196,23)" fg:x="99863" fg:w="17"/><text x="85.2268%" y="239.50"></text></g><g><title>tcp_clean_rtx_queue.constprop.0 (430 samples, 0.37%)</title><rect x="84.6330%" y="245" width="0.3659%" height="15" fill="rgb(250,152,24)" fg:x="99459" fg:w="430"/><text x="84.8830%" y="255.50"></text></g><g><title>tcp_newly_delivered (14 samples, 0.01%)</title><rect x="84.9989%" y="245" width="0.0119%" height="15" fill="rgb(209,150,17)" fg:x="99889" fg:w="14"/><text x="85.2489%" y="255.50"></text></g><g><title>tcp_rate_gen (13 samples, 0.01%)</title><rect x="85.0151%" y="245" width="0.0111%" height="15" fill="rgb(234,202,34)" fg:x="99908" fg:w="13"/><text x="85.2651%" y="255.50"></text></g><g><title>tcp_rate_skb_delivered (13 samples, 0.01%)</title><rect x="85.0261%" y="245" width="0.0111%" height="15" fill="rgb(253,148,53)" fg:x="99921" fg:w="13"/><text x="85.2761%" y="255.50"></text></g><g><title>tcp_ack (698 samples, 0.59%)</title><rect x="84.4696%" y="261" width="0.5940%" height="15" fill="rgb(218,129,16)" fg:x="99267" fg:w="698"/><text x="84.7196%" y="271.50"></text></g><g><title>tcp_update_pacing_rate (19 samples, 0.02%)</title><rect x="85.0474%" y="245" width="0.0162%" height="15" fill="rgb(216,85,19)" fg:x="99946" fg:w="19"/><text x="85.2974%" y="255.50"></text></g><g><title>mod_memcg_state (21 samples, 0.02%)</title><rect x="85.1436%" y="213" width="0.0179%" height="15" fill="rgb(235,228,7)" fg:x="100059" fg:w="21"/><text x="85.3936%" y="223.50"></text></g><g><title>page_counter_try_charge (38 samples, 0.03%)</title><rect x="85.1972%" y="197" width="0.0323%" height="15" fill="rgb(245,175,0)" fg:x="100122" fg:w="38"/><text x="85.4472%" y="207.50"></text></g><g><title>mem_cgroup_charge_skmem (115 samples, 0.10%)</title><rect x="85.1333%" y="229" width="0.0979%" height="15" fill="rgb(208,168,36)" fg:x="100047" fg:w="115"/><text x="85.3833%" y="239.50"></text></g><g><title>try_charge_memcg (81 samples, 0.07%)</title><rect x="85.1623%" y="213" width="0.0689%" height="15" fill="rgb(246,171,24)" fg:x="100081" fg:w="81"/><text x="85.4123%" y="223.50"></text></g><g><title>sk_forced_mem_schedule (125 samples, 0.11%)</title><rect x="85.1274%" y="245" width="0.1064%" height="15" fill="rgb(215,142,24)" fg:x="100040" fg:w="125"/><text x="85.3774%" y="255.50"></text></g><g><title>sock_def_readable (13 samples, 0.01%)</title><rect x="85.2338%" y="245" width="0.0111%" height="15" fill="rgb(250,187,7)" fg:x="100165" fg:w="13"/><text x="85.4838%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (14 samples, 0.01%)</title><rect x="85.4380%" y="53" width="0.0119%" height="15" fill="rgb(228,66,33)" fg:x="100405" fg:w="14"/><text x="85.6880%" y="63.50"></text></g><g><title>__raw_spin_lock_irqsave (14 samples, 0.01%)</title><rect x="85.4380%" y="37" width="0.0119%" height="15" fill="rgb(234,215,21)" fg:x="100405" fg:w="14"/><text x="85.6880%" y="47.50"></text></g><g><title>select_task_rq_fair (34 samples, 0.03%)</title><rect x="85.4516%" y="53" width="0.0289%" height="15" fill="rgb(222,191,20)" fg:x="100421" fg:w="34"/><text x="85.7016%" y="63.50"></text></g><g><title>__smp_call_single_queue (12 samples, 0.01%)</title><rect x="85.4916%" y="37" width="0.0102%" height="15" fill="rgb(245,79,54)" fg:x="100468" fg:w="12"/><text x="85.7416%" y="47.50"></text></g><g><title>llist_add_batch (12 samples, 0.01%)</title><rect x="85.5043%" y="37" width="0.0102%" height="15" fill="rgb(240,10,37)" fg:x="100483" fg:w="12"/><text x="85.7543%" y="47.50"></text></g><g><title>ttwu_queue_wakelist (52 samples, 0.04%)</title><rect x="85.4848%" y="53" width="0.0442%" height="15" fill="rgb(214,192,32)" fg:x="100460" fg:w="52"/><text x="85.7348%" y="63.50"></text></g><g><title>sched_clock_cpu (14 samples, 0.01%)</title><rect x="85.5171%" y="37" width="0.0119%" height="15" fill="rgb(209,36,54)" fg:x="100498" fg:w="14"/><text x="85.7671%" y="47.50"></text></g><g><title>try_to_wake_up (141 samples, 0.12%)</title><rect x="85.4107%" y="69" width="0.1200%" height="15" fill="rgb(220,10,11)" fg:x="100373" fg:w="141"/><text x="85.6607%" y="79.50"></text></g><g><title>default_wake_function (146 samples, 0.12%)</title><rect x="85.4073%" y="85" width="0.1242%" height="15" fill="rgb(221,106,17)" fg:x="100369" fg:w="146"/><text x="85.6573%" y="95.50"></text></g><g><title>__wake_up_common (166 samples, 0.14%)</title><rect x="85.3929%" y="117" width="0.1413%" height="15" fill="rgb(251,142,44)" fg:x="100352" fg:w="166"/><text x="85.6429%" y="127.50"></text></g><g><title>ep_autoremove_wake_function (150 samples, 0.13%)</title><rect x="85.4065%" y="101" width="0.1276%" height="15" fill="rgb(238,13,15)" fg:x="100368" fg:w="150"/><text x="85.6565%" y="111.50"></text></g><g><title>__wake_up_common_lock (181 samples, 0.15%)</title><rect x="85.3895%" y="133" width="0.1540%" height="15" fill="rgb(208,107,27)" fg:x="100348" fg:w="181"/><text x="85.6395%" y="143.50"></text></g><g><title>__wake_up (182 samples, 0.15%)</title><rect x="85.3895%" y="149" width="0.1549%" height="15" fill="rgb(205,136,37)" fg:x="100348" fg:w="182"/><text x="85.6395%" y="159.50"></text></g><g><title>_raw_read_lock_irqsave (29 samples, 0.02%)</title><rect x="85.5443%" y="149" width="0.0247%" height="15" fill="rgb(250,205,27)" fg:x="100530" fg:w="29"/><text x="85.7943%" y="159.50"></text></g><g><title>__raw_read_lock_irqsave (29 samples, 0.02%)</title><rect x="85.5443%" y="133" width="0.0247%" height="15" fill="rgb(210,80,43)" fg:x="100530" fg:w="29"/><text x="85.7943%" y="143.50"></text></g><g><title>__wake_up_common (325 samples, 0.28%)</title><rect x="85.3010%" y="181" width="0.2766%" height="15" fill="rgb(247,160,36)" fg:x="100244" fg:w="325"/><text x="85.5510%" y="191.50"></text></g><g><title>ep_poll_callback (280 samples, 0.24%)</title><rect x="85.3393%" y="165" width="0.2383%" height="15" fill="rgb(234,13,49)" fg:x="100289" fg:w="280"/><text x="85.5893%" y="175.50"></text></g><g><title>_raw_spin_lock_irqsave (12 samples, 0.01%)</title><rect x="85.5775%" y="181" width="0.0102%" height="15" fill="rgb(234,122,0)" fg:x="100569" fg:w="12"/><text x="85.8275%" y="191.50"></text></g><g><title>__raw_spin_lock_irqsave (12 samples, 0.01%)</title><rect x="85.5775%" y="165" width="0.0102%" height="15" fill="rgb(207,146,38)" fg:x="100569" fg:w="12"/><text x="85.8275%" y="175.50"></text></g><g><title>__wake_up_common_lock (362 samples, 0.31%)</title><rect x="85.2976%" y="197" width="0.3080%" height="15" fill="rgb(207,177,25)" fg:x="100240" fg:w="362"/><text x="85.5476%" y="207.50"></text></g><g><title>ep_poll_callback (18 samples, 0.02%)</title><rect x="85.5903%" y="181" width="0.0153%" height="15" fill="rgb(211,178,42)" fg:x="100584" fg:w="18"/><text x="85.8403%" y="191.50"></text></g><g><title>tcp_data_ready (427 samples, 0.36%)</title><rect x="85.2448%" y="245" width="0.3633%" height="15" fill="rgb(230,69,54)" fg:x="100178" fg:w="427"/><text x="85.4948%" y="255.50"></text></g><g><title>sock_def_readable (414 samples, 0.35%)</title><rect x="85.2559%" y="229" width="0.3523%" height="15" fill="rgb(214,135,41)" fg:x="100191" fg:w="414"/><text x="85.5059%" y="239.50"></text></g><g><title>__wake_up_sync_key (366 samples, 0.31%)</title><rect x="85.2967%" y="213" width="0.3114%" height="15" fill="rgb(237,67,25)" fg:x="100239" fg:w="366"/><text x="85.5467%" y="223.50"></text></g><g><title>tcp_event_data_recv (21 samples, 0.02%)</title><rect x="85.6082%" y="245" width="0.0179%" height="15" fill="rgb(222,189,50)" fg:x="100605" fg:w="21"/><text x="85.8582%" y="255.50"></text></g><g><title>tcp_data_queue (677 samples, 0.58%)</title><rect x="85.0678%" y="261" width="0.5761%" height="15" fill="rgb(245,148,34)" fg:x="99970" fg:w="677"/><text x="85.3178%" y="271.50"></text></g><g><title>tcp_queue_rcv (19 samples, 0.02%)</title><rect x="85.6277%" y="245" width="0.0162%" height="15" fill="rgb(222,29,6)" fg:x="100628" fg:w="19"/><text x="85.8777%" y="255.50"></text></g><g><title>tcp_event_data_recv (12 samples, 0.01%)</title><rect x="85.6490%" y="261" width="0.0102%" height="15" fill="rgb(221,189,43)" fg:x="100653" fg:w="12"/><text x="85.8990%" y="271.50"></text></g><g><title>tcp_mstamp_refresh (27 samples, 0.02%)</title><rect x="85.6592%" y="261" width="0.0230%" height="15" fill="rgb(207,36,27)" fg:x="100665" fg:w="27"/><text x="85.9092%" y="271.50"></text></g><g><title>read_tsc (16 samples, 0.01%)</title><rect x="85.6686%" y="245" width="0.0136%" height="15" fill="rgb(217,90,24)" fg:x="100676" fg:w="16"/><text x="85.9186%" y="255.50"></text></g><g><title>tcp_rack_update_reo_wnd (21 samples, 0.02%)</title><rect x="85.6967%" y="261" width="0.0179%" height="15" fill="rgb(224,66,35)" fg:x="100709" fg:w="21"/><text x="85.9467%" y="271.50"></text></g><g><title>tcp_rearm_rto (12 samples, 0.01%)</title><rect x="85.7171%" y="261" width="0.0102%" height="15" fill="rgb(221,13,50)" fg:x="100733" fg:w="12"/><text x="85.9671%" y="271.50"></text></g><g><title>tcp_schedule_loss_probe (14 samples, 0.01%)</title><rect x="85.7273%" y="261" width="0.0119%" height="15" fill="rgb(236,68,49)" fg:x="100745" fg:w="14"/><text x="85.9773%" y="271.50"></text></g><g><title>tcp_rcv_established (1,715 samples, 1.46%)</title><rect x="84.2935%" y="277" width="1.4594%" height="15" fill="rgb(229,146,28)" fg:x="99060" fg:w="1715"/><text x="84.5435%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (1,788 samples, 1.52%)</title><rect x="84.2399%" y="293" width="1.5215%" height="15" fill="rgb(225,31,38)" fg:x="98997" fg:w="1788"/><text x="84.4899%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (2,225 samples, 1.89%)</title><rect x="83.8748%" y="325" width="1.8933%" height="15" fill="rgb(250,208,3)" fg:x="98568" fg:w="2225"/><text x="84.1248%" y="335.50">i..</text></g><g><title>tcp_v4_rcv (2,102 samples, 1.79%)</title><rect x="83.9795%" y="309" width="1.7887%" height="15" fill="rgb(246,54,23)" fg:x="98691" fg:w="2102"/><text x="84.2295%" y="319.50">t..</text></g><g><title>raw_local_deliver (12 samples, 0.01%)</title><rect x="85.7681%" y="325" width="0.0102%" height="15" fill="rgb(243,76,11)" fg:x="100793" fg:w="12"/><text x="86.0181%" y="335.50"></text></g><g><title>ip_local_deliver_finish (2,249 samples, 1.91%)</title><rect x="83.8655%" y="341" width="1.9137%" height="15" fill="rgb(245,21,50)" fg:x="98557" fg:w="2249"/><text x="84.1155%" y="351.50">i..</text></g><g><title>nf_hook_slow (26 samples, 0.02%)</title><rect x="85.7860%" y="341" width="0.0221%" height="15" fill="rgb(228,9,43)" fg:x="100814" fg:w="26"/><text x="86.0360%" y="351.50"></text></g><g><title>nf_nat_ipv4_local_in (14 samples, 0.01%)</title><rect x="85.7962%" y="325" width="0.0119%" height="15" fill="rgb(208,100,47)" fg:x="100826" fg:w="14"/><text x="86.0462%" y="335.50"></text></g><g><title>ip_local_deliver (2,325 samples, 1.98%)</title><rect x="83.8399%" y="357" width="1.9784%" height="15" fill="rgb(232,26,8)" fg:x="98527" fg:w="2325"/><text x="84.0899%" y="367.50">i..</text></g><g><title>nf_nat_ipv4_local_in (12 samples, 0.01%)</title><rect x="85.8081%" y="341" width="0.0102%" height="15" fill="rgb(216,166,38)" fg:x="100840" fg:w="12"/><text x="86.0581%" y="351.50"></text></g><g><title>ip_rcv_core (22 samples, 0.02%)</title><rect x="85.8252%" y="357" width="0.0187%" height="15" fill="rgb(251,202,51)" fg:x="100860" fg:w="22"/><text x="86.0752%" y="367.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (56 samples, 0.05%)</title><rect x="85.8439%" y="357" width="0.0477%" height="15" fill="rgb(254,216,34)" fg:x="100882" fg:w="56"/><text x="86.0939%" y="367.50"></text></g><g><title>ip_sabotage_in (20 samples, 0.02%)</title><rect x="85.8915%" y="357" width="0.0170%" height="15" fill="rgb(251,32,27)" fg:x="100938" fg:w="20"/><text x="86.1415%" y="367.50"></text></g><g><title>ipv4_conntrack_in (15 samples, 0.01%)</title><rect x="85.9485%" y="341" width="0.0128%" height="15" fill="rgb(208,127,28)" fg:x="101005" fg:w="15"/><text x="86.1985%" y="351.50"></text></g><g><title>nf_conntrack_in (15 samples, 0.01%)</title><rect x="85.9485%" y="325" width="0.0128%" height="15" fill="rgb(224,137,22)" fg:x="101005" fg:w="15"/><text x="86.1985%" y="335.50"></text></g><g><title>nf_hook_slow (73 samples, 0.06%)</title><rect x="85.9239%" y="357" width="0.0621%" height="15" fill="rgb(254,70,32)" fg:x="100976" fg:w="73"/><text x="86.1739%" y="367.50"></text></g><g><title>nf_nat_ipv4_pre_routing (22 samples, 0.02%)</title><rect x="85.9673%" y="341" width="0.0187%" height="15" fill="rgb(229,75,37)" fg:x="101027" fg:w="22"/><text x="86.2173%" y="351.50"></text></g><g><title>ip_rcv (2,583 samples, 2.20%)</title><rect x="83.8084%" y="373" width="2.1980%" height="15" fill="rgb(252,64,23)" fg:x="98490" fg:w="2583"/><text x="84.0584%" y="383.50">i..</text></g><g><title>nf_nat_ipv4_pre_routing (24 samples, 0.02%)</title><rect x="85.9860%" y="357" width="0.0204%" height="15" fill="rgb(232,162,48)" fg:x="101049" fg:w="24"/><text x="86.2360%" y="367.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (15 samples, 0.01%)</title><rect x="86.0115%" y="373" width="0.0128%" height="15" fill="rgb(246,160,12)" fg:x="101079" fg:w="15"/><text x="86.2615%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (2,701 samples, 2.30%)</title><rect x="83.7293%" y="389" width="2.2984%" height="15" fill="rgb(247,166,0)" fg:x="98397" fg:w="2701"/><text x="83.9793%" y="399.50">_..</text></g><g><title>__netif_receive_skb (2,718 samples, 2.31%)</title><rect x="83.7165%" y="405" width="2.3128%" height="15" fill="rgb(249,219,21)" fg:x="98382" fg:w="2718"/><text x="83.9665%" y="415.50">_..</text></g><g><title>_raw_spin_lock_irq (20 samples, 0.02%)</title><rect x="86.0328%" y="405" width="0.0170%" height="15" fill="rgb(205,209,3)" fg:x="101104" fg:w="20"/><text x="86.2828%" y="415.50"></text></g><g><title>__napi_poll (2,812 samples, 2.39%)</title><rect x="83.6604%" y="437" width="2.3928%" height="15" fill="rgb(243,44,1)" fg:x="98316" fg:w="2812"/><text x="83.9104%" y="447.50">__..</text></g><g><title>process_backlog (2,767 samples, 2.35%)</title><rect x="83.6987%" y="421" width="2.3545%" height="15" fill="rgb(206,159,16)" fg:x="98361" fg:w="2767"/><text x="83.9487%" y="431.50">p..</text></g><g><title>kfree_skbmem (59 samples, 0.05%)</title><rect x="86.0787%" y="421" width="0.0502%" height="15" fill="rgb(244,77,30)" fg:x="101158" fg:w="59"/><text x="86.3287%" y="431.50"></text></g><g><title>kmem_cache_free (36 samples, 0.03%)</title><rect x="86.0983%" y="405" width="0.0306%" height="15" fill="rgb(218,69,12)" fg:x="101181" fg:w="36"/><text x="86.3483%" y="415.50"></text></g><g><title>cache_from_obj (12 samples, 0.01%)</title><rect x="86.1187%" y="389" width="0.0102%" height="15" fill="rgb(212,87,7)" fg:x="101205" fg:w="12"/><text x="86.3687%" y="399.50"></text></g><g><title>_raw_spin_trylock (19 samples, 0.02%)</title><rect x="86.2864%" y="357" width="0.0162%" height="15" fill="rgb(245,114,25)" fg:x="101402" fg:w="19"/><text x="86.5364%" y="367.50"></text></g><g><title>free_tail_page_prepare (20 samples, 0.02%)</title><rect x="86.3187%" y="341" width="0.0170%" height="15" fill="rgb(210,61,42)" fg:x="101440" fg:w="20"/><text x="86.5687%" y="351.50"></text></g><g><title>free_unref_page_commit (17 samples, 0.01%)</title><rect x="86.3357%" y="341" width="0.0145%" height="15" fill="rgb(211,52,33)" fg:x="101460" fg:w="17"/><text x="86.5857%" y="351.50"></text></g><g><title>free_unref_page (337 samples, 0.29%)</title><rect x="86.3042%" y="357" width="0.2868%" height="15" fill="rgb(234,58,33)" fg:x="101423" fg:w="337"/><text x="86.5542%" y="367.50"></text></g><g><title>free_unref_page_prepare (283 samples, 0.24%)</title><rect x="86.3502%" y="341" width="0.2408%" height="15" fill="rgb(220,115,36)" fg:x="101477" fg:w="283"/><text x="86.6002%" y="351.50"></text></g><g><title>free_tail_page_prepare (61 samples, 0.05%)</title><rect x="86.5391%" y="325" width="0.0519%" height="15" fill="rgb(243,153,54)" fg:x="101699" fg:w="61"/><text x="86.7891%" y="335.50"></text></g><g><title>free_compound_page (380 samples, 0.32%)</title><rect x="86.2736%" y="373" width="0.3234%" height="15" fill="rgb(251,47,18)" fg:x="101387" fg:w="380"/><text x="86.5236%" y="383.50"></text></g><g><title>destroy_large_folio (404 samples, 0.34%)</title><rect x="86.2608%" y="389" width="0.3438%" height="15" fill="rgb(242,102,42)" fg:x="101372" fg:w="404"/><text x="86.5108%" y="399.50"></text></g><g><title>__folio_put (439 samples, 0.37%)</title><rect x="86.2455%" y="405" width="0.3736%" height="15" fill="rgb(234,31,38)" fg:x="101354" fg:w="439"/><text x="86.4955%" y="415.50"></text></g><g><title>free_compound_page (16 samples, 0.01%)</title><rect x="86.6055%" y="389" width="0.0136%" height="15" fill="rgb(221,117,51)" fg:x="101777" fg:w="16"/><text x="86.8555%" y="399.50"></text></g><g><title>skb_release_data (630 samples, 0.54%)</title><rect x="86.1340%" y="421" width="0.5361%" height="15" fill="rgb(212,20,18)" fg:x="101223" fg:w="630"/><text x="86.3840%" y="431.50"></text></g><g><title>skb_free_head (54 samples, 0.05%)</title><rect x="86.6242%" y="405" width="0.0460%" height="15" fill="rgb(245,133,36)" fg:x="101799" fg:w="54"/><text x="86.8742%" y="415.50"></text></g><g><title>kmem_cache_free (48 samples, 0.04%)</title><rect x="86.6293%" y="389" width="0.0408%" height="15" fill="rgb(212,6,19)" fg:x="101805" fg:w="48"/><text x="86.8793%" y="399.50"></text></g><g><title>cache_from_obj (21 samples, 0.02%)</title><rect x="86.6523%" y="373" width="0.0179%" height="15" fill="rgb(218,1,36)" fg:x="101832" fg:w="21"/><text x="86.9023%" y="383.50"></text></g><g><title>napi_consume_skb (718 samples, 0.61%)</title><rect x="86.0600%" y="437" width="0.6110%" height="15" fill="rgb(246,84,54)" fg:x="101136" fg:w="718"/><text x="86.3100%" y="447.50"></text></g><g><title>net_rx_action (3,621 samples, 3.08%)</title><rect x="83.6025%" y="453" width="3.0812%" height="15" fill="rgb(242,110,6)" fg:x="98248" fg:w="3621"/><text x="83.8525%" y="463.50">net..</text></g><g><title>__do_softirq (3,704 samples, 3.15%)</title><rect x="83.5327%" y="469" width="3.1519%" height="15" fill="rgb(214,47,5)" fg:x="98166" fg:w="3704"/><text x="83.7827%" y="479.50">__d..</text></g><g><title>__local_bh_enable_ip (3,743 samples, 3.19%)</title><rect x="83.5098%" y="501" width="3.1850%" height="15" fill="rgb(218,159,25)" fg:x="98139" fg:w="3743"/><text x="83.7598%" y="511.50">__l..</text></g><g><title>do_softirq.part.0 (3,731 samples, 3.17%)</title><rect x="83.5200%" y="485" width="3.1748%" height="15" fill="rgb(215,211,28)" fg:x="98151" fg:w="3731"/><text x="83.7700%" y="495.50">do_..</text></g><g><title>net_rx_action (12 samples, 0.01%)</title><rect x="86.6846%" y="469" width="0.0102%" height="15" fill="rgb(238,59,32)" fg:x="101870" fg:w="12"/><text x="86.9346%" y="479.50"></text></g><g><title>__netif_rx (60 samples, 0.05%)</title><rect x="86.7391%" y="469" width="0.0511%" height="15" fill="rgb(226,82,3)" fg:x="101934" fg:w="60"/><text x="86.9891%" y="479.50"></text></g><g><title>netif_rx_internal (56 samples, 0.05%)</title><rect x="86.7425%" y="453" width="0.0477%" height="15" fill="rgb(240,164,32)" fg:x="101938" fg:w="56"/><text x="86.9925%" y="463.50"></text></g><g><title>enqueue_to_backlog (48 samples, 0.04%)</title><rect x="86.7493%" y="437" width="0.0408%" height="15" fill="rgb(232,46,7)" fg:x="101946" fg:w="48"/><text x="86.9993%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (14 samples, 0.01%)</title><rect x="86.7782%" y="421" width="0.0119%" height="15" fill="rgb(229,129,53)" fg:x="101980" fg:w="14"/><text x="87.0282%" y="431.50"></text></g><g><title>__raw_spin_lock_irqsave (14 samples, 0.01%)</title><rect x="86.7782%" y="405" width="0.0119%" height="15" fill="rgb(234,188,29)" fg:x="101980" fg:w="14"/><text x="87.0282%" y="415.50"></text></g><g><title>eth_type_trans (18 samples, 0.02%)</title><rect x="86.7901%" y="469" width="0.0153%" height="15" fill="rgb(246,141,4)" fg:x="101994" fg:w="18"/><text x="87.0401%" y="479.50"></text></g><g><title>loopback_xmit (150 samples, 0.13%)</title><rect x="86.7161%" y="485" width="0.1276%" height="15" fill="rgb(229,23,39)" fg:x="101907" fg:w="150"/><text x="86.9661%" y="495.50"></text></g><g><title>tcp_wfree (23 samples, 0.02%)</title><rect x="86.8241%" y="469" width="0.0196%" height="15" fill="rgb(206,12,3)" fg:x="102034" fg:w="23"/><text x="87.0741%" y="479.50"></text></g><g><title>dev_hard_start_xmit (186 samples, 0.16%)</title><rect x="86.6948%" y="501" width="0.1583%" height="15" fill="rgb(252,226,20)" fg:x="101882" fg:w="186"/><text x="86.9448%" y="511.50"></text></g><g><title>do_softirq.part.0 (12 samples, 0.01%)</title><rect x="86.8531%" y="501" width="0.0102%" height="15" fill="rgb(216,123,35)" fg:x="102068" fg:w="12"/><text x="87.1031%" y="511.50"></text></g><g><title>netif_skb_features (15 samples, 0.01%)</title><rect x="86.8956%" y="485" width="0.0128%" height="15" fill="rgb(212,68,40)" fg:x="102118" fg:w="15"/><text x="87.1456%" y="495.50"></text></g><g><title>validate_xmit_skb (39 samples, 0.03%)</title><rect x="86.8786%" y="501" width="0.0332%" height="15" fill="rgb(254,125,32)" fg:x="102098" fg:w="39"/><text x="87.1286%" y="511.50"></text></g><g><title>__dev_queue_xmit (4,065 samples, 3.46%)</title><rect x="83.4587%" y="517" width="3.4590%" height="15" fill="rgb(253,97,22)" fg:x="98079" fg:w="4065"/><text x="83.7087%" y="527.50">__d..</text></g><g><title>ip_finish_output2 (4,194 samples, 3.57%)</title><rect x="83.3566%" y="549" width="3.5688%" height="15" fill="rgb(241,101,14)" fg:x="97959" fg:w="4194"/><text x="83.6066%" y="559.50">ip_f..</text></g><g><title>neigh_hh_output (4,088 samples, 3.48%)</title><rect x="83.4468%" y="533" width="3.4786%" height="15" fill="rgb(238,103,29)" fg:x="98065" fg:w="4088"/><text x="83.6968%" y="543.50">nei..</text></g><g><title>ip_skb_dst_mtu (14 samples, 0.01%)</title><rect x="86.9254%" y="549" width="0.0119%" height="15" fill="rgb(233,195,47)" fg:x="102153" fg:w="14"/><text x="87.1754%" y="559.50"></text></g><g><title>__ip_finish_output (4,249 samples, 3.62%)</title><rect x="83.3226%" y="565" width="3.6156%" height="15" fill="rgb(246,218,30)" fg:x="97919" fg:w="4249"/><text x="83.5726%" y="575.50">__ip..</text></g><g><title>ip_finish_output (4,284 samples, 3.65%)</title><rect x="83.2970%" y="581" width="3.6454%" height="15" fill="rgb(219,145,47)" fg:x="97889" fg:w="4284"/><text x="83.5470%" y="591.50">ip_f..</text></g><g><title>nf_confirm (17 samples, 0.01%)</title><rect x="86.9603%" y="565" width="0.0145%" height="15" fill="rgb(243,12,26)" fg:x="102194" fg:w="17"/><text x="87.2103%" y="575.50"></text></g><g><title>nf_hook_slow (55 samples, 0.05%)</title><rect x="86.9492%" y="581" width="0.0468%" height="15" fill="rgb(214,87,16)" fg:x="102181" fg:w="55"/><text x="87.1992%" y="591.50"></text></g><g><title>nf_nat_ipv4_out (22 samples, 0.02%)</title><rect x="86.9773%" y="565" width="0.0187%" height="15" fill="rgb(208,99,42)" fg:x="102214" fg:w="22"/><text x="87.2273%" y="575.50"></text></g><g><title>nf_nat_inet_fn (12 samples, 0.01%)</title><rect x="86.9858%" y="549" width="0.0102%" height="15" fill="rgb(253,99,2)" fg:x="102224" fg:w="12"/><text x="87.2358%" y="559.50"></text></g><g><title>ip_output (4,429 samples, 3.77%)</title><rect x="83.2417%" y="597" width="3.7688%" height="15" fill="rgb(220,168,23)" fg:x="97824" fg:w="4429"/><text x="83.4917%" y="607.50">ip_o..</text></g><g><title>nf_nat_ipv4_out (17 samples, 0.01%)</title><rect x="86.9960%" y="581" width="0.0145%" height="15" fill="rgb(242,38,24)" fg:x="102236" fg:w="17"/><text x="87.2460%" y="591.50"></text></g><g><title>ip_local_out (5,149 samples, 4.38%)</title><rect x="82.6444%" y="613" width="4.3815%" height="15" fill="rgb(225,182,9)" fg:x="97122" fg:w="5149"/><text x="82.8944%" y="623.50">ip_lo..</text></g><g><title>nf_hook_slow (12 samples, 0.01%)</title><rect x="87.0156%" y="597" width="0.0102%" height="15" fill="rgb(243,178,37)" fg:x="102259" fg:w="12"/><text x="87.2656%" y="607.50"></text></g><g><title>__ip_queue_xmit (5,214 samples, 4.44%)</title><rect x="82.5925%" y="629" width="4.4368%" height="15" fill="rgb(232,139,19)" fg:x="97061" fg:w="5214"/><text x="82.8425%" y="639.50">__ip_..</text></g><g><title>ip_queue_xmit (5,240 samples, 4.46%)</title><rect x="82.5916%" y="645" width="4.4589%" height="15" fill="rgb(225,201,24)" fg:x="97060" fg:w="5240"/><text x="82.8416%" y="655.50">ip_qu..</text></g><g><title>skb_clone (47 samples, 0.04%)</title><rect x="87.0505%" y="645" width="0.0400%" height="15" fill="rgb(221,47,46)" fg:x="102300" fg:w="47"/><text x="87.3005%" y="655.50"></text></g><g><title>__skb_clone (29 samples, 0.02%)</title><rect x="87.0658%" y="629" width="0.0247%" height="15" fill="rgb(249,23,13)" fg:x="102318" fg:w="29"/><text x="87.3158%" y="639.50"></text></g><g><title>tcp_established_options (12 samples, 0.01%)</title><rect x="87.0905%" y="645" width="0.0102%" height="15" fill="rgb(219,9,5)" fg:x="102347" fg:w="12"/><text x="87.3405%" y="655.50"></text></g><g><title>__tcp_transmit_skb (5,528 samples, 4.70%)</title><rect x="82.4223%" y="661" width="4.7040%" height="15" fill="rgb(254,171,16)" fg:x="96861" fg:w="5528"/><text x="82.6723%" y="671.50">__tcp..</text></g><g><title>ktime_get (16 samples, 0.01%)</title><rect x="87.1543%" y="661" width="0.0136%" height="15" fill="rgb(230,171,20)" fg:x="102422" fg:w="16"/><text x="87.4043%" y="671.50"></text></g><g><title>read_tsc (15 samples, 0.01%)</title><rect x="87.1713%" y="661" width="0.0128%" height="15" fill="rgb(210,71,41)" fg:x="102442" fg:w="15"/><text x="87.4213%" y="671.50"></text></g><g><title>rb_insert_color (23 samples, 0.02%)</title><rect x="87.2411%" y="645" width="0.0196%" height="15" fill="rgb(206,173,20)" fg:x="102524" fg:w="23"/><text x="87.4911%" y="655.50"></text></g><g><title>__mod_timer (82 samples, 0.07%)</title><rect x="87.2760%" y="597" width="0.0698%" height="15" fill="rgb(233,88,34)" fg:x="102565" fg:w="82"/><text x="87.5260%" y="607.50"></text></g><g><title>lock_timer_base (20 samples, 0.02%)</title><rect x="87.3287%" y="581" width="0.0170%" height="15" fill="rgb(223,209,46)" fg:x="102627" fg:w="20"/><text x="87.5787%" y="591.50"></text></g><g><title>_raw_spin_lock_irqsave (14 samples, 0.01%)</title><rect x="87.3339%" y="565" width="0.0119%" height="15" fill="rgb(250,43,18)" fg:x="102633" fg:w="14"/><text x="87.5839%" y="575.50"></text></g><g><title>__raw_spin_lock_irqsave (14 samples, 0.01%)</title><rect x="87.3339%" y="549" width="0.0119%" height="15" fill="rgb(208,13,10)" fg:x="102633" fg:w="14"/><text x="87.5839%" y="559.50"></text></g><g><title>tcp_event_new_data_sent (171 samples, 0.15%)</title><rect x="87.2173%" y="661" width="0.1455%" height="15" fill="rgb(212,200,36)" fg:x="102496" fg:w="171"/><text x="87.4673%" y="671.50"></text></g><g><title>tcp_rearm_rto (115 samples, 0.10%)</title><rect x="87.2649%" y="645" width="0.0979%" height="15" fill="rgb(225,90,30)" fg:x="102552" fg:w="115"/><text x="87.5149%" y="655.50"></text></g><g><title>sk_reset_timer (109 samples, 0.09%)</title><rect x="87.2700%" y="629" width="0.0928%" height="15" fill="rgb(236,182,39)" fg:x="102558" fg:w="109"/><text x="87.5200%" y="639.50"></text></g><g><title>mod_timer (102 samples, 0.09%)</title><rect x="87.2760%" y="613" width="0.0868%" height="15" fill="rgb(212,144,35)" fg:x="102565" fg:w="102"/><text x="87.5260%" y="623.50"></text></g><g><title>tcp_schedule_loss_probe (53 samples, 0.05%)</title><rect x="87.3756%" y="661" width="0.0451%" height="15" fill="rgb(228,63,44)" fg:x="102682" fg:w="53"/><text x="87.6256%" y="671.50"></text></g><g><title>tcp_tso_segs (25 samples, 0.02%)</title><rect x="87.4241%" y="661" width="0.0213%" height="15" fill="rgb(228,109,6)" fg:x="102739" fg:w="25"/><text x="87.6741%" y="671.50"></text></g><g><title>tcp_push_one (5,989 samples, 5.10%)</title><rect x="82.3567%" y="693" width="5.0962%" height="15" fill="rgb(238,117,24)" fg:x="96784" fg:w="5989"/><text x="82.6067%" y="703.50">tcp_pu..</text></g><g><title>tcp_write_xmit (5,961 samples, 5.07%)</title><rect x="82.3806%" y="677" width="5.0724%" height="15" fill="rgb(242,26,26)" fg:x="96812" fg:w="5961"/><text x="82.6306%" y="687.50">tcp_wr..</text></g><g><title>tcp_rate_check_app_limited (20 samples, 0.02%)</title><rect x="87.4530%" y="693" width="0.0170%" height="15" fill="rgb(221,92,48)" fg:x="102773" fg:w="20"/><text x="87.7030%" y="703.50"></text></g><g><title>ipv4_mtu (19 samples, 0.02%)</title><rect x="87.5100%" y="661" width="0.0162%" height="15" fill="rgb(209,209,32)" fg:x="102840" fg:w="19"/><text x="87.7600%" y="671.50"></text></g><g><title>tcp_current_mss (61 samples, 0.05%)</title><rect x="87.4794%" y="677" width="0.0519%" height="15" fill="rgb(221,70,22)" fg:x="102804" fg:w="61"/><text x="87.7294%" y="687.50"></text></g><g><title>tcp_send_mss (75 samples, 0.06%)</title><rect x="87.4700%" y="693" width="0.0638%" height="15" fill="rgb(248,145,5)" fg:x="102793" fg:w="75"/><text x="87.7200%" y="703.50"></text></g><g><title>tcp_skb_entail (34 samples, 0.03%)</title><rect x="87.5338%" y="693" width="0.0289%" height="15" fill="rgb(226,116,26)" fg:x="102868" fg:w="34"/><text x="87.7838%" y="703.50"></text></g><g><title>__build_skb_around (12 samples, 0.01%)</title><rect x="87.6419%" y="661" width="0.0102%" height="15" fill="rgb(244,5,17)" fg:x="102995" fg:w="12"/><text x="87.8919%" y="671.50"></text></g><g><title>kmem_cache_alloc_node (56 samples, 0.05%)</title><rect x="87.6657%" y="645" width="0.0477%" height="15" fill="rgb(252,159,33)" fg:x="103023" fg:w="56"/><text x="87.9157%" y="655.50"></text></g><g><title>memset_orig (55 samples, 0.05%)</title><rect x="87.7151%" y="645" width="0.0468%" height="15" fill="rgb(206,71,0)" fg:x="103081" fg:w="55"/><text x="87.9651%" y="655.50"></text></g><g><title>kmalloc_reserve (129 samples, 0.11%)</title><rect x="87.6547%" y="661" width="0.1098%" height="15" fill="rgb(233,118,54)" fg:x="103010" fg:w="129"/><text x="87.9047%" y="671.50"></text></g><g><title>kmem_cache_alloc_node (106 samples, 0.09%)</title><rect x="87.7644%" y="661" width="0.0902%" height="15" fill="rgb(234,83,48)" fg:x="103139" fg:w="106"/><text x="88.0144%" y="671.50"></text></g><g><title>memset_orig (46 samples, 0.04%)</title><rect x="87.8631%" y="661" width="0.0391%" height="15" fill="rgb(228,3,54)" fg:x="103255" fg:w="46"/><text x="88.1131%" y="671.50"></text></g><g><title>__alloc_skb (394 samples, 0.34%)</title><rect x="87.5806%" y="677" width="0.3353%" height="15" fill="rgb(226,155,13)" fg:x="102923" fg:w="394"/><text x="87.8306%" y="687.50"></text></g><g><title>should_failslab (16 samples, 0.01%)</title><rect x="87.9023%" y="661" width="0.0136%" height="15" fill="rgb(241,28,37)" fg:x="103301" fg:w="16"/><text x="88.1523%" y="671.50"></text></g><g><title>__mod_memcg_state (38 samples, 0.03%)</title><rect x="87.9550%" y="629" width="0.0323%" height="15" fill="rgb(233,93,10)" fg:x="103363" fg:w="38"/><text x="88.2050%" y="639.50"></text></g><g><title>mod_memcg_state (47 samples, 0.04%)</title><rect x="87.9491%" y="645" width="0.0400%" height="15" fill="rgb(225,113,19)" fg:x="103356" fg:w="47"/><text x="88.1991%" y="655.50"></text></g><g><title>mem_cgroup_charge_skmem (82 samples, 0.07%)</title><rect x="87.9380%" y="661" width="0.0698%" height="15" fill="rgb(241,2,18)" fg:x="103343" fg:w="82"/><text x="88.1880%" y="671.50"></text></g><g><title>try_charge_memcg (22 samples, 0.02%)</title><rect x="87.9891%" y="645" width="0.0187%" height="15" fill="rgb(228,207,21)" fg:x="103403" fg:w="22"/><text x="88.2391%" y="655.50"></text></g><g><title>tcp_stream_alloc_skb (533 samples, 0.45%)</title><rect x="87.5628%" y="693" width="0.4535%" height="15" fill="rgb(213,211,35)" fg:x="102902" fg:w="533"/><text x="87.8128%" y="703.50"></text></g><g><title>sk_forced_mem_schedule (111 samples, 0.09%)</title><rect x="87.9219%" y="677" width="0.0945%" height="15" fill="rgb(209,83,10)" fg:x="103324" fg:w="111"/><text x="88.1719%" y="687.50"></text></g><g><title>__mod_memcg_state (70 samples, 0.06%)</title><rect x="88.2027%" y="613" width="0.0596%" height="15" fill="rgb(209,164,1)" fg:x="103654" fg:w="70"/><text x="88.4527%" y="623.50"></text></g><g><title>cgroup_rstat_updated (26 samples, 0.02%)</title><rect x="88.2401%" y="597" width="0.0221%" height="15" fill="rgb(213,184,43)" fg:x="103698" fg:w="26"/><text x="88.4901%" y="607.50"></text></g><g><title>mod_memcg_state (97 samples, 0.08%)</title><rect x="88.1814%" y="629" width="0.0825%" height="15" fill="rgb(231,61,34)" fg:x="103629" fg:w="97"/><text x="88.4314%" y="639.50"></text></g><g><title>consume_stock (49 samples, 0.04%)</title><rect x="88.3167%" y="613" width="0.0417%" height="15" fill="rgb(235,75,3)" fg:x="103788" fg:w="49"/><text x="88.5667%" y="623.50"></text></g><g><title>page_counter_try_charge (73 samples, 0.06%)</title><rect x="88.3584%" y="613" width="0.0621%" height="15" fill="rgb(220,106,47)" fg:x="103837" fg:w="73"/><text x="88.6084%" y="623.50"></text></g><g><title>mem_cgroup_charge_skmem (325 samples, 0.28%)</title><rect x="88.1516%" y="645" width="0.2766%" height="15" fill="rgb(210,196,33)" fg:x="103594" fg:w="325"/><text x="88.4016%" y="655.50"></text></g><g><title>try_charge_memcg (187 samples, 0.16%)</title><rect x="88.2690%" y="629" width="0.1591%" height="15" fill="rgb(229,154,42)" fg:x="103732" fg:w="187"/><text x="88.5190%" y="639.50"></text></g><g><title>__sk_mem_raise_allocated (454 samples, 0.39%)</title><rect x="88.0580%" y="661" width="0.3863%" height="15" fill="rgb(228,114,26)" fg:x="103484" fg:w="454"/><text x="88.3080%" y="671.50"></text></g><g><title>tcp_wmem_schedule (509 samples, 0.43%)</title><rect x="88.0206%" y="693" width="0.4331%" height="15" fill="rgb(208,144,1)" fg:x="103440" fg:w="509"/><text x="88.2706%" y="703.50"></text></g><g><title>__sk_mem_schedule (479 samples, 0.41%)</title><rect x="88.0461%" y="677" width="0.4076%" height="15" fill="rgb(239,112,37)" fg:x="103470" fg:w="479"/><text x="88.2961%" y="687.50"></text></g><g><title>tcp_sendmsg_locked (19,258 samples, 16.39%)</title><rect x="72.0681%" y="709" width="16.3873%" height="15" fill="rgb(210,96,50)" fg:x="84693" fg:w="19258"/><text x="72.3181%" y="719.50">tcp_sendmsg_locked</text></g><g><title>tcp_sendmsg (19,464 samples, 16.56%)</title><rect x="71.9098%" y="725" width="16.5626%" height="15" fill="rgb(222,178,2)" fg:x="84507" fg:w="19464"/><text x="72.1598%" y="735.50">tcp_sendmsg</text></g><g><title>inet_sendmsg (19,524 samples, 16.61%)</title><rect x="71.8613%" y="741" width="16.6136%" height="15" fill="rgb(226,74,18)" fg:x="84450" fg:w="19524"/><text x="72.1113%" y="751.50">inet_sendmsg</text></g><g><title>security_socket_sendmsg (46 samples, 0.04%)</title><rect x="88.4750%" y="741" width="0.0391%" height="15" fill="rgb(225,67,54)" fg:x="103974" fg:w="46"/><text x="88.7250%" y="751.50"></text></g><g><title>apparmor_socket_sendmsg (39 samples, 0.03%)</title><rect x="88.4809%" y="725" width="0.0332%" height="15" fill="rgb(251,92,32)" fg:x="103981" fg:w="39"/><text x="88.7309%" y="735.50"></text></g><g><title>aa_sk_perm (37 samples, 0.03%)</title><rect x="88.4826%" y="709" width="0.0315%" height="15" fill="rgb(228,149,22)" fg:x="103983" fg:w="37"/><text x="88.7326%" y="719.50"></text></g><g><title>__fget_light (102 samples, 0.09%)</title><rect x="88.5184%" y="709" width="0.0868%" height="15" fill="rgb(243,54,13)" fg:x="104025" fg:w="102"/><text x="88.7684%" y="719.50"></text></g><g><title>__fdget (103 samples, 0.09%)</title><rect x="88.5184%" y="725" width="0.0876%" height="15" fill="rgb(243,180,28)" fg:x="104025" fg:w="103"/><text x="88.7684%" y="735.50"></text></g><g><title>sockfd_lookup_light (109 samples, 0.09%)</title><rect x="88.5141%" y="741" width="0.0928%" height="15" fill="rgb(208,167,24)" fg:x="104020" fg:w="109"/><text x="88.7641%" y="751.50"></text></g><g><title>__sys_sendto (19,801 samples, 16.85%)</title><rect x="71.7592%" y="757" width="16.8493%" height="15" fill="rgb(245,73,45)" fg:x="84330" fg:w="19801"/><text x="72.0092%" y="767.50">__sys_sendto</text></g><g><title>fput (17 samples, 0.01%)</title><rect x="88.6086%" y="757" width="0.0145%" height="15" fill="rgb(237,203,48)" fg:x="104131" fg:w="17"/><text x="88.8586%" y="767.50"></text></g><g><title>__x64_sys_sendto (19,835 samples, 16.88%)</title><rect x="71.7592%" y="773" width="16.8783%" height="15" fill="rgb(211,197,16)" fg:x="84330" fg:w="19835"/><text x="72.0092%" y="783.50">__x64_sys_sendto</text></g><g><title>exit_to_user_mode_prepare (30 samples, 0.03%)</title><rect x="88.7958%" y="757" width="0.0255%" height="15" fill="rgb(243,99,51)" fg:x="104351" fg:w="30"/><text x="89.0458%" y="767.50"></text></g><g><title>fpregs_assert_state_consistent (15 samples, 0.01%)</title><rect x="88.8085%" y="741" width="0.0128%" height="15" fill="rgb(215,123,29)" fg:x="104366" fg:w="15"/><text x="89.0585%" y="751.50"></text></g><g><title>do_syscall_64 (20,092 samples, 17.10%)</title><rect x="71.7286%" y="789" width="17.0970%" height="15" fill="rgb(239,186,37)" fg:x="84294" fg:w="20092"/><text x="71.9786%" y="799.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (209 samples, 0.18%)</title><rect x="88.6477%" y="773" width="0.1778%" height="15" fill="rgb(252,136,39)" fg:x="104177" fg:w="209"/><text x="88.8977%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20,223 samples, 17.21%)</title><rect x="71.6231%" y="805" width="17.2084%" height="15" fill="rgb(223,213,32)" fg:x="84170" fg:w="20223"/><text x="71.8731%" y="815.50">entry_SYSCALL_64_after_hwfr..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (20,557 samples, 17.49%)</title><rect x="71.4903%" y="837" width="17.4926%" height="15" fill="rgb(233,115,5)" fg:x="84014" fg:w="20557"/><text x="71.7403%" y="847.50">&lt;&amp;std::net::tcp::TcpStream ..</text></g><g><title>__send (20,550 samples, 17.49%)</title><rect x="71.4963%" y="821" width="17.4867%" height="15" fill="rgb(207,226,44)" fg:x="84021" fg:w="20550"/><text x="71.7463%" y="831.50">__send</text></g><g><title>syscall_return_via_sysret (176 samples, 0.15%)</title><rect x="88.8332%" y="805" width="0.1498%" height="15" fill="rgb(208,126,0)" fg:x="104395" fg:w="176"/><text x="89.0832%" y="815.50"></text></g><g><title>_ZN5tokio3net3tcp6stream9TcpStream15poll_write_priv17ha47124ce6f5b2502E.llvm.11917656699324148856 (20,585 samples, 17.52%)</title><rect x="71.4767%" y="853" width="17.5165%" height="15" fill="rgb(244,66,21)" fg:x="83998" fg:w="20585"/><text x="71.7267%" y="863.50">_ZN5tokio3net3tcp6stream9Tc..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (12 samples, 0.01%)</title><rect x="88.9830%" y="837" width="0.0102%" height="15" fill="rgb(222,97,12)" fg:x="104571" fg:w="12"/><text x="89.2330%" y="847.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (20,659 samples, 17.58%)</title><rect x="71.4401%" y="869" width="17.5794%" height="15" fill="rgb(219,213,19)" fg:x="83955" fg:w="20659"/><text x="71.6901%" y="879.50">hyper::proto::h1::conn::Con..</text></g><g><title>hyper::proto::h1::conn::State::try_keep_alive (22 samples, 0.02%)</title><rect x="89.0008%" y="853" width="0.0187%" height="15" fill="rgb(252,169,30)" fg:x="104592" fg:w="22"/><text x="89.2508%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (88 samples, 0.07%)</title><rect x="89.2893%" y="837" width="0.0749%" height="15" fill="rgb(206,32,51)" fg:x="104931" fg:w="88"/><text x="89.5393%" y="847.50"></text></g><g><title>cfree@GLIBC_2.2.5 (39 samples, 0.03%)</title><rect x="89.3727%" y="837" width="0.0332%" height="15" fill="rgb(250,172,42)" fg:x="105029" fg:w="39"/><text x="89.6227%" y="847.50"></text></g><g><title>_int_free (24 samples, 0.02%)</title><rect x="89.3855%" y="821" width="0.0204%" height="15" fill="rgb(209,34,43)" fg:x="105044" fg:w="24"/><text x="89.6355%" y="831.50"></text></g><g><title>http::header::name::HeaderName::as_str (42 samples, 0.04%)</title><rect x="89.4084%" y="837" width="0.0357%" height="15" fill="rgb(223,11,35)" fg:x="105071" fg:w="42"/><text x="89.6584%" y="847.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (503 samples, 0.43%)</title><rect x="89.0196%" y="869" width="0.4280%" height="15" fill="rgb(251,219,26)" fg:x="104614" fg:w="503"/><text x="89.2696%" y="879.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (489 samples, 0.42%)</title><rect x="89.0315%" y="853" width="0.4161%" height="15" fill="rgb(231,119,3)" fg:x="104628" fg:w="489"/><text x="89.2815%" y="863.50"></text></g><g><title>malloc_consolidate (43 samples, 0.04%)</title><rect x="89.5318%" y="821" width="0.0366%" height="15" fill="rgb(216,97,11)" fg:x="105216" fg:w="43"/><text x="89.7818%" y="831.50"></text></g><g><title>cfree@GLIBC_2.2.5 (130 samples, 0.11%)</title><rect x="89.4595%" y="853" width="0.1106%" height="15" fill="rgb(223,59,9)" fg:x="105131" fg:w="130"/><text x="89.7095%" y="863.50"></text></g><g><title>_int_free (120 samples, 0.10%)</title><rect x="89.4680%" y="837" width="0.1021%" height="15" fill="rgb(233,93,31)" fg:x="105141" fg:w="120"/><text x="89.7180%" y="847.50"></text></g><g><title>hyper::proto::h1::encode::Encoder::encode_and_end (4,841 samples, 4.12%)</title><rect x="89.4476%" y="869" width="4.1194%" height="15" fill="rgb(239,81,33)" fg:x="105117" fg:w="4841"/><text x="89.6976%" y="879.50">hype..</text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (4,697 samples, 4.00%)</title><rect x="89.5701%" y="853" width="3.9968%" height="15" fill="rgb(213,120,34)" fg:x="105261" fg:w="4697"/><text x="89.8201%" y="863.50">hype..</text></g><g><title>__memmove_avx_unaligned_erms (4,674 samples, 3.98%)</title><rect x="89.5897%" y="837" width="3.9773%" height="15" fill="rgb(243,49,53)" fg:x="105284" fg:w="4674"/><text x="89.8397%" y="847.50">__me..</text></g><g><title>entry_SYSCALL_64 (55 samples, 0.05%)</title><rect x="93.6725%" y="789" width="0.0468%" height="15" fill="rgb(247,216,33)" fg:x="110082" fg:w="55"/><text x="93.9225%" y="799.50"></text></g><g><title>_raw_spin_lock_bh (20 samples, 0.02%)</title><rect x="93.9158%" y="677" width="0.0170%" height="15" fill="rgb(226,26,14)" fg:x="110368" fg:w="20"/><text x="94.1658%" y="687.50"></text></g><g><title>release_sock (15 samples, 0.01%)</title><rect x="93.9422%" y="677" width="0.0128%" height="15" fill="rgb(215,49,53)" fg:x="110399" fg:w="15"/><text x="94.1922%" y="687.50"></text></g><g><title>sock_rfree (20 samples, 0.02%)</title><rect x="93.9558%" y="677" width="0.0170%" height="15" fill="rgb(245,162,40)" fg:x="110415" fg:w="20"/><text x="94.2058%" y="687.50"></text></g><g><title>skb_attempt_defer_free (18 samples, 0.02%)</title><rect x="94.0724%" y="661" width="0.0153%" height="15" fill="rgb(229,68,17)" fg:x="110552" fg:w="18"/><text x="94.3224%" y="671.50"></text></g><g><title>check_heap_object (31 samples, 0.03%)</title><rect x="94.1269%" y="581" width="0.0264%" height="15" fill="rgb(213,182,10)" fg:x="110616" fg:w="31"/><text x="94.3769%" y="591.50"></text></g><g><title>__virt_addr_valid (15 samples, 0.01%)</title><rect x="94.1405%" y="565" width="0.0128%" height="15" fill="rgb(245,125,30)" fg:x="110632" fg:w="15"/><text x="94.3905%" y="575.50"></text></g><g><title>__check_object_size.part.0 (44 samples, 0.04%)</title><rect x="94.1175%" y="597" width="0.0374%" height="15" fill="rgb(232,202,2)" fg:x="110605" fg:w="44"/><text x="94.3675%" y="607.50"></text></g><g><title>__check_object_size (45 samples, 0.04%)</title><rect x="94.1175%" y="613" width="0.0383%" height="15" fill="rgb(237,140,51)" fg:x="110605" fg:w="45"/><text x="94.3675%" y="623.50"></text></g><g><title>_copy_to_iter (54 samples, 0.05%)</title><rect x="94.1558%" y="613" width="0.0460%" height="15" fill="rgb(236,157,25)" fg:x="110650" fg:w="54"/><text x="94.4058%" y="623.50"></text></g><g><title>rep_movs_alternative (43 samples, 0.04%)</title><rect x="94.1651%" y="597" width="0.0366%" height="15" fill="rgb(219,209,0)" fg:x="110661" fg:w="43"/><text x="94.4151%" y="607.50"></text></g><g><title>__skb_datagram_iter (134 samples, 0.11%)</title><rect x="94.0903%" y="645" width="0.1140%" height="15" fill="rgb(240,116,54)" fg:x="110573" fg:w="134"/><text x="94.3403%" y="655.50"></text></g><g><title>simple_copy_to_iter (106 samples, 0.09%)</title><rect x="94.1141%" y="629" width="0.0902%" height="15" fill="rgb(216,10,36)" fg:x="110601" fg:w="106"/><text x="94.3641%" y="639.50"></text></g><g><title>skb_copy_datagram_iter (139 samples, 0.12%)</title><rect x="94.0877%" y="661" width="0.1183%" height="15" fill="rgb(222,72,44)" fg:x="110570" fg:w="139"/><text x="94.3377%" y="671.50"></text></g><g><title>__mod_memcg_state (35 samples, 0.03%)</title><rect x="94.2111%" y="597" width="0.0298%" height="15" fill="rgb(232,159,9)" fg:x="110715" fg:w="35"/><text x="94.4611%" y="607.50"></text></g><g><title>cgroup_rstat_updated (13 samples, 0.01%)</title><rect x="94.2298%" y="581" width="0.0111%" height="15" fill="rgb(210,39,32)" fg:x="110737" fg:w="13"/><text x="94.4798%" y="591.50"></text></g><g><title>mod_memcg_state (50 samples, 0.04%)</title><rect x="94.2094%" y="613" width="0.0425%" height="15" fill="rgb(216,194,45)" fg:x="110713" fg:w="50"/><text x="94.4594%" y="623.50"></text></g><g><title>cgroup_rstat_updated (13 samples, 0.01%)</title><rect x="94.2409%" y="597" width="0.0111%" height="15" fill="rgb(218,18,35)" fg:x="110750" fg:w="13"/><text x="94.4909%" y="607.50"></text></g><g><title>mem_cgroup_uncharge_skmem (71 samples, 0.06%)</title><rect x="94.2085%" y="629" width="0.0604%" height="15" fill="rgb(207,83,51)" fg:x="110712" fg:w="71"/><text x="94.4585%" y="639.50"></text></g><g><title>refill_stock (20 samples, 0.02%)</title><rect x="94.2519%" y="613" width="0.0170%" height="15" fill="rgb(225,63,43)" fg:x="110763" fg:w="20"/><text x="94.5019%" y="623.50"></text></g><g><title>__refill_stock (13 samples, 0.01%)</title><rect x="94.2579%" y="597" width="0.0111%" height="15" fill="rgb(207,57,36)" fg:x="110770" fg:w="13"/><text x="94.5079%" y="607.50"></text></g><g><title>sock_rfree (79 samples, 0.07%)</title><rect x="94.2060%" y="661" width="0.0672%" height="15" fill="rgb(216,99,33)" fg:x="110709" fg:w="79"/><text x="94.4560%" y="671.50"></text></g><g><title>__sk_mem_reduce_allocated (79 samples, 0.07%)</title><rect x="94.2060%" y="645" width="0.0672%" height="15" fill="rgb(225,42,16)" fg:x="110709" fg:w="79"/><text x="94.4560%" y="655.50"></text></g><g><title>__tcp_cleanup_rbuf (25 samples, 0.02%)</title><rect x="94.2775%" y="645" width="0.0213%" height="15" fill="rgb(220,201,45)" fg:x="110793" fg:w="25"/><text x="94.5275%" y="655.50"></text></g><g><title>tcp_cleanup_rbuf (33 samples, 0.03%)</title><rect x="94.2732%" y="661" width="0.0281%" height="15" fill="rgb(225,33,4)" fg:x="110788" fg:w="33"/><text x="94.5232%" y="671.50"></text></g><g><title>ktime_get (14 samples, 0.01%)</title><rect x="94.3158%" y="629" width="0.0119%" height="15" fill="rgb(224,33,50)" fg:x="110838" fg:w="14"/><text x="94.5658%" y="639.50"></text></g><g><title>tcp_recvmsg_locked (437 samples, 0.37%)</title><rect x="93.9737%" y="677" width="0.3719%" height="15" fill="rgb(246,198,51)" fg:x="110436" fg:w="437"/><text x="94.2237%" y="687.50"></text></g><g><title>tcp_rcv_space_adjust (49 samples, 0.04%)</title><rect x="94.3039%" y="661" width="0.0417%" height="15" fill="rgb(205,22,4)" fg:x="110824" fg:w="49"/><text x="94.5539%" y="671.50"></text></g><g><title>tcp_mstamp_refresh (37 samples, 0.03%)</title><rect x="94.3141%" y="645" width="0.0315%" height="15" fill="rgb(206,3,8)" fg:x="110836" fg:w="37"/><text x="94.5641%" y="655.50"></text></g><g><title>read_tsc (21 samples, 0.02%)</title><rect x="94.3277%" y="629" width="0.0179%" height="15" fill="rgb(251,23,15)" fg:x="110852" fg:w="21"/><text x="94.5777%" y="639.50"></text></g><g><title>tcp_recvmsg (538 samples, 0.46%)</title><rect x="93.8920%" y="693" width="0.4578%" height="15" fill="rgb(252,88,28)" fg:x="110340" fg:w="538"/><text x="94.1420%" y="703.50"></text></g><g><title>inet_recvmsg (561 samples, 0.48%)</title><rect x="93.8758%" y="709" width="0.4774%" height="15" fill="rgb(212,127,14)" fg:x="110321" fg:w="561"/><text x="94.1258%" y="719.50"></text></g><g><title>security_socket_recvmsg (24 samples, 0.02%)</title><rect x="94.3532%" y="709" width="0.0204%" height="15" fill="rgb(247,145,37)" fg:x="110882" fg:w="24"/><text x="94.6032%" y="719.50"></text></g><g><title>apparmor_socket_recvmsg (21 samples, 0.02%)</title><rect x="94.3558%" y="693" width="0.0179%" height="15" fill="rgb(209,117,53)" fg:x="110885" fg:w="21"/><text x="94.6058%" y="703.50"></text></g><g><title>aa_sk_perm (19 samples, 0.02%)</title><rect x="94.3575%" y="677" width="0.0162%" height="15" fill="rgb(212,90,42)" fg:x="110887" fg:w="19"/><text x="94.6075%" y="687.50"></text></g><g><title>sock_recvmsg (604 samples, 0.51%)</title><rect x="93.8605%" y="725" width="0.5140%" height="15" fill="rgb(218,164,37)" fg:x="110303" fg:w="604"/><text x="94.1105%" y="735.50"></text></g><g><title>__fget_light (33 samples, 0.03%)</title><rect x="94.3753%" y="693" width="0.0281%" height="15" fill="rgb(246,65,34)" fg:x="110908" fg:w="33"/><text x="94.6253%" y="703.50"></text></g><g><title>__fdget (36 samples, 0.03%)</title><rect x="94.3745%" y="709" width="0.0306%" height="15" fill="rgb(231,100,33)" fg:x="110907" fg:w="36"/><text x="94.6245%" y="719.50"></text></g><g><title>__sys_recvfrom (695 samples, 0.59%)</title><rect x="93.8154%" y="741" width="0.5914%" height="15" fill="rgb(228,126,14)" fg:x="110250" fg:w="695"/><text x="94.0654%" y="751.50"></text></g><g><title>sockfd_lookup_light (38 samples, 0.03%)</title><rect x="94.3745%" y="725" width="0.0323%" height="15" fill="rgb(215,173,21)" fg:x="110907" fg:w="38"/><text x="94.6245%" y="735.50"></text></g><g><title>__x64_sys_recvfrom (709 samples, 0.60%)</title><rect x="93.8154%" y="757" width="0.6033%" height="15" fill="rgb(210,6,40)" fg:x="110250" fg:w="709"/><text x="94.0654%" y="767.50"></text></g><g><title>exit_to_user_mode_prepare (12 samples, 0.01%)</title><rect x="94.5762%" y="741" width="0.0102%" height="15" fill="rgb(212,48,18)" fg:x="111144" fg:w="12"/><text x="94.8262%" y="751.50"></text></g><g><title>do_syscall_64 (923 samples, 0.79%)</title><rect x="93.8018%" y="773" width="0.7854%" height="15" fill="rgb(230,214,11)" fg:x="110234" fg:w="923"/><text x="94.0518%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (185 samples, 0.16%)</title><rect x="94.4298%" y="757" width="0.1574%" height="15" fill="rgb(254,105,39)" fg:x="110972" fg:w="185"/><text x="94.6798%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,027 samples, 0.87%)</title><rect x="93.7193%" y="789" width="0.8739%" height="15" fill="rgb(245,158,5)" fg:x="110137" fg:w="1027"/><text x="93.9693%" y="799.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,317 samples, 1.12%)</title><rect x="93.6350%" y="821" width="1.1207%" height="15" fill="rgb(249,208,11)" fg:x="110038" fg:w="1317"/><text x="93.8850%" y="831.50"></text></g><g><title>__libc_recv (1,313 samples, 1.12%)</title><rect x="93.6384%" y="805" width="1.1173%" height="15" fill="rgb(210,39,28)" fg:x="110042" fg:w="1313"/><text x="93.8884%" y="815.50"></text></g><g><title>syscall_return_via_sysret (186 samples, 0.16%)</title><rect x="94.5974%" y="789" width="0.1583%" height="15" fill="rgb(211,56,53)" fg:x="111169" fg:w="186"/><text x="94.8474%" y="799.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1,438 samples, 1.22%)</title><rect x="93.5942%" y="853" width="1.2236%" height="15" fill="rgb(226,201,30)" fg:x="109990" fg:w="1438"/><text x="93.8442%" y="863.50"></text></g><g><title>_ZN5tokio3net3tcp6stream9TcpStream14poll_read_priv17h64066783f969f87eE.llvm.11917656699324148856 (1,412 samples, 1.20%)</title><rect x="93.6163%" y="837" width="1.2015%" height="15" fill="rgb(239,101,34)" fg:x="110016" fg:w="1412"/><text x="93.8663%" y="847.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (73 samples, 0.06%)</title><rect x="94.7557%" y="821" width="0.0621%" height="15" fill="rgb(226,209,5)" fg:x="111355" fg:w="73"/><text x="95.0057%" y="831.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1,620 samples, 1.38%)</title><rect x="93.5669%" y="869" width="1.3785%" height="15" fill="rgb(250,105,47)" fg:x="109958" fg:w="1620"/><text x="93.8169%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (150 samples, 0.13%)</title><rect x="94.8178%" y="853" width="0.1276%" height="15" fill="rgb(230,72,3)" fg:x="111428" fg:w="150"/><text x="95.0678%" y="863.50"></text></g><g><title>malloc (133 samples, 0.11%)</title><rect x="94.8323%" y="837" width="0.1132%" height="15" fill="rgb(232,218,39)" fg:x="111445" fg:w="133"/><text x="95.0823%" y="847.50"></text></g><g><title>_int_malloc (103 samples, 0.09%)</title><rect x="94.8578%" y="821" width="0.0876%" height="15" fill="rgb(248,166,6)" fg:x="111475" fg:w="103"/><text x="95.1078%" y="831.50"></text></g><g><title>_ZN8httparse25parse_headers_iter_uninit17h1ccca4832d4d265bE.llvm.3737690095155348513 (97 samples, 0.08%)</title><rect x="95.1182%" y="821" width="0.0825%" height="15" fill="rgb(247,89,20)" fg:x="111781" fg:w="97"/><text x="95.3682%" y="831.50"></text></g><g><title>httparse::simd::sse42::match_header_value_char_16_sse (22 samples, 0.02%)</title><rect x="95.1820%" y="805" width="0.0187%" height="15" fill="rgb(248,130,54)" fg:x="111856" fg:w="22"/><text x="95.4320%" y="815.50"></text></g><g><title>httparse::parse_version (19 samples, 0.02%)</title><rect x="95.2033%" y="821" width="0.0162%" height="15" fill="rgb(234,196,4)" fg:x="111881" fg:w="19"/><text x="95.4533%" y="831.50"></text></g><g><title>httparse::simd::avx2::parse_uri_batch_32 (14 samples, 0.01%)</title><rect x="95.2195%" y="821" width="0.0119%" height="15" fill="rgb(250,143,31)" fg:x="111900" fg:w="14"/><text x="95.4695%" y="831.50"></text></g><g><title>httparse::simd::avx2::match_url_char_32_avx (12 samples, 0.01%)</title><rect x="95.2212%" y="805" width="0.0102%" height="15" fill="rgb(211,110,34)" fg:x="111902" fg:w="12"/><text x="95.4712%" y="815.50"></text></g><g><title>httparse::iter::Bytes::peek (14 samples, 0.01%)</title><rect x="95.2365%" y="805" width="0.0119%" height="15" fill="rgb(215,124,48)" fg:x="111920" fg:w="14"/><text x="95.4865%" y="815.50"></text></g><g><title>_ZN8httparse7Request36parse_with_config_and_uninit_headers17hee7ce3546c02f99bE.llvm.3737690095155348513 (212 samples, 0.18%)</title><rect x="95.0697%" y="837" width="0.1804%" height="15" fill="rgb(216,46,13)" fg:x="111724" fg:w="212"/><text x="95.3197%" y="847.50"></text></g><g><title>httparse::skip_empty_lines (18 samples, 0.02%)</title><rect x="95.2348%" y="821" width="0.0153%" height="15" fill="rgb(205,184,25)" fg:x="111918" fg:w="18"/><text x="95.4848%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.01%)</title><rect x="95.2501%" y="837" width="0.0145%" height="15" fill="rgb(228,1,10)" fg:x="111936" fg:w="17"/><text x="95.5001%" y="847.50"></text></g><g><title>bytes::bytes::Bytes::slice (24 samples, 0.02%)</title><rect x="95.2688%" y="837" width="0.0204%" height="15" fill="rgb(213,116,27)" fg:x="111958" fg:w="24"/><text x="95.5188%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (46 samples, 0.04%)</title><rect x="95.2892%" y="837" width="0.0391%" height="15" fill="rgb(241,95,50)" fg:x="111982" fg:w="46"/><text x="95.5392%" y="847.50"></text></g><g><title>malloc (23 samples, 0.02%)</title><rect x="95.3088%" y="821" width="0.0196%" height="15" fill="rgb(238,48,32)" fg:x="112005" fg:w="23"/><text x="95.5588%" y="831.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert_entry (13 samples, 0.01%)</title><rect x="95.3573%" y="821" width="0.0111%" height="15" fill="rgb(235,113,49)" fg:x="112062" fg:w="13"/><text x="95.6073%" y="831.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append2 (45 samples, 0.04%)</title><rect x="95.3377%" y="837" width="0.0383%" height="15" fill="rgb(205,127,43)" fg:x="112039" fg:w="45"/><text x="95.5877%" y="847.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (51 samples, 0.04%)</title><rect x="95.3760%" y="837" width="0.0434%" height="15" fill="rgb(250,162,2)" fg:x="112084" fg:w="51"/><text x="95.6260%" y="847.50"></text></g><g><title>http::header::name::parse_hdr (42 samples, 0.04%)</title><rect x="95.3837%" y="821" width="0.0357%" height="15" fill="rgb(220,13,41)" fg:x="112093" fg:w="42"/><text x="95.6337%" y="831.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (33 samples, 0.03%)</title><rect x="95.3913%" y="805" width="0.0281%" height="15" fill="rgb(249,221,25)" fg:x="112102" fg:w="33"/><text x="95.6413%" y="815.50"></text></g><g><title>http::method::Method::from_bytes (25 samples, 0.02%)</title><rect x="95.4194%" y="837" width="0.0213%" height="15" fill="rgb(215,208,19)" fg:x="112135" fg:w="25"/><text x="95.6694%" y="847.50"></text></g><g><title>_ZN4core3ptr40drop_in_place$LT$bytes..bytes..Bytes$GT$17h3749058b6bc6eea5E.llvm.11931941952298071965 (14 samples, 0.01%)</title><rect x="95.4484%" y="821" width="0.0119%" height="15" fill="rgb(236,175,2)" fg:x="112169" fg:w="14"/><text x="95.6984%" y="831.50"></text></g><g><title>http::uri::Uri::from_shared (38 samples, 0.03%)</title><rect x="95.4407%" y="837" width="0.0323%" height="15" fill="rgb(241,52,2)" fg:x="112160" fg:w="38"/><text x="95.6907%" y="847.50"></text></g><g><title>cfree@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="95.4603%" y="821" width="0.0128%" height="15" fill="rgb(248,140,14)" fg:x="112183" fg:w="15"/><text x="95.7103%" y="831.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (29,837 samples, 25.39%)</title><rect x="70.1110%" y="901" width="25.3893%" height="15" fill="rgb(253,22,42)" fg:x="82393" fg:w="29837"/><text x="70.3610%" y="911.50">&lt;hyper::server::conn::http1::UpgradeableC..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (29,788 samples, 25.35%)</title><rect x="70.1527%" y="885" width="25.3476%" height="15" fill="rgb(234,61,47)" fg:x="82442" fg:w="29788"/><text x="70.4027%" y="895.50">hyper::proto::h1::dispatch::Dispatcher&lt;D..</text></g><g><title>hyper::proto::h1::role::parse_headers (643 samples, 0.55%)</title><rect x="94.9531%" y="869" width="0.5472%" height="15" fill="rgb(208,226,15)" fg:x="111587" fg:w="643"/><text x="95.2031%" y="879.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (634 samples, 0.54%)</title><rect x="94.9608%" y="853" width="0.5395%" height="15" fill="rgb(217,221,4)" fg:x="111596" fg:w="634"/><text x="95.2108%" y="863.50"></text></g><g><title>malloc (32 samples, 0.03%)</title><rect x="95.4730%" y="837" width="0.0272%" height="15" fill="rgb(212,174,34)" fg:x="112198" fg:w="32"/><text x="95.7230%" y="847.50"></text></g><g><title>&lt;deno_unsync::task::MaskFutureAsSend&lt;F&gt; as core::future::future::Future&gt;::poll (30,031 samples, 25.55%)</title><rect x="69.9765%" y="917" width="25.5544%" height="15" fill="rgb(253,83,4)" fg:x="82235" fg:w="30031"/><text x="70.2265%" y="927.50">&lt;deno_unsync::task::MaskFutureAsSend&lt;F&gt; a..</text></g><g><title>deno_core::async_cancel::internal::Node::register (35 samples, 0.03%)</title><rect x="95.5011%" y="901" width="0.0298%" height="15" fill="rgb(250,195,49)" fg:x="112231" fg:w="35"/><text x="95.7511%" y="911.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (26 samples, 0.02%)</title><rect x="95.5411%" y="917" width="0.0221%" height="15" fill="rgb(241,192,25)" fg:x="112278" fg:w="26"/><text x="95.7911%" y="927.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (27 samples, 0.02%)</title><rect x="95.5632%" y="917" width="0.0230%" height="15" fill="rgb(208,124,10)" fg:x="112304" fg:w="27"/><text x="95.8132%" y="927.50"></text></g><g><title>_ZN4core3ptr113drop_in_place$LT$alloc..vec..Vec$LT$http..header..map..ExtraValue$LT$http..header..value..HeaderValue$GT$$GT$$GT$17h0d118a8b278113c3E.llvm.14137614649970884473 (14 samples, 0.01%)</title><rect x="95.5939%" y="917" width="0.0119%" height="15" fill="rgb(222,33,0)" fg:x="112340" fg:w="14"/><text x="95.8439%" y="927.50"></text></g><g><title>_ZN4core3ptr57drop_in_place$LT$deno_http..service..RequestBodyState$GT$17hef409e55819807baE.llvm.14137614649970884473 (12 samples, 0.01%)</title><rect x="95.6100%" y="917" width="0.0102%" height="15" fill="rgb(234,209,28)" fg:x="112359" fg:w="12"/><text x="95.8600%" y="927.50"></text></g><g><title>__memmove_avx_unaligned_erms (26 samples, 0.02%)</title><rect x="95.6645%" y="917" width="0.0221%" height="15" fill="rgb(224,11,23)" fg:x="112423" fg:w="26"/><text x="95.9145%" y="927.50"></text></g><g><title>bytes::bytes::Bytes::slice (18 samples, 0.02%)</title><rect x="95.6892%" y="917" width="0.0153%" height="15" fill="rgb(232,99,1)" fg:x="112452" fg:w="18"/><text x="95.9392%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (13 samples, 0.01%)</title><rect x="95.7368%" y="917" width="0.0111%" height="15" fill="rgb(237,95,45)" fg:x="112508" fg:w="13"/><text x="95.9868%" y="927.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (21 samples, 0.02%)</title><rect x="95.8917%" y="901" width="0.0179%" height="15" fill="rgb(208,109,11)" fg:x="112690" fg:w="21"/><text x="96.1417%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="95.9096%" y="901" width="0.0136%" height="15" fill="rgb(216,190,48)" fg:x="112711" fg:w="16"/><text x="96.1596%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (20 samples, 0.02%)</title><rect x="95.9232%" y="901" width="0.0170%" height="15" fill="rgb(251,171,36)" fg:x="112727" fg:w="20"/><text x="96.1732%" y="911.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_poll (18 samples, 0.02%)</title><rect x="95.9427%" y="901" width="0.0153%" height="15" fill="rgb(230,62,22)" fg:x="112750" fg:w="18"/><text x="96.1927%" y="911.50"></text></g><g><title>std::sys::unix::time::Timespec::now (18 samples, 0.02%)</title><rect x="95.9598%" y="869" width="0.0153%" height="15" fill="rgb(225,114,35)" fg:x="112770" fg:w="18"/><text x="96.2098%" y="879.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (18 samples, 0.02%)</title><rect x="95.9598%" y="853" width="0.0153%" height="15" fill="rgb(215,118,42)" fg:x="112770" fg:w="18"/><text x="96.2098%" y="863.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_processing_scheduled_tasks (22 samples, 0.02%)</title><rect x="95.9581%" y="901" width="0.0187%" height="15" fill="rgb(243,119,21)" fg:x="112768" fg:w="22"/><text x="96.2081%" y="911.50"></text></g><g><title>std::time::Instant::elapsed (21 samples, 0.02%)</title><rect x="95.9589%" y="885" width="0.0179%" height="15" fill="rgb(252,177,53)" fg:x="112769" fg:w="21"/><text x="96.2089%" y="895.50"></text></g><g><title>_ZN5tokio7runtime2io12scheduled_io11ScheduledIo4wake17h11389753db3fa480E.llvm.11917656699324148856 (67 samples, 0.06%)</title><rect x="96.0551%" y="853" width="0.0570%" height="15" fill="rgb(237,209,29)" fg:x="112882" fg:w="67"/><text x="96.3051%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (37 samples, 0.03%)</title><rect x="96.0806%" y="837" width="0.0315%" height="15" fill="rgb(212,65,23)" fg:x="112912" fg:w="37"/><text x="96.3306%" y="847.50"></text></g><g><title>__fget_light (37 samples, 0.03%)</title><rect x="96.1691%" y="741" width="0.0315%" height="15" fill="rgb(230,222,46)" fg:x="113016" fg:w="37"/><text x="96.4191%" y="751.50"></text></g><g><title>__fdget (38 samples, 0.03%)</title><rect x="96.1691%" y="757" width="0.0323%" height="15" fill="rgb(215,135,32)" fg:x="113016" fg:w="38"/><text x="96.4191%" y="767.50"></text></g><g><title>__put_user_nocheck_4 (18 samples, 0.02%)</title><rect x="96.2082%" y="741" width="0.0153%" height="15" fill="rgb(246,101,22)" fg:x="113062" fg:w="18"/><text x="96.4582%" y="751.50"></text></g><g><title>tcp_poll (32 samples, 0.03%)</title><rect x="96.3146%" y="693" width="0.0272%" height="15" fill="rgb(206,107,13)" fg:x="113187" fg:w="32"/><text x="96.5646%" y="703.50"></text></g><g><title>ep_item_poll.isra.0 (91 samples, 0.08%)</title><rect x="96.2653%" y="725" width="0.0774%" height="15" fill="rgb(250,100,44)" fg:x="113129" fg:w="91"/><text x="96.5153%" y="735.50"></text></g><g><title>sock_poll (73 samples, 0.06%)</title><rect x="96.2806%" y="709" width="0.0621%" height="15" fill="rgb(231,147,38)" fg:x="113147" fg:w="73"/><text x="96.5306%" y="719.50"></text></g><g><title>ep_send_events (145 samples, 0.12%)</title><rect x="96.2338%" y="741" width="0.1234%" height="15" fill="rgb(229,8,40)" fg:x="113092" fg:w="145"/><text x="96.4838%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (14 samples, 0.01%)</title><rect x="96.3606%" y="677" width="0.0119%" height="15" fill="rgb(221,135,30)" fg:x="113241" fg:w="14"/><text x="96.6106%" y="687.50"></text></g><g><title>__perf_event_task_sched_in (14 samples, 0.01%)</title><rect x="96.3606%" y="661" width="0.0119%" height="15" fill="rgb(249,193,18)" fg:x="113241" fg:w="14"/><text x="96.6106%" y="671.50"></text></g><g><title>perf_ctx_enable (14 samples, 0.01%)</title><rect x="96.3606%" y="645" width="0.0119%" height="15" fill="rgb(209,133,39)" fg:x="113241" fg:w="14"/><text x="96.6106%" y="655.50"></text></g><g><title>x86_pmu_enable (14 samples, 0.01%)</title><rect x="96.3606%" y="629" width="0.0119%" height="15" fill="rgb(232,100,14)" fg:x="113241" fg:w="14"/><text x="96.6106%" y="639.50"></text></g><g><title>intel_pmu_enable_all (14 samples, 0.01%)</title><rect x="96.3606%" y="613" width="0.0119%" height="15" fill="rgb(224,185,1)" fg:x="113241" fg:w="14"/><text x="96.6106%" y="623.50"></text></g><g><title>native_write_msr (14 samples, 0.01%)</title><rect x="96.3606%" y="597" width="0.0119%" height="15" fill="rgb(223,139,8)" fg:x="113241" fg:w="14"/><text x="96.6106%" y="607.50"></text></g><g><title>schedule_hrtimeout_range (15 samples, 0.01%)</title><rect x="96.3606%" y="741" width="0.0128%" height="15" fill="rgb(232,213,38)" fg:x="113241" fg:w="15"/><text x="96.6106%" y="751.50"></text></g><g><title>schedule_hrtimeout_range_clock (15 samples, 0.01%)</title><rect x="96.3606%" y="725" width="0.0128%" height="15" fill="rgb(207,94,22)" fg:x="113241" fg:w="15"/><text x="96.6106%" y="735.50"></text></g><g><title>schedule (15 samples, 0.01%)</title><rect x="96.3606%" y="709" width="0.0128%" height="15" fill="rgb(219,183,54)" fg:x="113241" fg:w="15"/><text x="96.6106%" y="719.50"></text></g><g><title>__schedule (15 samples, 0.01%)</title><rect x="96.3606%" y="693" width="0.0128%" height="15" fill="rgb(216,185,54)" fg:x="113241" fg:w="15"/><text x="96.6106%" y="703.50"></text></g><g><title>ep_poll (211 samples, 0.18%)</title><rect x="96.2023%" y="757" width="0.1795%" height="15" fill="rgb(254,217,39)" fg:x="113055" fg:w="211"/><text x="96.4523%" y="767.50"></text></g><g><title>do_epoll_wait (257 samples, 0.22%)</title><rect x="96.1640%" y="773" width="0.2187%" height="15" fill="rgb(240,178,23)" fg:x="113010" fg:w="257"/><text x="96.4140%" y="783.50"></text></g><g><title>__x64_sys_epoll_wait (280 samples, 0.24%)</title><rect x="96.1580%" y="789" width="0.2383%" height="15" fill="rgb(218,11,47)" fg:x="113003" fg:w="280"/><text x="96.4080%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (339 samples, 0.29%)</title><rect x="96.1368%" y="821" width="0.2885%" height="15" fill="rgb(218,51,51)" fg:x="112978" fg:w="339"/><text x="96.3868%" y="831.50"></text></g><g><title>do_syscall_64 (317 samples, 0.27%)</title><rect x="96.1555%" y="805" width="0.2697%" height="15" fill="rgb(238,126,27)" fg:x="113000" fg:w="317"/><text x="96.4055%" y="815.50"></text></g><g><title>syscall_exit_to_user_mode (29 samples, 0.02%)</title><rect x="96.4006%" y="789" width="0.0247%" height="15" fill="rgb(249,202,22)" fg:x="113288" fg:w="29"/><text x="96.6506%" y="799.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (495 samples, 0.42%)</title><rect x="96.0253%" y="869" width="0.4212%" height="15" fill="rgb(254,195,49)" fg:x="112847" fg:w="495"/><text x="96.2753%" y="879.50"></text></g><g><title>mio::poll::Poll::poll (392 samples, 0.33%)</title><rect x="96.1129%" y="853" width="0.3336%" height="15" fill="rgb(208,123,14)" fg:x="112950" fg:w="392"/><text x="96.3629%" y="863.50"></text></g><g><title>epoll_wait (390 samples, 0.33%)</title><rect x="96.1146%" y="837" width="0.3319%" height="15" fill="rgb(224,200,8)" fg:x="112952" fg:w="390"/><text x="96.3646%" y="847.50"></text></g><g><title>syscall_return_via_sysret (25 samples, 0.02%)</title><rect x="96.4252%" y="821" width="0.0213%" height="15" fill="rgb(217,61,36)" fg:x="113317" fg:w="25"/><text x="96.6752%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (20 samples, 0.02%)</title><rect x="96.4644%" y="853" width="0.0170%" height="15" fill="rgb(206,35,45)" fg:x="113363" fg:w="20"/><text x="96.7144%" y="863.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (44 samples, 0.04%)</title><rect x="96.4465%" y="869" width="0.0374%" height="15" fill="rgb(217,65,33)" fg:x="113342" fg:w="44"/><text x="96.6965%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (606 samples, 0.52%)</title><rect x="95.9802%" y="901" width="0.5157%" height="15" fill="rgb(222,158,48)" fg:x="112794" fg:w="606"/><text x="96.2302%" y="911.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (593 samples, 0.50%)</title><rect x="95.9913%" y="885" width="0.5046%" height="15" fill="rgb(254,2,54)" fg:x="112807" fg:w="593"/><text x="96.2413%" y="895.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (14 samples, 0.01%)</title><rect x="96.4839%" y="869" width="0.0119%" height="15" fill="rgb(250,143,38)" fg:x="113386" fg:w="14"/><text x="96.7339%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Core::next_task (56 samples, 0.05%)</title><rect x="96.4959%" y="901" width="0.0477%" height="15" fill="rgb(248,25,0)" fg:x="113400" fg:w="56"/><text x="96.7459%" y="911.50"></text></g><g><title>&lt;deno_unsync::task::MaskFutureAsSend&lt;F&gt; as core::future::future::Future&gt;::poll (29 samples, 0.02%)</title><rect x="96.5835%" y="885" width="0.0247%" height="15" fill="rgb(206,152,27)" fg:x="113503" fg:w="29"/><text x="96.8335%" y="895.50"></text></g><g><title>deno::spawn_subcommand::_{{closure}} (26 samples, 0.02%)</title><rect x="96.5861%" y="869" width="0.0221%" height="15" fill="rgb(240,77,30)" fg:x="113506" fg:w="26"/><text x="96.8361%" y="879.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="96.7384%" y="837" width="0.0119%" height="15" fill="rgb(231,5,3)" fg:x="113685" fg:w="14"/><text x="96.9884%" y="847.50"></text></g><g><title>&lt;deno_core::runtime::op_driver::future_arena::DynFutureInfo&lt;T,C,M,F&gt; as core::future::future::Future&gt;::poll (89 samples, 0.08%)</title><rect x="96.6788%" y="869" width="0.0757%" height="15" fill="rgb(207,226,32)" fg:x="113615" fg:w="89"/><text x="96.9288%" y="879.50"></text></g><g><title>deno_http::http_next::op_http_wait::call::_{{closure}} (84 samples, 0.07%)</title><rect x="96.6831%" y="853" width="0.0715%" height="15" fill="rgb(222,207,47)" fg:x="113620" fg:w="84"/><text x="96.9331%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;deno_core::runtime::op_driver::future_arena::FutureAllocation&lt;deno_core::runtime::op_driver::op_results::PendingOp&lt;deno_core::runtime::op_driver::op_results::V8OpMappingContext&gt;,deno_core::runtime::op_driver::op_results::PendingOpInfo&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="96.7554%" y="869" width="0.0187%" height="15" fill="rgb(229,115,45)" fg:x="113705" fg:w="22"/><text x="97.0054%" y="879.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (17 samples, 0.01%)</title><rect x="96.7741%" y="869" width="0.0145%" height="15" fill="rgb(224,191,6)" fg:x="113727" fg:w="17"/><text x="97.0241%" y="879.50"></text></g><g><title>tokio::runtime::task::raw::schedule (15 samples, 0.01%)</title><rect x="96.7886%" y="869" width="0.0128%" height="15" fill="rgb(230,227,24)" fg:x="113744" fg:w="15"/><text x="97.0386%" y="879.50"></text></g><g><title>deno_core::runtime::op_driver::futures_unordered_driver::poll_task::_{{closure}} (242 samples, 0.21%)</title><rect x="96.6133%" y="885" width="0.2059%" height="15" fill="rgb(228,80,19)" fg:x="113538" fg:w="242"/><text x="96.8633%" y="895.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (21 samples, 0.02%)</title><rect x="96.8013%" y="869" width="0.0179%" height="15" fill="rgb(247,229,0)" fg:x="113759" fg:w="21"/><text x="97.0513%" y="879.50"></text></g><g><title>deno::main (1,221 samples, 1.04%)</title><rect x="95.7836%" y="917" width="1.0390%" height="15" fill="rgb(237,194,15)" fg:x="112563" fg:w="1221"/><text x="96.0336%" y="927.50"></text></g><g><title>tokio::runtime::task::raw::poll (328 samples, 0.28%)</title><rect x="96.5435%" y="901" width="0.2791%" height="15" fill="rgb(219,203,20)" fg:x="113456" fg:w="328"/><text x="96.7935%" y="911.50"></text></g><g><title>_ZN2v85scope4data9ScopeData14try_exit_scope17h865bd31857dc58adE.llvm.2939411559403687827 (24 samples, 0.02%)</title><rect x="96.9460%" y="837" width="0.0204%" height="15" fill="rgb(234,128,8)" fg:x="113929" fg:w="24"/><text x="97.1960%" y="847.50"></text></g><g><title>_ZN4core3ptr59drop_in_place$LT$v8..scope..data..ScopeTypeSpecificData$GT$17ha2882d932335d1fbE.llvm.2939411559403687827 (21 samples, 0.02%)</title><rect x="96.9486%" y="821" width="0.0179%" height="15" fill="rgb(248,202,8)" fg:x="113932" fg:w="21"/><text x="97.1986%" y="831.50"></text></g><g><title>deno_core::modules::map::ModuleMap::poll_progress (18 samples, 0.02%)</title><rect x="96.9749%" y="837" width="0.0153%" height="15" fill="rgb(206,104,37)" fg:x="113963" fg:w="18"/><text x="97.2249%" y="847.50"></text></g><g><title>v8::internal::Factory::AllocateRawWithAllocationSite (16 samples, 0.01%)</title><rect x="97.0949%" y="757" width="0.0136%" height="15" fill="rgb(223,8,27)" fg:x="114104" fg:w="16"/><text x="97.3449%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.03%)</title><rect x="97.0932%" y="821" width="0.0315%" height="15" fill="rgb(216,217,28)" fg:x="114102" fg:w="37"/><text x="97.3432%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.03%)</title><rect x="97.0932%" y="805" width="0.0315%" height="15" fill="rgb(249,199,1)" fg:x="114102" fg:w="37"/><text x="97.3432%" y="815.50"></text></g><g><title>v8::External::New (37 samples, 0.03%)</title><rect x="97.0932%" y="789" width="0.0315%" height="15" fill="rgb(240,85,17)" fg:x="114102" fg:w="37"/><text x="97.3432%" y="799.50"></text></g><g><title>v8::internal::Factory::NewExternal (37 samples, 0.03%)</title><rect x="97.0932%" y="773" width="0.0315%" height="15" fill="rgb(206,108,45)" fg:x="114102" fg:w="37"/><text x="97.3432%" y="783.50"></text></g><g><title>Builtins_CallFunction_ReceiverIsAny (31 samples, 0.03%)</title><rect x="97.2251%" y="757" width="0.0264%" height="15" fill="rgb(245,210,41)" fg:x="114257" fg:w="31"/><text x="97.4751%" y="767.50"></text></g><g><title>Builtins_CallFunction_ReceiverIsNullOrUndefined (12 samples, 0.01%)</title><rect x="97.2685%" y="741" width="0.0102%" height="15" fill="rgb(206,13,37)" fg:x="114308" fg:w="12"/><text x="97.5185%" y="751.50"></text></g><g><title>Builtins_JSEntry (75 samples, 0.06%)</title><rect x="97.2234%" y="773" width="0.0638%" height="15" fill="rgb(250,61,18)" fg:x="114255" fg:w="75"/><text x="97.4734%" y="783.50"></text></g><g><title>Builtins_JSEntryTrampoline (35 samples, 0.03%)</title><rect x="97.2574%" y="757" width="0.0298%" height="15" fill="rgb(235,172,48)" fg:x="114295" fg:w="35"/><text x="97.5074%" y="767.50"></text></g><g><title>v8::internal::Execution::Call (158 samples, 0.13%)</title><rect x="97.1570%" y="805" width="0.1344%" height="15" fill="rgb(249,201,17)" fg:x="114177" fg:w="158"/><text x="97.4070%" y="815.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (147 samples, 0.13%)</title><rect x="97.1664%" y="789" width="0.1251%" height="15" fill="rgb(219,208,6)" fg:x="114188" fg:w="147"/><text x="97.4164%" y="799.50"></text></g><g><title>v8::Function::Call (191 samples, 0.16%)</title><rect x="97.1358%" y="821" width="0.1625%" height="15" fill="rgb(248,31,23)" fg:x="114152" fg:w="191"/><text x="97.3858%" y="831.50"></text></g><g><title>deno_core::runtime::jsruntime::JsRuntime::do_js_event_loop_tick_realm (374 samples, 0.32%)</title><rect x="96.9902%" y="837" width="0.3182%" height="15" fill="rgb(245,15,42)" fg:x="113981" fg:w="374"/><text x="97.2402%" y="847.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (17 samples, 0.01%)</title><rect x="97.3468%" y="821" width="0.0145%" height="15" fill="rgb(222,217,39)" fg:x="114400" fg:w="17"/><text x="97.5968%" y="831.50"></text></g><g><title>v8::internal::wasm::WasmEngine::HasRunningCompileJob (23 samples, 0.02%)</title><rect x="97.3468%" y="837" width="0.0196%" height="15" fill="rgb(210,219,27)" fg:x="114400" fg:w="23"/><text x="97.5968%" y="847.50"></text></g><g><title>v8::internal::IncrementalMarkingJob::Task::RunInternal (12 samples, 0.01%)</title><rect x="97.3961%" y="821" width="0.0102%" height="15" fill="rgb(252,166,36)" fg:x="114458" fg:w="12"/><text x="97.6461%" y="831.50"></text></g><g><title>hack_digit (12 samples, 0.01%)</title><rect x="97.5323%" y="629" width="0.0102%" height="15" fill="rgb(245,132,34)" fg:x="114618" fg:w="12"/><text x="97.7823%" y="639.50"></text></g><g><title>__GI___printf_fp_l (78 samples, 0.07%)</title><rect x="97.4770%" y="645" width="0.0664%" height="15" fill="rgb(236,54,3)" fg:x="114553" fg:w="78"/><text x="97.7270%" y="655.50"></text></g><g><title>v8::base::OS::VSNPrintF (138 samples, 0.12%)</title><rect x="97.4387%" y="693" width="0.1174%" height="15" fill="rgb(241,173,43)" fg:x="114508" fg:w="138"/><text x="97.6887%" y="703.50"></text></g><g><title>__vsnprintf_internal (135 samples, 0.11%)</title><rect x="97.4412%" y="677" width="0.1149%" height="15" fill="rgb(215,190,9)" fg:x="114511" fg:w="135"/><text x="97.6912%" y="687.50"></text></g><g><title>__vfprintf_internal (129 samples, 0.11%)</title><rect x="97.4463%" y="661" width="0.1098%" height="15" fill="rgb(242,101,16)" fg:x="114517" fg:w="129"/><text x="97.6963%" y="671.50"></text></g><g><title>v8::internal::GCTracer::Output (141 samples, 0.12%)</title><rect x="97.4387%" y="709" width="0.1200%" height="15" fill="rgb(223,190,21)" fg:x="114508" fg:w="141"/><text x="97.6887%" y="719.50"></text></g><g><title>v8::internal::GCTracer::StopObservablePause (166 samples, 0.14%)</title><rect x="97.4200%" y="741" width="0.1413%" height="15" fill="rgb(215,228,25)" fg:x="114486" fg:w="166"/><text x="97.6700%" y="751.50"></text></g><g><title>v8::internal::GCTracer::Print (159 samples, 0.14%)</title><rect x="97.4259%" y="725" width="0.1353%" height="15" fill="rgb(225,36,22)" fg:x="114493" fg:w="159"/><text x="97.6759%" y="735.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionPrologue (12 samples, 0.01%)</title><rect x="97.5748%" y="741" width="0.0102%" height="15" fill="rgb(251,106,46)" fg:x="114668" fg:w="12"/><text x="97.8248%" y="751.50"></text></g><g><title>v8::internal::Heap::NewSpaceAllocationCounter (216 samples, 0.18%)</title><rect x="97.6004%" y="709" width="0.1838%" height="15" fill="rgb(208,90,1)" fg:x="114698" fg:w="216"/><text x="97.8504%" y="719.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AllocatedSinceLastGC (216 samples, 0.18%)</title><rect x="97.6004%" y="693" width="0.1838%" height="15" fill="rgb(243,10,4)" fg:x="114698" fg:w="216"/><text x="97.8504%" y="703.50"></text></g><g><title>v8::internal::GCTracer::StartInSafepoint (227 samples, 0.19%)</title><rect x="97.5970%" y="725" width="0.1932%" height="15" fill="rgb(212,137,27)" fg:x="114694" fg:w="227"/><text x="97.8470%" y="735.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (52 samples, 0.04%)</title><rect x="97.8037%" y="725" width="0.0442%" height="15" fill="rgb(231,220,49)" fg:x="114937" fg:w="52"/><text x="98.0537%" y="735.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::MakeAllPagesInFromSpaceIterable (36 samples, 0.03%)</title><rect x="97.8174%" y="709" width="0.0306%" height="15" fill="rgb(237,96,20)" fg:x="114953" fg:w="36"/><text x="98.0674%" y="719.50"></text></g><g><title>v8::internal::Heap::CreateFillerObjectAt (35 samples, 0.03%)</title><rect x="97.8182%" y="693" width="0.0298%" height="15" fill="rgb(239,229,30)" fg:x="114954" fg:w="35"/><text x="98.0682%" y="703.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionPrologueInSafepoint (27 samples, 0.02%)</title><rect x="97.8480%" y="725" width="0.0230%" height="15" fill="rgb(219,65,33)" fg:x="114989" fg:w="27"/><text x="98.0980%" y="735.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AllocatedSinceLastGC (16 samples, 0.01%)</title><rect x="97.8573%" y="709" width="0.0136%" height="15" fill="rgb(243,134,7)" fg:x="115000" fg:w="16"/><text x="98.1073%" y="719.50"></text></g><g><title>cfree@GLIBC_2.2.5 (12 samples, 0.01%)</title><rect x="97.9110%" y="693" width="0.0102%" height="15" fill="rgb(216,177,54)" fg:x="115063" fg:w="12"/><text x="98.1610%" y="703.50"></text></g><g><title>operator new (21 samples, 0.02%)</title><rect x="97.9246%" y="693" width="0.0179%" height="15" fill="rgb(211,160,20)" fg:x="115079" fg:w="21"/><text x="98.1746%" y="703.50"></text></g><g><title>malloc (21 samples, 0.02%)</title><rect x="97.9246%" y="677" width="0.0179%" height="15" fill="rgb(239,85,39)" fg:x="115079" fg:w="21"/><text x="98.1746%" y="687.50"></text></g><g><title>_int_malloc (16 samples, 0.01%)</title><rect x="97.9288%" y="661" width="0.0136%" height="15" fill="rgb(232,125,22)" fg:x="115084" fg:w="16"/><text x="98.1788%" y="671.50"></text></g><g><title>v8::internal::ConcurrentMarking::ClearMemoryChunkData (44 samples, 0.04%)</title><rect x="97.9561%" y="693" width="0.0374%" height="15" fill="rgb(244,57,34)" fg:x="115116" fg:w="44"/><text x="98.2061%" y="703.50"></text></g><g><title>unsigned long std::Cr::__hash_table&lt;std::Cr::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::Cr::__unordered_map_hasher&lt;v8::internal::MemoryChunk*, std::Cr::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, v8::base::hash&lt;v8::internal::MemoryChunk*&gt;, std::Cr::equal_to&lt;v8::internal::MemoryChunk*&gt;, true&gt;, std::Cr::__unordered_map_equal&lt;v8::internal::MemoryChunk*, std::Cr::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::Cr::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::base::hash&lt;v8::internal::MemoryChunk*&gt;, true&gt;, std::Cr::allocator&lt;std::Cr::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt; &gt; &gt;::__erase_unique&lt;v8::internal::MemoryChunk*&gt; (37 samples, 0.03%)</title><rect x="97.9620%" y="677" width="0.0315%" height="15" fill="rgb(214,203,32)" fg:x="115123" fg:w="37"/><text x="98.2120%" y="687.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (23 samples, 0.02%)</title><rect x="98.0114%" y="677" width="0.0196%" height="15" fill="rgb(207,58,43)" fg:x="115181" fg:w="23"/><text x="98.2614%" y="687.50"></text></g><g><title>v8::internal::SerializerDeserializer::IterateSharedHeapObjectCache (25 samples, 0.02%)</title><rect x="98.0335%" y="677" width="0.0213%" height="15" fill="rgb(215,193,15)" fg:x="115207" fg:w="25"/><text x="98.2835%" y="687.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (12 samples, 0.01%)</title><rect x="98.0446%" y="661" width="0.0102%" height="15" fill="rgb(232,15,44)" fg:x="115220" fg:w="12"/><text x="98.2946%" y="671.50"></text></g><g><title>v8::internal::SerializerDeserializer::IterateStartupObjectCache (444 samples, 0.38%)</title><rect x="98.0548%" y="677" width="0.3778%" height="15" fill="rgb(212,3,48)" fg:x="115232" fg:w="444"/><text x="98.3048%" y="687.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (156 samples, 0.13%)</title><rect x="98.2998%" y="661" width="0.1327%" height="15" fill="rgb(218,128,7)" fg:x="115520" fg:w="156"/><text x="98.5498%" y="671.50"></text></g><g><title>v8::internal::Heap::IterateRoots (516 samples, 0.44%)</title><rect x="97.9952%" y="693" width="0.4391%" height="15" fill="rgb(226,216,39)" fg:x="115162" fg:w="516"/><text x="98.2452%" y="703.50"></text></g><g><title>v8::internal::OldGenerationMemoryChunkIterator::next (119 samples, 0.10%)</title><rect x="98.4419%" y="693" width="0.1013%" height="15" fill="rgb(243,47,51)" fg:x="115687" fg:w="119"/><text x="98.6919%" y="703.50"></text></g><g><title>v8::internal::EvacuationAllocator::Finalize (15 samples, 0.01%)</title><rect x="98.5483%" y="677" width="0.0128%" height="15" fill="rgb(241,183,40)" fg:x="115812" fg:w="15"/><text x="98.7983%" y="687.50"></text></g><g><title>v8::internal::Scavenger::Finalize (24 samples, 0.02%)</title><rect x="98.5432%" y="693" width="0.0204%" height="15" fill="rgb(231,217,32)" fg:x="115806" fg:w="24"/><text x="98.7932%" y="703.50"></text></g><g><title>operator new (19 samples, 0.02%)</title><rect x="98.5772%" y="677" width="0.0162%" height="15" fill="rgb(229,61,38)" fg:x="115846" fg:w="19"/><text x="98.8272%" y="687.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="98.5772%" y="661" width="0.0162%" height="15" fill="rgb(225,210,5)" fg:x="115846" fg:w="19"/><text x="98.8272%" y="671.50"></text></g><g><title>_int_malloc (18 samples, 0.02%)</title><rect x="98.5781%" y="645" width="0.0153%" height="15" fill="rgb(231,79,45)" fg:x="115847" fg:w="18"/><text x="98.8281%" y="655.50"></text></g><g><title>operator new (42 samples, 0.04%)</title><rect x="98.6215%" y="629" width="0.0357%" height="15" fill="rgb(224,100,7)" fg:x="115898" fg:w="42"/><text x="98.8715%" y="639.50"></text></g><g><title>malloc (42 samples, 0.04%)</title><rect x="98.6215%" y="613" width="0.0357%" height="15" fill="rgb(241,198,18)" fg:x="115898" fg:w="42"/><text x="98.8715%" y="623.50"></text></g><g><title>_int_malloc (21 samples, 0.02%)</title><rect x="98.6394%" y="597" width="0.0179%" height="15" fill="rgb(252,97,53)" fg:x="115919" fg:w="21"/><text x="98.8894%" y="607.50"></text></g><g><title>v8::internal::FreeList::CreateFreeList (103 samples, 0.09%)</title><rect x="98.6206%" y="645" width="0.0876%" height="15" fill="rgb(220,88,7)" fg:x="115897" fg:w="103"/><text x="98.8706%" y="655.50"></text></g><g><title>v8::internal::FreeListManyCached::FreeListManyCached (60 samples, 0.05%)</title><rect x="98.6572%" y="629" width="0.0511%" height="15" fill="rgb(213,176,14)" fg:x="115940" fg:w="60"/><text x="98.9072%" y="639.50"></text></g><g><title>operator new (40 samples, 0.03%)</title><rect x="98.6742%" y="613" width="0.0340%" height="15" fill="rgb(246,73,7)" fg:x="115960" fg:w="40"/><text x="98.9242%" y="623.50"></text></g><g><title>malloc (39 samples, 0.03%)</title><rect x="98.6751%" y="597" width="0.0332%" height="15" fill="rgb(245,64,36)" fg:x="115961" fg:w="39"/><text x="98.9251%" y="607.50"></text></g><g><title>_int_malloc (30 samples, 0.03%)</title><rect x="98.6828%" y="581" width="0.0255%" height="15" fill="rgb(245,80,10)" fg:x="115970" fg:w="30"/><text x="98.9328%" y="591.50"></text></g><g><title>v8::internal::CompactionSpaceCollection::CompactionSpaceCollection (135 samples, 0.11%)</title><rect x="98.5951%" y="661" width="0.1149%" height="15" fill="rgb(232,107,50)" fg:x="115867" fg:w="135"/><text x="98.8451%" y="671.50"></text></g><g><title>operator new (27 samples, 0.02%)</title><rect x="98.7117%" y="629" width="0.0230%" height="15" fill="rgb(253,3,0)" fg:x="116004" fg:w="27"/><text x="98.9617%" y="639.50"></text></g><g><title>malloc (27 samples, 0.02%)</title><rect x="98.7117%" y="613" width="0.0230%" height="15" fill="rgb(212,99,53)" fg:x="116004" fg:w="27"/><text x="98.9617%" y="623.50"></text></g><g><title>_int_malloc (17 samples, 0.01%)</title><rect x="98.7202%" y="597" width="0.0145%" height="15" fill="rgb(249,111,54)" fg:x="116014" fg:w="17"/><text x="98.9702%" y="607.50"></text></g><g><title>v8::internal::PagedSpace::CreateAllocatorPolicy (28 samples, 0.02%)</title><rect x="98.7117%" y="645" width="0.0238%" height="15" fill="rgb(249,55,30)" fg:x="116004" fg:w="28"/><text x="98.9617%" y="655.50"></text></g><g><title>v8::internal::EvacuationAllocator::EvacuationAllocator (173 samples, 0.15%)</title><rect x="98.5934%" y="677" width="0.1472%" height="15" fill="rgb(237,47,42)" fg:x="115865" fg:w="173"/><text x="98.8434%" y="687.50"></text></g><g><title>v8::internal::MainAllocator::MainAllocator (36 samples, 0.03%)</title><rect x="98.7100%" y="661" width="0.0306%" height="15" fill="rgb(211,20,18)" fg:x="116002" fg:w="36"/><text x="98.9600%" y="671.50"></text></g><g><title>v8::internal::Scavenger::Scavenger (210 samples, 0.18%)</title><rect x="98.5636%" y="693" width="0.1787%" height="15" fill="rgb(231,203,46)" fg:x="115830" fg:w="210"/><text x="98.8136%" y="703.50"></text></g><g><title>std::Cr::__optional_destruct_base&lt;v8::internal::MainAllocator, false&gt;::~__optional_destruct_base[abi:v160000] (21 samples, 0.02%)</title><rect x="98.7542%" y="677" width="0.0179%" height="15" fill="rgb(237,142,3)" fg:x="116054" fg:w="21"/><text x="99.0042%" y="687.50"></text></g><g><title>v8::internal::FreeListManyCachedOrigin::~FreeListManyCachedOrigin (16 samples, 0.01%)</title><rect x="98.7815%" y="661" width="0.0136%" height="15" fill="rgb(241,107,1)" fg:x="116086" fg:w="16"/><text x="99.0315%" y="671.50"></text></g><g><title>cfree@GLIBC_2.2.5 (14 samples, 0.01%)</title><rect x="98.7832%" y="645" width="0.0119%" height="15" fill="rgb(229,83,13)" fg:x="116088" fg:w="14"/><text x="99.0332%" y="655.50"></text></g><g><title>v8::internal::CompactionSpaceCollection::~CompactionSpaceCollection (35 samples, 0.03%)</title><rect x="98.7721%" y="677" width="0.0298%" height="15" fill="rgb(241,91,40)" fg:x="116075" fg:w="35"/><text x="99.0221%" y="687.50"></text></g><g><title>v8::internal::Scavenger::~Scavenger (74 samples, 0.06%)</title><rect x="98.7423%" y="693" width="0.0630%" height="15" fill="rgb(225,3,45)" fg:x="116040" fg:w="74"/><text x="98.9923%" y="703.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (17 samples, 0.01%)</title><rect x="98.8334%" y="613" width="0.0145%" height="15" fill="rgb(244,223,14)" fg:x="116147" fg:w="17"/><text x="99.0834%" y="623.50"></text></g><g><title>v8::internal::Scavenger::Process (36 samples, 0.03%)</title><rect x="98.8215%" y="629" width="0.0306%" height="15" fill="rgb(224,124,37)" fg:x="116133" fg:w="36"/><text x="99.0715%" y="639.50"></text></g><g><title>v8::internal::Scavenger::ScavengePage (37 samples, 0.03%)</title><rect x="98.8521%" y="629" width="0.0315%" height="15" fill="rgb(251,171,30)" fg:x="116169" fg:w="37"/><text x="99.1021%" y="639.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (21 samples, 0.02%)</title><rect x="98.8657%" y="613" width="0.0179%" height="15" fill="rgb(236,46,54)" fg:x="116185" fg:w="21"/><text x="99.1157%" y="623.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (79 samples, 0.07%)</title><rect x="98.8206%" y="645" width="0.0672%" height="15" fill="rgb(245,213,5)" fg:x="116132" fg:w="79"/><text x="99.0706%" y="655.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::Run (83 samples, 0.07%)</title><rect x="98.8181%" y="661" width="0.0706%" height="15" fill="rgb(230,144,27)" fg:x="116129" fg:w="83"/><text x="99.0681%" y="671.50"></text></g><g><title>do_futex (19 samples, 0.02%)</title><rect x="98.9014%" y="581" width="0.0162%" height="15" fill="rgb(220,86,6)" fg:x="116227" fg:w="19"/><text x="99.1514%" y="591.50"></text></g><g><title>futex_wake (17 samples, 0.01%)</title><rect x="98.9031%" y="565" width="0.0145%" height="15" fill="rgb(240,20,13)" fg:x="116229" fg:w="17"/><text x="99.1531%" y="575.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.02%)</title><rect x="98.9014%" y="597" width="0.0170%" height="15" fill="rgb(217,89,34)" fg:x="116227" fg:w="20"/><text x="99.1514%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 0.02%)</title><rect x="98.8997%" y="629" width="0.0221%" height="15" fill="rgb(229,13,5)" fg:x="116225" fg:w="26"/><text x="99.1497%" y="639.50"></text></g><g><title>do_syscall_64 (24 samples, 0.02%)</title><rect x="98.9014%" y="613" width="0.0204%" height="15" fill="rgb(244,67,35)" fg:x="116227" fg:w="24"/><text x="99.1514%" y="623.50"></text></g><g><title>pthread_cond_broadcast@@GLIBC_2.3.2 (37 samples, 0.03%)</title><rect x="98.8963%" y="645" width="0.0315%" height="15" fill="rgb(221,40,2)" fg:x="116221" fg:w="37"/><text x="99.1463%" y="655.50"></text></g><g><title>v8::platform::DefaultJobState::Join (137 samples, 0.12%)</title><rect x="98.8138%" y="677" width="0.1166%" height="15" fill="rgb(237,157,21)" fg:x="116124" fg:w="137"/><text x="99.0638%" y="687.50"></text></g><g><title>v8::platform::DefaultWorkerThreadsTaskRunner::PostTask (43 samples, 0.04%)</title><rect x="98.8938%" y="661" width="0.0366%" height="15" fill="rgb(222,94,11)" fg:x="116218" fg:w="43"/><text x="99.1438%" y="671.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (143 samples, 0.12%)</title><rect x="98.8129%" y="693" width="0.1217%" height="15" fill="rgb(249,113,6)" fg:x="116123" fg:w="143"/><text x="99.0629%" y="703.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1,253 samples, 1.07%)</title><rect x="97.8812%" y="709" width="1.0662%" height="15" fill="rgb(238,137,36)" fg:x="115028" fg:w="1253"/><text x="98.1312%" y="719.50"></text></g><g><title>v8::internal::ConcurrentMarking::ClearMemoryChunkData (55 samples, 0.05%)</title><rect x="98.9482%" y="693" width="0.0468%" height="15" fill="rgb(210,102,26)" fg:x="116282" fg:w="55"/><text x="99.1982%" y="703.50"></text></g><g><title>unsigned long std::Cr::__hash_table&lt;std::Cr::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::Cr::__unordered_map_hasher&lt;v8::internal::MemoryChunk*, std::Cr::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, v8::base::hash&lt;v8::internal::MemoryChunk*&gt;, std::Cr::equal_to&lt;v8::internal::MemoryChunk*&gt;, true&gt;, std::Cr::__unordered_map_equal&lt;v8::internal::MemoryChunk*, std::Cr::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt;, std::Cr::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::base::hash&lt;v8::internal::MemoryChunk*&gt;, true&gt;, std::Cr::allocator&lt;std::Cr::__hash_value_type&lt;v8::internal::MemoryChunk*, v8::internal::MemoryChunkData&gt; &gt; &gt;::__erase_unique&lt;v8::internal::MemoryChunk*&gt; (45 samples, 0.04%)</title><rect x="98.9568%" y="677" width="0.0383%" height="15" fill="rgb(218,30,30)" fg:x="116292" fg:w="45"/><text x="99.2068%" y="687.50"></text></g><g><title>v8::internal::MemoryChunk::ClearLiveness (203 samples, 0.17%)</title><rect x="98.9950%" y="693" width="0.1727%" height="15" fill="rgb(214,67,26)" fg:x="116337" fg:w="203"/><text x="99.2450%" y="703.50"></text></g><g><title>__memset_avx2_unaligned_erms (203 samples, 0.17%)</title><rect x="98.9950%" y="677" width="0.1727%" height="15" fill="rgb(251,9,53)" fg:x="116337" fg:w="203"/><text x="99.2450%" y="687.50"></text></g><g><title>v8::internal::Heap::Scavenge (1,829 samples, 1.56%)</title><rect x="97.8761%" y="725" width="1.5564%" height="15" fill="rgb(228,204,25)" fg:x="115022" fg:w="1829"/><text x="98.1261%" y="735.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EvacuatePrologue (570 samples, 0.49%)</title><rect x="98.9474%" y="709" width="0.4850%" height="15" fill="rgb(207,153,8)" fg:x="116281" fg:w="570"/><text x="99.1974%" y="719.50"></text></g><g><title>v8::internal::SemiSpace::Swap (311 samples, 0.26%)</title><rect x="99.1678%" y="693" width="0.2646%" height="15" fill="rgb(242,9,16)" fg:x="116540" fg:w="311"/><text x="99.4178%" y="703.50"></text></g><g><title>PushAllRegistersAndIterateStack (2,417 samples, 2.06%)</title><rect x="97.4106%" y="789" width="2.0567%" height="15" fill="rgb(217,211,10)" fg:x="114475" fg:w="2417"/><text x="97.6606%" y="799.50">P..</text></g><g><title>void heap::base::Stack::SetMarkerAndCallbackImpl&lt;v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1&gt; (2,417 samples, 2.06%)</title><rect x="97.4106%" y="773" width="2.0567%" height="15" fill="rgb(219,228,52)" fg:x="114475" fg:w="2417"/><text x="97.6606%" y="783.50">v..</text></g><g><title>v8::internal::Heap::CollectGarbage (2,417 samples, 2.06%)</title><rect x="97.4106%" y="757" width="2.0567%" height="15" fill="rgb(231,92,29)" fg:x="114475" fg:w="2417"/><text x="97.6606%" y="767.50">v..</text></g><g><title>v8::internal::Heap::PerformGarbageCollection (2,212 samples, 1.88%)</title><rect x="97.5851%" y="741" width="1.8823%" height="15" fill="rgb(232,8,23)" fg:x="114680" fg:w="2212"/><text x="97.8351%" y="751.50">v..</text></g><g><title>v8::internal::SafepointScope::SafepointScope (16 samples, 0.01%)</title><rect x="99.4537%" y="725" width="0.0136%" height="15" fill="rgb(216,211,34)" fg:x="116876" fg:w="16"/><text x="99.7037%" y="735.50"></text></g><g><title>v8::internal::IsolateSafepoint::EnterLocalSafepointScope (16 samples, 0.01%)</title><rect x="99.4537%" y="709" width="0.0136%" height="15" fill="rgb(236,151,0)" fg:x="116876" fg:w="16"/><text x="99.7037%" y="719.50"></text></g><g><title>v8::internal::MinorGCJob::Task::RunInternal (2,438 samples, 2.07%)</title><rect x="97.4064%" y="821" width="2.0746%" height="15" fill="rgb(209,168,3)" fg:x="114470" fg:w="2438"/><text x="97.6564%" y="831.50">v..</text></g><g><title>v8::internal::Heap::CollectGarbage (2,436 samples, 2.07%)</title><rect x="97.4081%" y="805" width="2.0729%" height="15" fill="rgb(208,129,28)" fg:x="114472" fg:w="2436"/><text x="97.6581%" y="815.50">v..</text></g><g><title>v8::platform::DefaultPlatform::PumpMessageLoop (2,520 samples, 2.14%)</title><rect x="97.3664%" y="837" width="2.1444%" height="15" fill="rgb(229,78,22)" fg:x="114423" fg:w="2520"/><text x="97.6164%" y="847.50">v..</text></g><g><title>v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue (35 samples, 0.03%)</title><rect x="99.4809%" y="821" width="0.0298%" height="15" fill="rgb(228,187,13)" fg:x="116908" fg:w="35"/><text x="99.7309%" y="831.50"></text></g><g><title>v8::platform::DefaultForegroundTaskRunner::PopTaskFromDelayedQueueLocked (21 samples, 0.02%)</title><rect x="99.4928%" y="805" width="0.0179%" height="15" fill="rgb(240,119,24)" fg:x="116922" fg:w="21"/><text x="99.7428%" y="815.50"></text></g><g><title>v8::platform::(anonymous namespace)::DefaultTimeFunction (19 samples, 0.02%)</title><rect x="99.4945%" y="789" width="0.0162%" height="15" fill="rgb(209,194,42)" fg:x="116924" fg:w="19"/><text x="99.7445%" y="799.50"></text></g><g><title>deno::tools::run::run_script::_{{closure}} (3,167 samples, 2.69%)</title><rect x="96.8235%" y="917" width="2.6949%" height="15" fill="rgb(247,200,46)" fg:x="113785" fg:w="3167"/><text x="97.0735%" y="927.50">de..</text></g><g><title>deno::worker::CliMainWorker::run::_{{closure}} (3,150 samples, 2.68%)</title><rect x="96.8379%" y="901" width="2.6804%" height="15" fill="rgb(218,76,16)" fg:x="113802" fg:w="3150"/><text x="97.0879%" y="911.50">de..</text></g><g><title>deno_runtime::worker::MainWorker::run_event_loop::_{{closure}} (3,129 samples, 2.66%)</title><rect x="96.8558%" y="885" width="2.6626%" height="15" fill="rgb(225,21,48)" fg:x="113823" fg:w="3129"/><text x="97.1058%" y="895.50">de..</text></g><g><title>deno_core::runtime::jsruntime::JsRuntime::run_event_loop::_{{closure}} (3,118 samples, 2.65%)</title><rect x="96.8652%" y="869" width="2.6532%" height="15" fill="rgb(239,223,50)" fg:x="113834" fg:w="3118"/><text x="97.1152%" y="879.50">de..</text></g><g><title>deno_core::runtime::jsruntime::JsRuntime::poll_event_loop (3,102 samples, 2.64%)</title><rect x="96.8788%" y="853" width="2.6396%" height="15" fill="rgb(244,45,21)" fg:x="113850" fg:w="3102"/><text x="97.1288%" y="863.50">de..</text></g><g><title>deno_core::runtime::op_driver::futures_unordered_driver::poll_task::_{{closure}} (15 samples, 0.01%)</title><rect x="99.5260%" y="917" width="0.0128%" height="15" fill="rgb(232,33,43)" fg:x="116961" fg:w="15"/><text x="99.7760%" y="927.50"></text></g><g><title>futures_task::waker::wake_arc_raw (12 samples, 0.01%)</title><rect x="99.5720%" y="917" width="0.0102%" height="15" fill="rgb(209,8,3)" fg:x="117015" fg:w="12"/><text x="99.8220%" y="927.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::maybe_notify (13 samples, 0.01%)</title><rect x="99.6273%" y="917" width="0.0111%" height="15" fill="rgb(214,25,53)" fg:x="117080" fg:w="13"/><text x="99.8773%" y="927.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (18 samples, 0.02%)</title><rect x="99.6384%" y="917" width="0.0153%" height="15" fill="rgb(254,186,54)" fg:x="117093" fg:w="18"/><text x="99.8884%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::is_empty (12 samples, 0.01%)</title><rect x="99.7056%" y="917" width="0.0102%" height="15" fill="rgb(208,174,49)" fg:x="117172" fg:w="12"/><text x="99.9556%" y="927.50"></text></g><g><title>tokio::runtime::task::raw::poll (106 samples, 0.09%)</title><rect x="99.7158%" y="917" width="0.0902%" height="15" fill="rgb(233,191,51)" fg:x="117184" fg:w="106"/><text x="99.9658%" y="927.50"></text></g><g><title>[unknown] (35,106 samples, 29.87%)</title><rect x="69.9629%" y="933" width="29.8729%" height="15" fill="rgb(222,134,10)" fg:x="82219" fg:w="35106"/><text x="70.2129%" y="943.50">[unknown]</text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::Drain&lt;http::header::value::HeaderValue&gt;&gt; (17 samples, 0.01%)</title><rect x="99.8656%" y="933" width="0.0145%" height="15" fill="rgb(230,226,20)" fg:x="117360" fg:w="17"/><text x="100.1156%" y="943.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (61 samples, 0.05%)</title><rect x="99.8843%" y="933" width="0.0519%" height="15" fill="rgb(251,111,25)" fg:x="117382" fg:w="61"/><text x="100.1343%" y="943.50"></text></g><g><title>vtable for v8::internal::RootScavengeVisitor (26 samples, 0.02%)</title><rect x="99.9626%" y="933" width="0.0221%" height="15" fill="rgb(224,40,46)" fg:x="117474" fg:w="26"/><text x="100.2126%" y="943.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (26 samples, 0.02%)</title><rect x="99.9626%" y="917" width="0.0221%" height="15" fill="rgb(236,108,47)" fg:x="117474" fg:w="26"/><text x="100.2126%" y="927.50"></text></g><g><title>deno (116,815 samples, 99.40%)</title><rect x="0.5837%" y="949" width="99.4018%" height="15" fill="rgb(234,93,0)" fg:x="686" fg:w="116815"/><text x="0.8337%" y="959.50">deno</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (14 samples, 0.01%)</title><rect x="99.9872%" y="837" width="0.0119%" height="15" fill="rgb(224,213,32)" fg:x="117503" fg:w="14"/><text x="100.2372%" y="847.50"></text></g><g><title>syscall (14 samples, 0.01%)</title><rect x="99.9872%" y="821" width="0.0119%" height="15" fill="rgb(251,11,48)" fg:x="117503" fg:w="14"/><text x="100.2372%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="99.9872%" y="805" width="0.0119%" height="15" fill="rgb(236,173,5)" fg:x="117503" fg:w="14"/><text x="100.2372%" y="815.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="99.9872%" y="789" width="0.0119%" height="15" fill="rgb(230,95,12)" fg:x="117503" fg:w="14"/><text x="100.2372%" y="799.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.01%)</title><rect x="99.9872%" y="773" width="0.0119%" height="15" fill="rgb(232,209,1)" fg:x="117503" fg:w="14"/><text x="100.2372%" y="783.50"></text></g><g><title>do_futex (14 samples, 0.01%)</title><rect x="99.9872%" y="757" width="0.0119%" height="15" fill="rgb(232,6,1)" fg:x="117503" fg:w="14"/><text x="100.2372%" y="767.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="99.9872%" y="741" width="0.0119%" height="15" fill="rgb(210,224,50)" fg:x="117503" fg:w="14"/><text x="100.2372%" y="751.50"></text></g><g><title>futex_wait_queue (13 samples, 0.01%)</title><rect x="99.9881%" y="725" width="0.0111%" height="15" fill="rgb(228,127,35)" fg:x="117504" fg:w="13"/><text x="100.2381%" y="735.50"></text></g><g><title>schedule (13 samples, 0.01%)</title><rect x="99.9881%" y="709" width="0.0111%" height="15" fill="rgb(245,102,45)" fg:x="117504" fg:w="13"/><text x="100.2381%" y="719.50"></text></g><g><title>__schedule (13 samples, 0.01%)</title><rect x="99.9881%" y="693" width="0.0111%" height="15" fill="rgb(214,1,49)" fg:x="117504" fg:w="13"/><text x="100.2381%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (12 samples, 0.01%)</title><rect x="99.9889%" y="677" width="0.0102%" height="15" fill="rgb(226,163,40)" fg:x="117505" fg:w="12"/><text x="100.2389%" y="687.50"></text></g><g><title>__perf_event_task_sched_in (12 samples, 0.01%)</title><rect x="99.9889%" y="661" width="0.0102%" height="15" fill="rgb(239,212,28)" fg:x="117505" fg:w="12"/><text x="100.2389%" y="671.50"></text></g><g><title>perf_ctx_enable (12 samples, 0.01%)</title><rect x="99.9889%" y="645" width="0.0102%" height="15" fill="rgb(220,20,13)" fg:x="117505" fg:w="12"/><text x="100.2389%" y="655.50"></text></g><g><title>x86_pmu_enable (12 samples, 0.01%)</title><rect x="99.9889%" y="629" width="0.0102%" height="15" fill="rgb(210,164,35)" fg:x="117505" fg:w="12"/><text x="100.2389%" y="639.50"></text></g><g><title>intel_pmu_enable_all (12 samples, 0.01%)</title><rect x="99.9889%" y="613" width="0.0102%" height="15" fill="rgb(248,109,41)" fg:x="117505" fg:w="12"/><text x="100.2389%" y="623.50"></text></g><g><title>native_write_msr (12 samples, 0.01%)</title><rect x="99.9889%" y="597" width="0.0102%" height="15" fill="rgb(238,23,50)" fg:x="117505" fg:w="12"/><text x="100.2389%" y="607.50"></text></g><g><title>all (117,518 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(211,48,49)" fg:x="0" fg:w="117518"/><text x="0.2500%" y="975.50"></text></g><g><title>tokio-runtime-w (17 samples, 0.01%)</title><rect x="99.9855%" y="949" width="0.0145%" height="15" fill="rgb(223,36,21)" fg:x="117501" fg:w="17"/><text x="100.2355%" y="959.50"></text></g><g><title>clone3 (17 samples, 0.01%)</title><rect x="99.9855%" y="933" width="0.0145%" height="15" fill="rgb(207,123,46)" fg:x="117501" fg:w="17"/><text x="100.2355%" y="943.50"></text></g><g><title>start_thread (17 samples, 0.01%)</title><rect x="99.9855%" y="917" width="0.0145%" height="15" fill="rgb(240,218,32)" fg:x="117501" fg:w="17"/><text x="100.2355%" y="927.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16 samples, 0.01%)</title><rect x="99.9864%" y="901" width="0.0136%" height="15" fill="rgb(252,5,43)" fg:x="117502" fg:w="16"/><text x="100.2364%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (16 samples, 0.01%)</title><rect x="99.9864%" y="885" width="0.0136%" height="15" fill="rgb(252,84,19)" fg:x="117502" fg:w="16"/><text x="100.2364%" y="895.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 0.01%)</title><rect x="99.9872%" y="869" width="0.0128%" height="15" fill="rgb(243,152,39)" fg:x="117503" fg:w="15"/><text x="100.2372%" y="879.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (15 samples, 0.01%)</title><rect x="99.9872%" y="853" width="0.0128%" height="15" fill="rgb(234,160,15)" fg:x="117503" fg:w="15"/><text x="100.2372%" y="863.50"></text></g></svg></svg>