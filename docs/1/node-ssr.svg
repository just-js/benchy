<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1093.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="120059"><g><title>exit_mm (18 samples, 0.01%)</title><rect x="0.0008%" y="965" width="0.0150%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="18"/><text x="0.2508%" y="975.50"></text></g><g><title>mmput (18 samples, 0.01%)</title><rect x="0.0008%" y="949" width="0.0150%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="18"/><text x="0.2508%" y="959.50"></text></g><g><title>__mmput (18 samples, 0.01%)</title><rect x="0.0008%" y="933" width="0.0150%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="18"/><text x="0.2508%" y="943.50"></text></g><g><title>exit_mmap (18 samples, 0.01%)</title><rect x="0.0008%" y="917" width="0.0150%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="18"/><text x="0.2508%" y="927.50"></text></g><g><title>unmap_vmas (16 samples, 0.01%)</title><rect x="0.0025%" y="901" width="0.0133%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="16"/><text x="0.2525%" y="911.50"></text></g><g><title>unmap_single_vma (16 samples, 0.01%)</title><rect x="0.0025%" y="885" width="0.0133%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="16"/><text x="0.2525%" y="895.50"></text></g><g><title>unmap_page_range (16 samples, 0.01%)</title><rect x="0.0025%" y="869" width="0.0133%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="16"/><text x="0.2525%" y="879.50"></text></g><g><title>zap_pmd_range.isra.0 (16 samples, 0.01%)</title><rect x="0.0025%" y="853" width="0.0133%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="16"/><text x="0.2525%" y="863.50"></text></g><g><title>do_exit (20 samples, 0.02%)</title><rect x="0.0000%" y="981" width="0.0167%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="20"/><text x="0.2500%" y="991.50"></text></g><g><title>iou-sqp-1077634 (41 samples, 0.03%)</title><rect x="0.0000%" y="1045" width="0.0341%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1055.50"></text></g><g><title>ret_from_fork_asm (41 samples, 0.03%)</title><rect x="0.0000%" y="1029" width="0.0341%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1039.50"></text></g><g><title>ret_from_fork (41 samples, 0.03%)</title><rect x="0.0000%" y="1013" width="0.0341%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1023.50"></text></g><g><title>io_sq_thread (41 samples, 0.03%)</title><rect x="0.0000%" y="997" width="0.0341%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1007.50"></text></g><g><title>schedule (13 samples, 0.01%)</title><rect x="0.0233%" y="981" width="0.0108%" height="15" fill="rgb(206,188,39)" fg:x="28" fg:w="13"/><text x="0.2733%" y="991.50"></text></g><g><title>__schedule (13 samples, 0.01%)</title><rect x="0.0233%" y="965" width="0.0108%" height="15" fill="rgb(217,207,13)" fg:x="28" fg:w="13"/><text x="0.2733%" y="975.50"></text></g><g><title>finish_task_switch.isra.0 (13 samples, 0.01%)</title><rect x="0.0233%" y="949" width="0.0108%" height="15" fill="rgb(231,73,38)" fg:x="28" fg:w="13"/><text x="0.2733%" y="959.50"></text></g><g><title>__perf_event_task_sched_in (13 samples, 0.01%)</title><rect x="0.0233%" y="933" width="0.0108%" height="15" fill="rgb(225,20,46)" fg:x="28" fg:w="13"/><text x="0.2733%" y="943.50"></text></g><g><title>perf_ctx_enable (13 samples, 0.01%)</title><rect x="0.0233%" y="917" width="0.0108%" height="15" fill="rgb(210,31,41)" fg:x="28" fg:w="13"/><text x="0.2733%" y="927.50"></text></g><g><title>x86_pmu_enable (13 samples, 0.01%)</title><rect x="0.0233%" y="901" width="0.0108%" height="15" fill="rgb(221,200,47)" fg:x="28" fg:w="13"/><text x="0.2733%" y="911.50"></text></g><g><title>intel_pmu_enable_all (13 samples, 0.01%)</title><rect x="0.0233%" y="885" width="0.0108%" height="15" fill="rgb(226,26,5)" fg:x="28" fg:w="13"/><text x="0.2733%" y="895.50"></text></g><g><title>native_write_msr (13 samples, 0.01%)</title><rect x="0.0233%" y="869" width="0.0108%" height="15" fill="rgb(249,33,26)" fg:x="28" fg:w="13"/><text x="0.2733%" y="879.50"></text></g><g><title>iou-wrk-1077643 (14 samples, 0.01%)</title><rect x="0.0400%" y="1045" width="0.0117%" height="15" fill="rgb(235,183,28)" fg:x="48" fg:w="14"/><text x="0.2900%" y="1055.50"></text></g><g><title>ret_from_fork_asm (14 samples, 0.01%)</title><rect x="0.0400%" y="1029" width="0.0117%" height="15" fill="rgb(221,5,38)" fg:x="48" fg:w="14"/><text x="0.2900%" y="1039.50"></text></g><g><title>ret_from_fork (14 samples, 0.01%)</title><rect x="0.0400%" y="1013" width="0.0117%" height="15" fill="rgb(247,18,42)" fg:x="48" fg:w="14"/><text x="0.2900%" y="1023.50"></text></g><g><title>io_wq_worker (14 samples, 0.01%)</title><rect x="0.0400%" y="997" width="0.0117%" height="15" fill="rgb(241,131,45)" fg:x="48" fg:w="14"/><text x="0.2900%" y="1007.50"></text></g><g><title>schedule_timeout (14 samples, 0.01%)</title><rect x="0.0400%" y="981" width="0.0117%" height="15" fill="rgb(249,31,29)" fg:x="48" fg:w="14"/><text x="0.2900%" y="991.50"></text></g><g><title>schedule (14 samples, 0.01%)</title><rect x="0.0400%" y="965" width="0.0117%" height="15" fill="rgb(225,111,53)" fg:x="48" fg:w="14"/><text x="0.2900%" y="975.50"></text></g><g><title>__schedule (14 samples, 0.01%)</title><rect x="0.0400%" y="949" width="0.0117%" height="15" fill="rgb(238,160,17)" fg:x="48" fg:w="14"/><text x="0.2900%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.01%)</title><rect x="0.0591%" y="1013" width="0.0142%" height="15" fill="rgb(214,148,48)" fg:x="71" fg:w="17"/><text x="0.3091%" y="1023.50"></text></g><g><title>entry_SYSCALL_64 (53 samples, 0.04%)</title><rect x="0.0858%" y="949" width="0.0441%" height="15" fill="rgb(232,36,49)" fg:x="103" fg:w="53"/><text x="0.3358%" y="959.50"></text></g><g><title>node::StreamBase::Write (54 samples, 0.04%)</title><rect x="0.0858%" y="1013" width="0.0450%" height="15" fill="rgb(209,103,24)" fg:x="103" fg:w="54"/><text x="0.3358%" y="1023.50"></text></g><g><title>non-virtual thunk to node::LibuvStreamWrap::DoTryWrite (54 samples, 0.04%)</title><rect x="0.0858%" y="997" width="0.0450%" height="15" fill="rgb(229,88,8)" fg:x="103" fg:w="54"/><text x="0.3358%" y="1007.50"></text></g><g><title>uv__try_write (54 samples, 0.04%)</title><rect x="0.0858%" y="981" width="0.0450%" height="15" fill="rgb(213,181,19)" fg:x="103" fg:w="54"/><text x="0.3358%" y="991.50"></text></g><g><title>__GI___writev (54 samples, 0.04%)</title><rect x="0.0858%" y="965" width="0.0450%" height="15" fill="rgb(254,191,54)" fg:x="103" fg:w="54"/><text x="0.3358%" y="975.50"></text></g><g><title>[[heap]] (176 samples, 0.15%)</title><rect x="0.0516%" y="1029" width="0.1466%" height="15" fill="rgb(241,83,37)" fg:x="62" fg:w="176"/><text x="0.3016%" y="1039.50"></text></g><g><title>void v8::internal::CopyChars&lt;unsigned char, unsigned char&gt; (43 samples, 0.04%)</title><rect x="0.1624%" y="1013" width="0.0358%" height="15" fill="rgb(233,36,39)" fg:x="195" fg:w="43"/><text x="0.4124%" y="1023.50"></text></g><g><title>node::AsyncHooks::push_async_context (14 samples, 0.01%)</title><rect x="0.2765%" y="1013" width="0.0117%" height="15" fill="rgb(226,3,54)" fg:x="332" fg:w="14"/><text x="0.5265%" y="1023.50"></text></g><g><title>node::AsyncWrap::EmitTraceEventAfter (16 samples, 0.01%)</title><rect x="0.3049%" y="1013" width="0.0133%" height="15" fill="rgb(245,192,40)" fg:x="366" fg:w="16"/><text x="0.5549%" y="1023.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (18 samples, 0.01%)</title><rect x="0.3482%" y="1013" width="0.0150%" height="15" fill="rgb(238,167,29)" fg:x="418" fg:w="18"/><text x="0.5982%" y="1023.50"></text></g><g><title>node::LibuvStreamWrap::ReadStart (14 samples, 0.01%)</title><rect x="0.3715%" y="1013" width="0.0117%" height="15" fill="rgb(232,182,51)" fg:x="446" fg:w="14"/><text x="0.6215%" y="1023.50"></text></g><g><title>node::MaybeStackBuffer&lt;char, 1024ul&gt;::AllocateSufficientStorage (16 samples, 0.01%)</title><rect x="0.3831%" y="1013" width="0.0133%" height="15" fill="rgb(231,60,39)" fg:x="460" fg:w="16"/><text x="0.6331%" y="1023.50"></text></g><g><title>node::ParseEncoding (14 samples, 0.01%)</title><rect x="0.4056%" y="1013" width="0.0117%" height="15" fill="rgb(208,69,12)" fg:x="487" fg:w="14"/><text x="0.6556%" y="1023.50"></text></g><g><title>node::StringBytes::Write (14 samples, 0.01%)</title><rect x="0.4381%" y="1013" width="0.0117%" height="15" fill="rgb(235,93,37)" fg:x="526" fg:w="14"/><text x="0.6881%" y="1023.50"></text></g><g><title>v8::CallDepthScope&lt;true&gt;::CallDepthScope (14 samples, 0.01%)</title><rect x="0.5372%" y="1013" width="0.0117%" height="15" fill="rgb(213,116,39)" fg:x="645" fg:w="14"/><text x="0.7872%" y="1023.50"></text></g><g><title>v8::HandleScope::HandleScope (13 samples, 0.01%)</title><rect x="0.5731%" y="1013" width="0.0108%" height="15" fill="rgb(222,207,29)" fg:x="688" fg:w="13"/><text x="0.8231%" y="1023.50"></text></g><g><title>v8::Object::Get (13 samples, 0.01%)</title><rect x="0.6047%" y="1013" width="0.0108%" height="15" fill="rgb(206,96,30)" fg:x="726" fg:w="13"/><text x="0.8547%" y="1023.50"></text></g><g><title>v8::internal::(anonymous namespace)::CopyObjectToObjectElements (14 samples, 0.01%)</title><rect x="0.6605%" y="1013" width="0.0117%" height="15" fill="rgb(218,138,4)" fg:x="793" fg:w="14"/><text x="0.9105%" y="1023.50"></text></g><g><title>v8::internal::(anonymous namespace)::InstantiateObject (15 samples, 0.01%)</title><rect x="0.6788%" y="1013" width="0.0125%" height="15" fill="rgb(250,191,14)" fg:x="815" fg:w="15"/><text x="0.9288%" y="1023.50"></text></g><g><title>v8::internal::BackingStore::Allocate (13 samples, 0.01%)</title><rect x="0.7063%" y="1013" width="0.0108%" height="15" fill="rgb(239,60,40)" fg:x="848" fg:w="13"/><text x="0.9563%" y="1023.50"></text></g><g><title>v8::internal::Builtin_IsTraceCategoryEnabled (16 samples, 0.01%)</title><rect x="0.7238%" y="1013" width="0.0133%" height="15" fill="rgb(206,27,48)" fg:x="869" fg:w="16"/><text x="0.9738%" y="1023.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (15 samples, 0.01%)</title><rect x="0.7563%" y="1013" width="0.0125%" height="15" fill="rgb(225,35,8)" fg:x="908" fg:w="15"/><text x="1.0063%" y="1023.50"></text></g><g><title>v8::internal::FastKeyAccumulator::GetKeys (18 samples, 0.01%)</title><rect x="0.8329%" y="1013" width="0.0150%" height="15" fill="rgb(250,213,24)" fg:x="1000" fg:w="18"/><text x="1.0829%" y="1023.50"></text></g><g><title>v8::internal::FastKeyAccumulator::TryPrototypeInfoCache (16 samples, 0.01%)</title><rect x="0.8612%" y="1013" width="0.0133%" height="15" fill="rgb(247,123,22)" fg:x="1034" fg:w="16"/><text x="1.1112%" y="1023.50"></text></g><g><title>v8::internal::Runtime_AllocateInYoungGeneration (17 samples, 0.01%)</title><rect x="1.0312%" y="1013" width="0.0142%" height="15" fill="rgb(231,138,38)" fg:x="1238" fg:w="17"/><text x="1.2812%" y="1023.50"></text></g><g><title>v8::internal::SaveContext::SaveContext (16 samples, 0.01%)</title><rect x="1.0528%" y="1013" width="0.0133%" height="15" fill="rgb(231,145,46)" fg:x="1264" fg:w="16"/><text x="1.3028%" y="1023.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AddFreshPage (14 samples, 0.01%)</title><rect x="1.0770%" y="1013" width="0.0117%" height="15" fill="rgb(251,118,11)" fg:x="1293" fg:w="14"/><text x="1.3270%" y="1023.50"></text></g><g><title>v8::internal::String::SlowFlatten (26 samples, 0.02%)</title><rect x="1.1136%" y="1013" width="0.0217%" height="15" fill="rgb(217,147,25)" fg:x="1337" fg:w="26"/><text x="1.3636%" y="1023.50"></text></g><g><title>void v8::internal::Heap::CopyRange&lt;v8::internal::FullObjectSlot&gt; (19 samples, 0.02%)</title><rect x="1.1836%" y="1013" width="0.0158%" height="15" fill="rgb(247,81,37)" fg:x="1421" fg:w="19"/><text x="1.4336%" y="1023.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;true&gt; (23 samples, 0.02%)</title><rect x="1.2019%" y="1013" width="0.0192%" height="15" fill="rgb(209,12,38)" fg:x="1443" fg:w="23"/><text x="1.4519%" y="1023.50"></text></g><g><title>[[stack]] (1,231 samples, 1.03%)</title><rect x="0.1982%" y="1029" width="1.0253%" height="15" fill="rgb(227,1,9)" fg:x="238" fg:w="1231"/><text x="0.4482%" y="1039.50"></text></g><g><title>v8::internal::EvacuationAllocator::AllocateInNewSpace (30 samples, 0.02%)</title><rect x="1.2644%" y="1013" width="0.0250%" height="15" fill="rgb(248,47,43)" fg:x="1518" fg:w="30"/><text x="1.5144%" y="1023.50"></text></g><g><title>[anon] (146 samples, 0.12%)</title><rect x="1.2236%" y="1029" width="0.1216%" height="15" fill="rgb(221,10,30)" fg:x="1469" fg:w="146"/><text x="1.4736%" y="1039.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (15 samples, 0.01%)</title><rect x="1.3327%" y="1013" width="0.0125%" height="15" fill="rgb(210,229,1)" fg:x="1600" fg:w="15"/><text x="1.5827%" y="1023.50"></text></g><g><title>v8::internal::(anonymous namespace)::ProbeInstantiationsCache (37 samples, 0.03%)</title><rect x="24.1914%" y="933" width="0.0308%" height="15" fill="rgb(222,148,37)" fg:x="29044" fg:w="37"/><text x="24.4414%" y="943.50"></text></g><g><title>v8::internal::ApiNatives::InstantiateObject (131 samples, 0.11%)</title><rect x="24.1590%" y="965" width="0.1091%" height="15" fill="rgb(234,67,33)" fg:x="29005" fg:w="131"/><text x="24.4090%" y="975.50"></text></g><g><title>v8::internal::(anonymous namespace)::InstantiateObject (130 samples, 0.11%)</title><rect x="24.1598%" y="949" width="0.1083%" height="15" fill="rgb(247,98,35)" fg:x="29006" fg:w="130"/><text x="24.4098%" y="959.50"></text></g><g><title>v8::internal::Factory::CopyJSObjectWithAllocationSite (54 samples, 0.04%)</title><rect x="24.2231%" y="933" width="0.0450%" height="15" fill="rgb(247,138,52)" fg:x="29082" fg:w="54"/><text x="24.4731%" y="943.50"></text></g><g><title>v8::InternalFieldOK (17 samples, 0.01%)</title><rect x="24.3072%" y="917" width="0.0142%" height="15" fill="rgb(213,79,30)" fg:x="29183" fg:w="17"/><text x="24.5572%" y="927.50"></text></g><g><title>node::IsConstructCallCallback (42 samples, 0.03%)</title><rect x="24.2897%" y="949" width="0.0350%" height="15" fill="rgb(246,177,23)" fg:x="29162" fg:w="42"/><text x="24.5397%" y="959.50"></text></g><g><title>v8::Object::SetAlignedPointerInInternalField (41 samples, 0.03%)</title><rect x="24.2906%" y="933" width="0.0341%" height="15" fill="rgb(230,62,27)" fg:x="29163" fg:w="41"/><text x="24.5406%" y="943.50"></text></g><g><title>v8::internal::FunctionCallbackArguments::Call (79 samples, 0.07%)</title><rect x="24.2681%" y="965" width="0.0658%" height="15" fill="rgb(216,154,8)" fg:x="29136" fg:w="79"/><text x="24.5181%" y="975.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (313 samples, 0.26%)</title><rect x="24.0765%" y="1013" width="0.2607%" height="15" fill="rgb(244,35,45)" fg:x="28906" fg:w="313"/><text x="24.3265%" y="1023.50"></text></g><g><title>v8::internal::Builtin_HandleApiCall (283 samples, 0.24%)</title><rect x="24.1015%" y="997" width="0.2357%" height="15" fill="rgb(251,115,12)" fg:x="28936" fg:w="283"/><text x="24.3515%" y="1007.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;true&gt; (261 samples, 0.22%)</title><rect x="24.1198%" y="981" width="0.2174%" height="15" fill="rgb(240,54,50)" fg:x="28958" fg:w="261"/><text x="24.3698%" y="991.50"></text></g><g><title>Builtins_CompileLazy (81 samples, 0.07%)</title><rect x="24.3380%" y="1013" width="0.0675%" height="15" fill="rgb(233,84,52)" fg:x="29220" fg:w="81"/><text x="24.5880%" y="1023.50"></text></g><g><title>perf_event_task_tick (23 samples, 0.02%)</title><rect x="24.4530%" y="869" width="0.0192%" height="15" fill="rgb(207,117,47)" fg:x="29358" fg:w="23"/><text x="24.7030%" y="879.50"></text></g><g><title>perf_adjust_freq_unthr_context (21 samples, 0.02%)</title><rect x="24.4546%" y="853" width="0.0175%" height="15" fill="rgb(249,43,39)" fg:x="29360" fg:w="21"/><text x="24.7046%" y="863.50"></text></g><g><title>scheduler_tick (35 samples, 0.03%)</title><rect x="24.4530%" y="885" width="0.0292%" height="15" fill="rgb(209,38,44)" fg:x="29358" fg:w="35"/><text x="24.7030%" y="895.50"></text></g><g><title>tick_sched_timer (55 samples, 0.05%)</title><rect x="24.4372%" y="933" width="0.0458%" height="15" fill="rgb(236,212,23)" fg:x="29339" fg:w="55"/><text x="24.6872%" y="943.50"></text></g><g><title>tick_sched_handle (44 samples, 0.04%)</title><rect x="24.4463%" y="917" width="0.0366%" height="15" fill="rgb(242,79,21)" fg:x="29350" fg:w="44"/><text x="24.6963%" y="927.50"></text></g><g><title>update_process_times (43 samples, 0.04%)</title><rect x="24.4471%" y="901" width="0.0358%" height="15" fill="rgb(211,96,35)" fg:x="29351" fg:w="43"/><text x="24.6971%" y="911.50"></text></g><g><title>__hrtimer_run_queues (61 samples, 0.05%)</title><rect x="24.4338%" y="949" width="0.0508%" height="15" fill="rgb(253,215,40)" fg:x="29335" fg:w="61"/><text x="24.6838%" y="959.50"></text></g><g><title>__sysvec_apic_timer_interrupt (63 samples, 0.05%)</title><rect x="24.4338%" y="981" width="0.0525%" height="15" fill="rgb(211,81,21)" fg:x="29335" fg:w="63"/><text x="24.6838%" y="991.50"></text></g><g><title>hrtimer_interrupt (63 samples, 0.05%)</title><rect x="24.4338%" y="965" width="0.0525%" height="15" fill="rgb(208,190,38)" fg:x="29335" fg:w="63"/><text x="24.6838%" y="975.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (72 samples, 0.06%)</title><rect x="24.4338%" y="1013" width="0.0600%" height="15" fill="rgb(235,213,38)" fg:x="29335" fg:w="72"/><text x="24.6838%" y="1023.50"></text></g><g><title>sysvec_apic_timer_interrupt (72 samples, 0.06%)</title><rect x="24.4338%" y="997" width="0.0600%" height="15" fill="rgb(237,122,38)" fg:x="29335" fg:w="72"/><text x="24.6838%" y="1007.50"></text></g><g><title>v8::Context::GetNumberOfEmbedderDataFields (21 samples, 0.02%)</title><rect x="24.5229%" y="997" width="0.0175%" height="15" fill="rgb(244,218,35)" fg:x="29442" fg:w="21"/><text x="24.7729%" y="1007.50"></text></g><g><title>v8::Isolate::GetCurrentContext (21 samples, 0.02%)</title><rect x="24.5404%" y="997" width="0.0175%" height="15" fill="rgb(240,68,47)" fg:x="29463" fg:w="21"/><text x="24.7904%" y="1007.50"></text></g><g><title>__hrtimer_run_queues (25 samples, 0.02%)</title><rect x="33.4727%" y="917" width="0.0208%" height="15" fill="rgb(210,16,53)" fg:x="40187" fg:w="25"/><text x="33.7227%" y="927.50"></text></g><g><title>tick_sched_timer (23 samples, 0.02%)</title><rect x="33.4744%" y="901" width="0.0192%" height="15" fill="rgb(235,124,12)" fg:x="40189" fg:w="23"/><text x="33.7244%" y="911.50"></text></g><g><title>tick_sched_handle (15 samples, 0.01%)</title><rect x="33.4810%" y="885" width="0.0125%" height="15" fill="rgb(224,169,11)" fg:x="40197" fg:w="15"/><text x="33.7310%" y="895.50"></text></g><g><title>update_process_times (15 samples, 0.01%)</title><rect x="33.4810%" y="869" width="0.0125%" height="15" fill="rgb(250,166,2)" fg:x="40197" fg:w="15"/><text x="33.7310%" y="879.50"></text></g><g><title>__sysvec_apic_timer_interrupt (27 samples, 0.02%)</title><rect x="33.4727%" y="949" width="0.0225%" height="15" fill="rgb(242,216,29)" fg:x="40187" fg:w="27"/><text x="33.7227%" y="959.50"></text></g><g><title>hrtimer_interrupt (27 samples, 0.02%)</title><rect x="33.4727%" y="933" width="0.0225%" height="15" fill="rgb(230,116,27)" fg:x="40187" fg:w="27"/><text x="33.7227%" y="943.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (31 samples, 0.03%)</title><rect x="33.4727%" y="981" width="0.0258%" height="15" fill="rgb(228,99,48)" fg:x="40187" fg:w="31"/><text x="33.7227%" y="991.50"></text></g><g><title>sysvec_apic_timer_interrupt (31 samples, 0.03%)</title><rect x="33.4727%" y="965" width="0.0258%" height="15" fill="rgb(253,11,6)" fg:x="40187" fg:w="31"/><text x="33.7227%" y="975.50"></text></g><g><title>v8::internal::AllocationCounter::InvokeAllocationObservers (32 samples, 0.03%)</title><rect x="33.5835%" y="917" width="0.0267%" height="15" fill="rgb(247,143,39)" fg:x="40320" fg:w="32"/><text x="33.8335%" y="927.50"></text></g><g><title>v8::internal::ScheduleMinorGCTaskObserver::Step (28 samples, 0.02%)</title><rect x="33.5868%" y="901" width="0.0233%" height="15" fill="rgb(236,97,10)" fg:x="40324" fg:w="28"/><text x="33.8368%" y="911.50"></text></g><g><title>v8::internal::MinorGCJob::ScheduleTaskIfNeeded (27 samples, 0.02%)</title><rect x="33.5877%" y="885" width="0.0225%" height="15" fill="rgb(233,208,19)" fg:x="40325" fg:w="27"/><text x="33.8377%" y="895.50"></text></g><g><title>__GI___printf_fp_l (18 samples, 0.01%)</title><rect x="33.6393%" y="773" width="0.0150%" height="15" fill="rgb(216,164,2)" fg:x="40387" fg:w="18"/><text x="33.8893%" y="783.50"></text></g><g><title>v8::base::OS::VSNPrintF (46 samples, 0.04%)</title><rect x="33.6251%" y="821" width="0.0383%" height="15" fill="rgb(220,129,5)" fg:x="40370" fg:w="46"/><text x="33.8751%" y="831.50"></text></g><g><title>__vsnprintf_internal (45 samples, 0.04%)</title><rect x="33.6260%" y="805" width="0.0375%" height="15" fill="rgb(242,17,10)" fg:x="40371" fg:w="45"/><text x="33.8760%" y="815.50"></text></g><g><title>__vfprintf_internal (42 samples, 0.03%)</title><rect x="33.6285%" y="789" width="0.0350%" height="15" fill="rgb(242,107,0)" fg:x="40374" fg:w="42"/><text x="33.8785%" y="799.50"></text></g><g><title>v8::internal::GCTracer::Output (48 samples, 0.04%)</title><rect x="33.6251%" y="837" width="0.0400%" height="15" fill="rgb(251,28,31)" fg:x="40370" fg:w="48"/><text x="33.8751%" y="847.50"></text></g><g><title>v8::internal::GCTracer::UpdateStatistics (59 samples, 0.05%)</title><rect x="33.6168%" y="869" width="0.0491%" height="15" fill="rgb(233,223,10)" fg:x="40360" fg:w="59"/><text x="33.8668%" y="879.50"></text></g><g><title>v8::internal::GCTracer::Print (59 samples, 0.05%)</title><rect x="33.6168%" y="853" width="0.0491%" height="15" fill="rgb(215,21,27)" fg:x="40360" fg:w="59"/><text x="33.8668%" y="863.50"></text></g><g><title>v8::internal::Heap::NewSpaceAllocationCounter (59 samples, 0.05%)</title><rect x="33.6893%" y="837" width="0.0491%" height="15" fill="rgb(232,23,21)" fg:x="40447" fg:w="59"/><text x="33.9393%" y="847.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AllocatedSinceLastGC (59 samples, 0.05%)</title><rect x="33.6893%" y="821" width="0.0491%" height="15" fill="rgb(244,5,23)" fg:x="40447" fg:w="59"/><text x="33.9393%" y="831.50"></text></g><g><title>v8::internal::GCTracer::StartInSafepoint (66 samples, 0.05%)</title><rect x="33.6893%" y="853" width="0.0550%" height="15" fill="rgb(226,81,46)" fg:x="40447" fg:w="66"/><text x="33.9393%" y="863.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (25 samples, 0.02%)</title><rect x="33.7459%" y="853" width="0.0208%" height="15" fill="rgb(247,70,30)" fg:x="40515" fg:w="25"/><text x="33.9959%" y="863.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::MakeAllPagesInFromSpaceIterable (16 samples, 0.01%)</title><rect x="33.7534%" y="837" width="0.0133%" height="15" fill="rgb(212,68,19)" fg:x="40524" fg:w="16"/><text x="34.0034%" y="847.50"></text></g><g><title>v8::internal::Heap::CreateFillerObjectAt (15 samples, 0.01%)</title><rect x="33.7542%" y="821" width="0.0125%" height="15" fill="rgb(240,187,13)" fg:x="40525" fg:w="15"/><text x="34.0042%" y="831.50"></text></g><g><title>v8::internal::(anonymous namespace)::IterateObjectCache (238 samples, 0.20%)</title><rect x="33.8767%" y="805" width="0.1982%" height="15" fill="rgb(223,113,26)" fg:x="40672" fg:w="238"/><text x="34.1267%" y="815.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (91 samples, 0.08%)</title><rect x="33.9991%" y="789" width="0.0758%" height="15" fill="rgb(206,192,2)" fg:x="40819" fg:w="91"/><text x="34.2491%" y="799.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointers (13 samples, 0.01%)</title><rect x="34.0832%" y="773" width="0.0108%" height="15" fill="rgb(241,108,4)" fg:x="40920" fg:w="13"/><text x="34.3332%" y="783.50"></text></g><g><title>v8::internal::CommonFrame::IterateTurbofanOptimizedFrame (17 samples, 0.01%)</title><rect x="34.0824%" y="789" width="0.0142%" height="15" fill="rgb(247,173,49)" fg:x="40919" fg:w="17"/><text x="34.3324%" y="799.50"></text></g><g><title>v8::internal::StackFrameIterator::Advance (15 samples, 0.01%)</title><rect x="34.0982%" y="789" width="0.0125%" height="15" fill="rgb(224,114,35)" fg:x="40938" fg:w="15"/><text x="34.3482%" y="799.50"></text></g><g><title>v8::internal::StackFrameIterator::ComputeStackFrameType (14 samples, 0.01%)</title><rect x="34.0991%" y="773" width="0.0117%" height="15" fill="rgb(245,159,27)" fg:x="40939" fg:w="14"/><text x="34.3491%" y="783.50"></text></g><g><title>v8::internal::Isolate::Iterate (39 samples, 0.03%)</title><rect x="34.0816%" y="805" width="0.0325%" height="15" fill="rgb(245,172,44)" fg:x="40918" fg:w="39"/><text x="34.3316%" y="815.50"></text></g><g><title>v8::internal::Heap::IterateRoots (295 samples, 0.25%)</title><rect x="33.8758%" y="821" width="0.2457%" height="15" fill="rgb(236,23,11)" fg:x="40671" fg:w="295"/><text x="34.1258%" y="831.50"></text></g><g><title>v8::internal::FreeList::CreateFreeList (21 samples, 0.02%)</title><rect x="34.1499%" y="805" width="0.0175%" height="15" fill="rgb(205,117,38)" fg:x="41000" fg:w="21"/><text x="34.3999%" y="815.50"></text></g><g><title>v8::internal::Scavenger::Scavenger (61 samples, 0.05%)</title><rect x="34.1341%" y="821" width="0.0508%" height="15" fill="rgb(237,72,25)" fg:x="40981" fg:w="61"/><text x="34.3841%" y="831.50"></text></g><g><title>v8::internal::PagedSpaceBase::PagedSpaceBase (20 samples, 0.02%)</title><rect x="34.1682%" y="805" width="0.0167%" height="15" fill="rgb(244,70,9)" fg:x="41022" fg:w="20"/><text x="34.4182%" y="815.50"></text></g><g><title>cfree@GLIBC_2.2.5 (14 samples, 0.01%)</title><rect x="34.1965%" y="805" width="0.0117%" height="15" fill="rgb(217,125,39)" fg:x="41056" fg:w="14"/><text x="34.4465%" y="815.50"></text></g><g><title>v8::internal::FreeListManyCachedOrigin::~FreeListManyCachedOrigin (14 samples, 0.01%)</title><rect x="34.2098%" y="805" width="0.0117%" height="15" fill="rgb(235,36,10)" fg:x="41072" fg:w="14"/><text x="34.4598%" y="815.50"></text></g><g><title>cfree@GLIBC_2.2.5 (14 samples, 0.01%)</title><rect x="34.2098%" y="789" width="0.0117%" height="15" fill="rgb(251,123,47)" fg:x="41072" fg:w="14"/><text x="34.4598%" y="799.50"></text></g><g><title>v8::internal::Scavenger::~Scavenger (47 samples, 0.04%)</title><rect x="34.1849%" y="821" width="0.0391%" height="15" fill="rgb(221,13,13)" fg:x="41042" fg:w="47"/><text x="34.4349%" y="831.50"></text></g><g><title>__x64_sys_futex (19 samples, 0.02%)</title><rect x="34.2407%" y="693" width="0.0158%" height="15" fill="rgb(238,131,9)" fg:x="41109" fg:w="19"/><text x="34.4907%" y="703.50"></text></g><g><title>do_futex (19 samples, 0.02%)</title><rect x="34.2407%" y="677" width="0.0158%" height="15" fill="rgb(211,50,8)" fg:x="41109" fg:w="19"/><text x="34.4907%" y="687.50"></text></g><g><title>futex_wake (19 samples, 0.02%)</title><rect x="34.2407%" y="661" width="0.0158%" height="15" fill="rgb(245,182,24)" fg:x="41109" fg:w="19"/><text x="34.4907%" y="671.50"></text></g><g><title>do_syscall_64 (22 samples, 0.02%)</title><rect x="34.2407%" y="709" width="0.0183%" height="15" fill="rgb(242,14,37)" fg:x="41109" fg:w="22"/><text x="34.4907%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.02%)</title><rect x="34.2398%" y="725" width="0.0200%" height="15" fill="rgb(246,228,12)" fg:x="41108" fg:w="24"/><text x="34.4898%" y="735.50"></text></g><g><title>node::NodePlatform::CallOnWorkerThread (32 samples, 0.03%)</title><rect x="34.2382%" y="789" width="0.0267%" height="15" fill="rgb(213,55,15)" fg:x="41106" fg:w="32"/><text x="34.4882%" y="799.50"></text></g><g><title>node::TaskQueue&lt;v8::Task&gt;::Push (32 samples, 0.03%)</title><rect x="34.2382%" y="773" width="0.0267%" height="15" fill="rgb(209,9,3)" fg:x="41106" fg:w="32"/><text x="34.4882%" y="783.50"></text></g><g><title>uv_cond_signal (31 samples, 0.03%)</title><rect x="34.2390%" y="757" width="0.0258%" height="15" fill="rgb(230,59,30)" fg:x="41107" fg:w="31"/><text x="34.4890%" y="767.50"></text></g><g><title>pthread_cond_signal@@GLIBC_2.3.2 (31 samples, 0.03%)</title><rect x="34.2390%" y="741" width="0.0258%" height="15" fill="rgb(209,121,21)" fg:x="41107" fg:w="31"/><text x="34.4890%" y="751.50"></text></g><g><title>futex_wait_queue (32 samples, 0.03%)</title><rect x="34.2715%" y="677" width="0.0267%" height="15" fill="rgb(220,109,13)" fg:x="41146" fg:w="32"/><text x="34.5215%" y="687.50"></text></g><g><title>schedule (32 samples, 0.03%)</title><rect x="34.2715%" y="661" width="0.0267%" height="15" fill="rgb(232,18,1)" fg:x="41146" fg:w="32"/><text x="34.5215%" y="671.50"></text></g><g><title>__schedule (32 samples, 0.03%)</title><rect x="34.2715%" y="645" width="0.0267%" height="15" fill="rgb(215,41,42)" fg:x="41146" fg:w="32"/><text x="34.5215%" y="655.50"></text></g><g><title>futex_wait (34 samples, 0.03%)</title><rect x="34.2707%" y="693" width="0.0283%" height="15" fill="rgb(224,123,36)" fg:x="41145" fg:w="34"/><text x="34.5207%" y="703.50"></text></g><g><title>__x64_sys_futex (36 samples, 0.03%)</title><rect x="34.2698%" y="725" width="0.0300%" height="15" fill="rgb(240,125,3)" fg:x="41144" fg:w="36"/><text x="34.5198%" y="735.50"></text></g><g><title>do_futex (35 samples, 0.03%)</title><rect x="34.2707%" y="709" width="0.0292%" height="15" fill="rgb(205,98,50)" fg:x="41145" fg:w="35"/><text x="34.5207%" y="719.50"></text></g><g><title>do_syscall_64 (41 samples, 0.03%)</title><rect x="34.2698%" y="741" width="0.0341%" height="15" fill="rgb(205,185,37)" fg:x="41144" fg:w="41"/><text x="34.5198%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (43 samples, 0.04%)</title><rect x="34.2690%" y="757" width="0.0358%" height="15" fill="rgb(238,207,15)" fg:x="41143" fg:w="43"/><text x="34.5190%" y="767.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (46 samples, 0.04%)</title><rect x="34.2682%" y="773" width="0.0383%" height="15" fill="rgb(213,199,42)" fg:x="41142" fg:w="46"/><text x="34.5182%" y="783.50"></text></g><g><title>pthread_cond_wait@@GLIBC_2.3.2 (48 samples, 0.04%)</title><rect x="34.2673%" y="789" width="0.0400%" height="15" fill="rgb(235,201,11)" fg:x="41141" fg:w="48"/><text x="34.5173%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (354 samples, 0.29%)</title><rect x="34.4581%" y="709" width="0.2949%" height="15" fill="rgb(207,46,11)" fg:x="41370" fg:w="354"/><text x="34.7081%" y="719.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateShortcutCandidate&lt;v8::internal::FullHeapObjectSlot&gt; (397 samples, 0.33%)</title><rect x="34.4347%" y="725" width="0.3307%" height="15" fill="rgb(241,35,35)" fg:x="41342" fg:w="397"/><text x="34.6847%" y="735.50"></text></g><g><title>v8::internal::EvacuationAllocator::AllocateInNewSpace (15 samples, 0.01%)</title><rect x="34.7529%" y="709" width="0.0125%" height="15" fill="rgb(243,32,47)" fg:x="41724" fg:w="15"/><text x="35.0029%" y="719.50"></text></g><g><title>v8::internal::Scavenger::Process (568 samples, 0.47%)</title><rect x="34.3173%" y="773" width="0.4731%" height="15" fill="rgb(247,202,23)" fg:x="41201" fg:w="568"/><text x="34.5673%" y="783.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (533 samples, 0.44%)</title><rect x="34.3464%" y="757" width="0.4439%" height="15" fill="rgb(219,102,11)" fg:x="41236" fg:w="533"/><text x="34.5964%" y="767.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (497 samples, 0.41%)</title><rect x="34.3764%" y="741" width="0.4140%" height="15" fill="rgb(243,110,44)" fg:x="41272" fg:w="497"/><text x="34.6264%" y="751.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (21 samples, 0.02%)</title><rect x="34.8312%" y="741" width="0.0175%" height="15" fill="rgb(222,74,54)" fg:x="41818" fg:w="21"/><text x="35.0812%" y="751.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ConcurrentScavengePages (72 samples, 0.06%)</title><rect x="34.7904%" y="773" width="0.0600%" height="15" fill="rgb(216,99,12)" fg:x="41769" fg:w="72"/><text x="35.0404%" y="783.50"></text></g><g><title>v8::internal::Scavenger::ScavengePage (70 samples, 0.06%)</title><rect x="34.7921%" y="757" width="0.0583%" height="15" fill="rgb(226,22,26)" fg:x="41771" fg:w="70"/><text x="35.0421%" y="767.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (642 samples, 0.53%)</title><rect x="34.3165%" y="789" width="0.5347%" height="15" fill="rgb(217,163,10)" fg:x="41200" fg:w="642"/><text x="34.5665%" y="799.50"></text></g><g><title>v8::platform::DefaultJobState::Join (744 samples, 0.62%)</title><rect x="34.2348%" y="805" width="0.6197%" height="15" fill="rgb(213,25,53)" fg:x="41102" fg:w="744"/><text x="34.4848%" y="815.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (754 samples, 0.63%)</title><rect x="34.2323%" y="821" width="0.6280%" height="15" fill="rgb(252,105,26)" fg:x="41099" fg:w="754"/><text x="34.4823%" y="831.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1,307 samples, 1.09%)</title><rect x="33.7734%" y="837" width="1.0886%" height="15" fill="rgb(220,39,43)" fg:x="40548" fg:w="1307"/><text x="34.0234%" y="847.50"></text></g><g><title>v8::internal::Heap::Scavenge (1,519 samples, 1.27%)</title><rect x="33.7701%" y="853" width="1.2652%" height="15" fill="rgb(229,68,48)" fg:x="40544" fg:w="1519"/><text x="34.0201%" y="863.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EvacuatePrologue (208 samples, 0.17%)</title><rect x="34.8620%" y="837" width="0.1732%" height="15" fill="rgb(252,8,32)" fg:x="41855" fg:w="208"/><text x="35.1120%" y="847.50"></text></g><g><title>v8::internal::ConcurrentMarking::ClearMemoryChunkData (15 samples, 0.01%)</title><rect x="35.0228%" y="821" width="0.0125%" height="15" fill="rgb(223,20,43)" fg:x="42048" fg:w="15"/><text x="35.2728%" y="831.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1,648 samples, 1.37%)</title><rect x="33.6826%" y="869" width="1.3727%" height="15" fill="rgb(229,81,49)" fg:x="40439" fg:w="1648"/><text x="33.9326%" y="879.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1,741 samples, 1.45%)</title><rect x="33.6118%" y="885" width="1.4501%" height="15" fill="rgb(236,28,36)" fg:x="40354" fg:w="1741"/><text x="33.8618%" y="895.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1,744 samples, 1.45%)</title><rect x="33.6110%" y="917" width="1.4526%" height="15" fill="rgb(249,185,26)" fg:x="40353" fg:w="1744"/><text x="33.8610%" y="927.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1,744 samples, 1.45%)</title><rect x="33.6110%" y="901" width="1.4526%" height="15" fill="rgb(249,174,33)" fg:x="40353" fg:w="1744"/><text x="33.8610%" y="911.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1,794 samples, 1.49%)</title><rect x="33.5710%" y="933" width="1.4943%" height="15" fill="rgb(233,201,37)" fg:x="40305" fg:w="1794"/><text x="33.8210%" y="943.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (1,852 samples, 1.54%)</title><rect x="33.5235%" y="965" width="1.5426%" height="15" fill="rgb(221,78,26)" fg:x="40248" fg:w="1852"/><text x="33.7735%" y="975.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1,797 samples, 1.50%)</title><rect x="33.5693%" y="949" width="1.4968%" height="15" fill="rgb(250,127,30)" fg:x="40303" fg:w="1797"/><text x="33.8193%" y="959.50"></text></g><g><title>__hrtimer_run_queues (26 samples, 0.02%)</title><rect x="55.1654%" y="853" width="0.0217%" height="15" fill="rgb(230,49,44)" fg:x="66231" fg:w="26"/><text x="55.4154%" y="863.50"></text></g><g><title>tick_sched_timer (26 samples, 0.02%)</title><rect x="55.1654%" y="837" width="0.0217%" height="15" fill="rgb(229,67,23)" fg:x="66231" fg:w="26"/><text x="55.4154%" y="847.50"></text></g><g><title>tick_sched_handle (14 samples, 0.01%)</title><rect x="55.1754%" y="821" width="0.0117%" height="15" fill="rgb(249,83,47)" fg:x="66243" fg:w="14"/><text x="55.4254%" y="831.50"></text></g><g><title>update_process_times (14 samples, 0.01%)</title><rect x="55.1754%" y="805" width="0.0117%" height="15" fill="rgb(215,43,3)" fg:x="66243" fg:w="14"/><text x="55.4254%" y="815.50"></text></g><g><title>__sysvec_apic_timer_interrupt (27 samples, 0.02%)</title><rect x="55.1654%" y="885" width="0.0225%" height="15" fill="rgb(238,154,13)" fg:x="66231" fg:w="27"/><text x="55.4154%" y="895.50"></text></g><g><title>hrtimer_interrupt (27 samples, 0.02%)</title><rect x="55.1654%" y="869" width="0.0225%" height="15" fill="rgb(219,56,2)" fg:x="66231" fg:w="27"/><text x="55.4154%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (35 samples, 0.03%)</title><rect x="55.1654%" y="917" width="0.0292%" height="15" fill="rgb(233,0,4)" fg:x="66231" fg:w="35"/><text x="55.4154%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (35 samples, 0.03%)</title><rect x="55.1654%" y="901" width="0.0292%" height="15" fill="rgb(235,30,7)" fg:x="66231" fg:w="35"/><text x="55.4154%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (5,359 samples, 4.46%)</title><rect x="50.7334%" y="933" width="4.4636%" height="15" fill="rgb(250,79,13)" fg:x="60910" fg:w="5359"/><text x="50.9834%" y="943.50">__mem..</text></g><g><title>tick_sched_do_timer (14 samples, 0.01%)</title><rect x="55.2029%" y="837" width="0.0117%" height="15" fill="rgb(211,146,34)" fg:x="66276" fg:w="14"/><text x="55.4529%" y="847.50"></text></g><g><title>tick_do_update_jiffies64 (13 samples, 0.01%)</title><rect x="55.2037%" y="821" width="0.0108%" height="15" fill="rgb(228,22,38)" fg:x="66277" fg:w="13"/><text x="55.4537%" y="831.50"></text></g><g><title>__hrtimer_run_queues (46 samples, 0.04%)</title><rect x="55.1979%" y="869" width="0.0383%" height="15" fill="rgb(235,168,5)" fg:x="66270" fg:w="46"/><text x="55.4479%" y="879.50"></text></g><g><title>tick_sched_timer (42 samples, 0.03%)</title><rect x="55.2012%" y="853" width="0.0350%" height="15" fill="rgb(221,155,16)" fg:x="66274" fg:w="42"/><text x="55.4512%" y="863.50"></text></g><g><title>tick_sched_handle (26 samples, 0.02%)</title><rect x="55.2145%" y="837" width="0.0217%" height="15" fill="rgb(215,215,53)" fg:x="66290" fg:w="26"/><text x="55.4645%" y="847.50"></text></g><g><title>update_process_times (26 samples, 0.02%)</title><rect x="55.2145%" y="821" width="0.0217%" height="15" fill="rgb(223,4,10)" fg:x="66290" fg:w="26"/><text x="55.4645%" y="831.50"></text></g><g><title>scheduler_tick (20 samples, 0.02%)</title><rect x="55.2195%" y="805" width="0.0167%" height="15" fill="rgb(234,103,6)" fg:x="66296" fg:w="20"/><text x="55.4695%" y="815.50"></text></g><g><title>__sysvec_apic_timer_interrupt (48 samples, 0.04%)</title><rect x="55.1979%" y="901" width="0.0400%" height="15" fill="rgb(227,97,0)" fg:x="66270" fg:w="48"/><text x="55.4479%" y="911.50"></text></g><g><title>hrtimer_interrupt (48 samples, 0.04%)</title><rect x="55.1979%" y="885" width="0.0400%" height="15" fill="rgb(234,150,53)" fg:x="66270" fg:w="48"/><text x="55.4479%" y="895.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (72 samples, 0.06%)</title><rect x="55.1970%" y="933" width="0.0600%" height="15" fill="rgb(228,201,54)" fg:x="66269" fg:w="72"/><text x="55.4470%" y="943.50"></text></g><g><title>sysvec_apic_timer_interrupt (72 samples, 0.06%)</title><rect x="55.1970%" y="917" width="0.0600%" height="15" fill="rgb(222,22,37)" fg:x="66269" fg:w="72"/><text x="55.4470%" y="927.50"></text></g><g><title>memmove@plt (1,092 samples, 0.91%)</title><rect x="55.2578%" y="933" width="0.9096%" height="15" fill="rgb(237,53,32)" fg:x="66342" fg:w="1092"/><text x="55.5078%" y="943.50"></text></g><g><title>v8::internal::String::SlowFlatten (30,462 samples, 25.37%)</title><rect x="33.4985%" y="981" width="25.3725%" height="15" fill="rgb(233,25,53)" fg:x="40218" fg:w="30462"/><text x="33.7485%" y="991.50">v8::internal::String::SlowFlatten</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (28,568 samples, 23.79%)</title><rect x="35.0761%" y="965" width="23.7950%" height="15" fill="rgb(210,40,34)" fg:x="42112" fg:w="28568"/><text x="35.3261%" y="975.50">void v8::internal::String::WriteToFlat..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (28,564 samples, 23.79%)</title><rect x="35.0794%" y="949" width="23.7916%" height="15" fill="rgb(241,220,44)" fg:x="42116" fg:w="28564"/><text x="35.3294%" y="959.50">void v8::internal::String::WriteToFlat..</text></g><g><title>void v8::internal::CopyChars&lt;unsigned char, unsigned char&gt; (3,246 samples, 2.70%)</title><rect x="56.1674%" y="933" width="2.7037%" height="15" fill="rgb(235,28,35)" fg:x="67434" fg:w="3246"/><text x="56.4174%" y="943.50">vo..</text></g><g><title>node::Buffer::(anonymous namespace)::SlowByteLengthUtf8 (41,258 samples, 34.36%)</title><rect x="24.5088%" y="1013" width="34.3648%" height="15" fill="rgb(210,56,17)" fg:x="29425" fg:w="41258"/><text x="24.7588%" y="1023.50">node::Buffer::(anonymous namespace)::SlowByteLengthUtf8</text></g><g><title>v8::String::Utf8Length (41,199 samples, 34.32%)</title><rect x="24.5579%" y="997" width="34.3156%" height="15" fill="rgb(224,130,29)" fg:x="29484" fg:w="41199"/><text x="24.8079%" y="1007.50">v8::String::Utf8Length</text></g><g><title>v8::Context::GetMicrotaskQueue (16 samples, 0.01%)</title><rect x="58.9177%" y="997" width="0.0133%" height="15" fill="rgb(235,212,8)" fg:x="70736" fg:w="16"/><text x="59.1677%" y="1007.50"></text></g><g><title>v8::Context::GetNumberOfEmbedderDataFields (23 samples, 0.02%)</title><rect x="58.9310%" y="997" width="0.0192%" height="15" fill="rgb(223,33,50)" fg:x="70752" fg:w="23"/><text x="59.1810%" y="1007.50"></text></g><g><title>node::task_queue::RunMicrotasks (96 samples, 0.08%)</title><rect x="58.8736%" y="1013" width="0.0800%" height="15" fill="rgb(219,149,13)" fg:x="70683" fg:w="96"/><text x="59.1236%" y="1023.50"></text></g><g><title>[[vdso]] (18 samples, 0.01%)</title><rect x="59.0351%" y="933" width="0.0150%" height="15" fill="rgb(250,156,29)" fg:x="70877" fg:w="18"/><text x="59.2851%" y="943.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (55 samples, 0.05%)</title><rect x="59.0152%" y="949" width="0.0458%" height="15" fill="rgb(216,193,19)" fg:x="70853" fg:w="55"/><text x="59.2652%" y="959.50"></text></g><g><title>__vdso_clock_gettime (13 samples, 0.01%)</title><rect x="59.0501%" y="933" width="0.0108%" height="15" fill="rgb(216,135,14)" fg:x="70895" fg:w="13"/><text x="59.3001%" y="943.50"></text></g><g><title>node::timers::BindingData::FastGetLibuvNow (131 samples, 0.11%)</title><rect x="58.9535%" y="1013" width="0.1091%" height="15" fill="rgb(241,47,5)" fg:x="70779" fg:w="131"/><text x="59.2035%" y="1023.50"></text></g><g><title>node::Environment::GetNowUint64 (90 samples, 0.07%)</title><rect x="58.9877%" y="997" width="0.0750%" height="15" fill="rgb(233,42,35)" fg:x="70820" fg:w="90"/><text x="59.2377%" y="1007.50"></text></g><g><title>uv_update_time (70 samples, 0.06%)</title><rect x="59.0043%" y="981" width="0.0583%" height="15" fill="rgb(231,13,6)" fg:x="70840" fg:w="70"/><text x="59.2543%" y="991.50"></text></g><g><title>uv__hrtime (66 samples, 0.05%)</title><rect x="59.0077%" y="965" width="0.0550%" height="15" fill="rgb(207,181,40)" fg:x="70844" fg:w="66"/><text x="59.2577%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="59.1343%" y="997" width="0.0125%" height="15" fill="rgb(254,173,49)" fg:x="70996" fg:w="15"/><text x="59.3843%" y="1007.50"></text></g><g><title>memcpy@plt (27 samples, 0.02%)</title><rect x="59.1468%" y="997" width="0.0225%" height="15" fill="rgb(221,1,38)" fg:x="71011" fg:w="27"/><text x="59.3968%" y="1007.50"></text></g><g><title>v8::internal::tracing::TraceEventHelper::GetTracingController (41 samples, 0.03%)</title><rect x="59.1776%" y="997" width="0.0341%" height="15" fill="rgb(206,124,46)" fg:x="71048" fg:w="41"/><text x="59.4276%" y="1007.50"></text></g><g><title>v8::internal::V8::GetCurrentPlatform (41 samples, 0.03%)</title><rect x="59.1776%" y="981" width="0.0341%" height="15" fill="rgb(249,21,11)" fg:x="71048" fg:w="41"/><text x="59.4276%" y="991.50"></text></g><g><title>__strcmp_avx2 (172 samples, 0.14%)</title><rect x="59.2284%" y="981" width="0.1433%" height="15" fill="rgb(222,201,40)" fg:x="71109" fg:w="172"/><text x="59.4784%" y="991.50"></text></g><g><title>v8::internal::Builtin_IsTraceCategoryEnabled (375 samples, 0.31%)</title><rect x="59.0651%" y="1013" width="0.3123%" height="15" fill="rgb(235,61,29)" fg:x="70913" fg:w="375"/><text x="59.3151%" y="1023.50"></text></g><g><title>v8::platform::tracing::TracingController::GetCategoryGroupEnabled (199 samples, 0.17%)</title><rect x="59.2117%" y="997" width="0.1658%" height="15" fill="rgb(219,207,3)" fg:x="71089" fg:w="199"/><text x="59.4617%" y="1007.50"></text></g><g><title>v8::internal::ComputeSeededIntegerHash (27 samples, 0.02%)</title><rect x="59.3775%" y="1013" width="0.0225%" height="15" fill="rgb(222,56,46)" fg:x="71288" fg:w="27"/><text x="59.6275%" y="1023.50"></text></g><g><title>v8::internal::Heap::ClearKeptObjects (20 samples, 0.02%)</title><rect x="59.4000%" y="1013" width="0.0167%" height="15" fill="rgb(239,76,54)" fg:x="71315" fg:w="20"/><text x="59.6500%" y="1023.50"></text></g><g><title>__posix_memalign (14 samples, 0.01%)</title><rect x="59.4274%" y="981" width="0.0117%" height="15" fill="rgb(231,124,27)" fg:x="71348" fg:w="14"/><text x="59.6774%" y="991.50"></text></g><g><title>v8::internal::MemoryChunk::AllocateSlotSet (19 samples, 0.02%)</title><rect x="59.4241%" y="997" width="0.0158%" height="15" fill="rgb(249,195,6)" fg:x="71344" fg:w="19"/><text x="59.6741%" y="1007.50"></text></g><g><title>v8::internal::Heap::InsertIntoRememberedSetFromCode (30 samples, 0.02%)</title><rect x="59.4166%" y="1013" width="0.0250%" height="15" fill="rgb(237,174,47)" fg:x="71335" fg:w="30"/><text x="59.6666%" y="1023.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (20 samples, 0.02%)</title><rect x="59.4474%" y="1013" width="0.0167%" height="15" fill="rgb(206,201,31)" fg:x="71372" fg:w="20"/><text x="59.6974%" y="1023.50"></text></g><g><title>pthread_rwlock_unlock@@GLIBC_2.34 (23 samples, 0.02%)</title><rect x="59.5924%" y="965" width="0.0192%" height="15" fill="rgb(231,57,52)" fg:x="71546" fg:w="23"/><text x="59.8424%" y="975.50"></text></g><g><title>pthread_rwlock_unlock@plt (27 samples, 0.02%)</title><rect x="59.6115%" y="965" width="0.0225%" height="15" fill="rgb(248,177,22)" fg:x="71569" fg:w="27"/><text x="59.8615%" y="975.50"></text></g><g><title>v8::internal::Heap::CreateFillerObjectAt (14 samples, 0.01%)</title><rect x="59.6507%" y="949" width="0.0117%" height="15" fill="rgb(215,211,37)" fg:x="71616" fg:w="14"/><text x="59.9007%" y="959.50"></text></g><g><title>heap::base::ActiveSystemPages::Add (35 samples, 0.03%)</title><rect x="59.8422%" y="933" width="0.0292%" height="15" fill="rgb(241,128,51)" fg:x="71846" fg:w="35"/><text x="60.0922%" y="943.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AddFreshPage (301 samples, 0.25%)</title><rect x="59.6348%" y="965" width="0.2507%" height="15" fill="rgb(227,165,31)" fg:x="71597" fg:w="301"/><text x="59.8848%" y="975.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::UpdateLinearAllocationArea (268 samples, 0.22%)</title><rect x="59.6623%" y="949" width="0.2232%" height="15" fill="rgb(228,167,24)" fg:x="71630" fg:w="268"/><text x="59.9123%" y="959.50"></text></g><g><title>pthread_rwlock_wrlock@@GLIBC_2.34 (33 samples, 0.03%)</title><rect x="59.9030%" y="949" width="0.0275%" height="15" fill="rgb(228,143,12)" fg:x="71919" fg:w="33"/><text x="60.1530%" y="959.50"></text></g><g><title>v8::internal::SpaceWithLinearArea::AdvanceAllocationObservers (76 samples, 0.06%)</title><rect x="59.8931%" y="965" width="0.0633%" height="15" fill="rgb(249,149,8)" fg:x="71907" fg:w="76"/><text x="60.1431%" y="975.50"></text></g><g><title>v8::internal::AllocationCounter::AdvanceAllocationObservers (15 samples, 0.01%)</title><rect x="59.9439%" y="949" width="0.0125%" height="15" fill="rgb(243,35,44)" fg:x="71968" fg:w="15"/><text x="60.1939%" y="959.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EnsureAllocation (468 samples, 0.39%)</title><rect x="59.5707%" y="981" width="0.3898%" height="15" fill="rgb(246,89,9)" fg:x="71520" fg:w="468"/><text x="59.8207%" y="991.50"></text></g><g><title>v8::internal::Runtime_AllocateInYoungGeneration (603 samples, 0.50%)</title><rect x="59.4641%" y="1013" width="0.5023%" height="15" fill="rgb(233,213,13)" fg:x="71392" fg:w="603"/><text x="59.7141%" y="1023.50"></text></g><g><title>v8::internal::Factory::NewFillerObject (550 samples, 0.46%)</title><rect x="59.5082%" y="997" width="0.4581%" height="15" fill="rgb(233,141,41)" fg:x="71445" fg:w="550"/><text x="59.7582%" y="1007.50"></text></g><g><title>v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::SlowStringWrapperElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)17&gt; &gt;::GetMaxIndex (13 samples, 0.01%)</title><rect x="60.0455%" y="949" width="0.0108%" height="15" fill="rgb(239,167,4)" fg:x="72090" fg:w="13"/><text x="60.2955%" y="959.50"></text></g><g><title>v8::internal::Factory::TryNewFixedArray (42 samples, 0.03%)</title><rect x="60.0563%" y="949" width="0.0350%" height="15" fill="rgb(209,217,16)" fg:x="72103" fg:w="42"/><text x="60.3063%" y="959.50"></text></g><g><title>void v8::internal::Heap::CopyRange&lt;v8::internal::FullObjectSlot&gt; (20 samples, 0.02%)</title><rect x="60.1013%" y="949" width="0.0167%" height="15" fill="rgb(219,88,35)" fg:x="72157" fg:w="20"/><text x="60.3513%" y="959.50"></text></g><g><title>v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyNonextensibleObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)7&gt; &gt;::PrependElementIndices (113 samples, 0.09%)</title><rect x="60.0255%" y="965" width="0.0941%" height="15" fill="rgb(220,193,23)" fg:x="72066" fg:w="113"/><text x="60.2755%" y="975.50"></text></g><g><title>v8::internal::Dictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::NumberOfEnumerableProperties (22 samples, 0.02%)</title><rect x="60.1596%" y="949" width="0.0183%" height="15" fill="rgb(230,90,52)" fg:x="72227" fg:w="22"/><text x="60.4096%" y="959.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (45 samples, 0.04%)</title><rect x="60.1787%" y="949" width="0.0375%" height="15" fill="rgb(252,106,19)" fg:x="72250" fg:w="45"/><text x="60.4287%" y="959.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawArray (37 samples, 0.03%)</title><rect x="60.1854%" y="933" width="0.0308%" height="15" fill="rgb(206,74,20)" fg:x="72258" fg:w="37"/><text x="60.4354%" y="943.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (36 samples, 0.03%)</title><rect x="60.1862%" y="917" width="0.0300%" height="15" fill="rgb(230,138,44)" fg:x="72259" fg:w="36"/><text x="60.4362%" y="927.50"></text></g><g><title>v8::internal::Handle&lt;v8::internal::FixedArray&gt; v8::internal::(anonymous namespace)::GetOwnEnumPropertyDictionaryKeys&lt;v8::internal::NameDictionary&gt; (127 samples, 0.11%)</title><rect x="60.1196%" y="965" width="0.1058%" height="15" fill="rgb(235,182,43)" fg:x="72179" fg:w="127"/><text x="60.3696%" y="975.50"></text></g><g><title>v8::internal::FastKeyAccumulator::GetKeys (300 samples, 0.25%)</title><rect x="59.9805%" y="997" width="0.2499%" height="15" fill="rgb(242,16,51)" fg:x="72012" fg:w="300"/><text x="60.2305%" y="1007.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::FixedArray&gt; v8::internal::(anonymous namespace)::GetOwnKeysWithElements&lt;false&gt; (290 samples, 0.24%)</title><rect x="59.9888%" y="981" width="0.2415%" height="15" fill="rgb(248,9,4)" fg:x="72022" fg:w="290"/><text x="60.2388%" y="991.50"></text></g><g><title>v8::internal::FastKeyAccumulator::Prepare (43 samples, 0.04%)</title><rect x="60.2304%" y="997" width="0.0358%" height="15" fill="rgb(210,31,22)" fg:x="72312" fg:w="43"/><text x="60.4804%" y="1007.50"></text></g><g><title>v8::internal::JSObject::HasEnumerableElements (17 samples, 0.01%)</title><rect x="60.2520%" y="981" width="0.0142%" height="15" fill="rgb(239,54,39)" fg:x="72338" fg:w="17"/><text x="60.5020%" y="991.50"></text></g><g><title>v8::internal::Runtime_ForInEnumerate (417 samples, 0.35%)</title><rect x="59.9672%" y="1013" width="0.3473%" height="15" fill="rgb(230,99,41)" fg:x="71996" fg:w="417"/><text x="60.2172%" y="1023.50"></text></g><g><title>v8::internal::JSObject::MakePrototypesFast (58 samples, 0.05%)</title><rect x="60.2662%" y="997" width="0.0483%" height="15" fill="rgb(253,106,12)" fg:x="72355" fg:w="58"/><text x="60.5162%" y="1007.50"></text></g><g><title>v8::internal::PrototypeIterator::Advance (20 samples, 0.02%)</title><rect x="60.2979%" y="981" width="0.0167%" height="15" fill="rgb(213,46,41)" fg:x="72393" fg:w="20"/><text x="60.5479%" y="991.50"></text></g><g><title>v8::internal::Runtime_JSReceiverGetPrototypeOf (14 samples, 0.01%)</title><rect x="60.3145%" y="1013" width="0.0117%" height="15" fill="rgb(215,133,35)" fg:x="72413" fg:w="14"/><text x="60.5645%" y="1023.50"></text></g><g><title>node::AsyncHooks::DefaultTriggerAsyncIdScope::DefaultTriggerAsyncIdScope (53 samples, 0.04%)</title><rect x="60.3820%" y="997" width="0.0441%" height="15" fill="rgb(213,28,5)" fg:x="72494" fg:w="53"/><text x="60.6320%" y="1007.50"></text></g><g><title>node::AsyncHooks::DefaultTriggerAsyncIdScope::~DefaultTriggerAsyncIdScope (26 samples, 0.02%)</title><rect x="60.4261%" y="997" width="0.0217%" height="15" fill="rgb(215,77,49)" fg:x="72547" fg:w="26"/><text x="60.6761%" y="1007.50"></text></g><g><title>free@plt (25 samples, 0.02%)</title><rect x="60.5694%" y="981" width="0.0208%" height="15" fill="rgb(248,100,22)" fg:x="72719" fg:w="25"/><text x="60.8194%" y="991.50"></text></g><g><title>node::Buffer::HasInstance (19 samples, 0.02%)</title><rect x="60.5902%" y="981" width="0.0158%" height="15" fill="rgb(208,67,9)" fg:x="72744" fg:w="19"/><text x="60.8402%" y="991.50"></text></g><g><title>node::ParseEncoding (116 samples, 0.10%)</title><rect x="60.6319%" y="965" width="0.0966%" height="15" fill="rgb(219,133,21)" fg:x="72794" fg:w="116"/><text x="60.8819%" y="975.50"></text></g><g><title>node::StringBytes::StorageSize (72 samples, 0.06%)</title><rect x="60.7701%" y="949" width="0.0600%" height="15" fill="rgb(246,46,29)" fg:x="72960" fg:w="72"/><text x="61.0201%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="60.9292%" y="933" width="0.0117%" height="15" fill="rgb(246,185,52)" fg:x="73151" fg:w="14"/><text x="61.1792%" y="943.50"></text></g><g><title>v8::String::WriteUtf8 (127 samples, 0.11%)</title><rect x="60.8393%" y="949" width="0.1058%" height="15" fill="rgb(252,136,11)" fg:x="73043" fg:w="127"/><text x="61.0893%" y="959.50"></text></g><g><title>node::Utf8Value::Utf8Value (264 samples, 0.22%)</title><rect x="60.7285%" y="965" width="0.2199%" height="15" fill="rgb(219,138,53)" fg:x="72910" fg:w="264"/><text x="60.9785%" y="975.50"></text></g><g><title>node::ParseEncoding (414 samples, 0.34%)</title><rect x="60.6060%" y="981" width="0.3448%" height="15" fill="rgb(211,51,23)" fg:x="72763" fg:w="414"/><text x="60.8560%" y="991.50"></text></g><g><title>__GI___pthread_enable_asynccancel (13 samples, 0.01%)</title><rect x="61.0950%" y="917" width="0.0108%" height="15" fill="rgb(247,221,28)" fg:x="73350" fg:w="13"/><text x="61.3450%" y="927.50"></text></g><g><title>__x64_sys_writev (25 samples, 0.02%)</title><rect x="61.1874%" y="901" width="0.0208%" height="15" fill="rgb(251,222,45)" fg:x="73461" fg:w="25"/><text x="61.4374%" y="911.50"></text></g><g><title>__fget_light (75 samples, 0.06%)</title><rect x="61.2432%" y="837" width="0.0625%" height="15" fill="rgb(217,162,53)" fg:x="73528" fg:w="75"/><text x="61.4932%" y="847.50"></text></g><g><title>__fdget_pos (80 samples, 0.07%)</title><rect x="61.2424%" y="853" width="0.0666%" height="15" fill="rgb(229,93,14)" fg:x="73527" fg:w="80"/><text x="61.4924%" y="863.50"></text></g><g><title>apparmor_socket_sendmsg (14 samples, 0.01%)</title><rect x="61.4465%" y="789" width="0.0117%" height="15" fill="rgb(209,67,49)" fg:x="73772" fg:w="14"/><text x="61.6965%" y="799.50"></text></g><g><title>lock_sock_nested (13 samples, 0.01%)</title><rect x="61.4756%" y="773" width="0.0108%" height="15" fill="rgb(213,87,29)" fg:x="73807" fg:w="13"/><text x="61.7256%" y="783.50"></text></g><g><title>_raw_spin_lock_bh (23 samples, 0.02%)</title><rect x="61.4998%" y="757" width="0.0192%" height="15" fill="rgb(205,151,52)" fg:x="73836" fg:w="23"/><text x="61.7498%" y="767.50"></text></g><g><title>tcp_push (33 samples, 0.03%)</title><rect x="61.5414%" y="757" width="0.0275%" height="15" fill="rgb(253,215,39)" fg:x="73886" fg:w="33"/><text x="61.7914%" y="767.50"></text></g><g><title>tcp_rate_check_app_limited (19 samples, 0.02%)</title><rect x="61.5789%" y="757" width="0.0158%" height="15" fill="rgb(221,220,41)" fg:x="73931" fg:w="19"/><text x="61.8289%" y="767.50"></text></g><g><title>_copy_from_iter (14 samples, 0.01%)</title><rect x="61.8279%" y="741" width="0.0117%" height="15" fill="rgb(218,133,21)" fg:x="74230" fg:w="14"/><text x="62.0779%" y="751.50"></text></g><g><title>__alloc_pages (15 samples, 0.01%)</title><rect x="61.9004%" y="709" width="0.0125%" height="15" fill="rgb(221,193,43)" fg:x="74317" fg:w="15"/><text x="62.1504%" y="719.50"></text></g><g><title>__next_zones_zonelist (30 samples, 0.02%)</title><rect x="61.9804%" y="677" width="0.0250%" height="15" fill="rgb(240,128,52)" fg:x="74413" fg:w="30"/><text x="62.2304%" y="687.50"></text></g><g><title>__zone_watermark_ok (25 samples, 0.02%)</title><rect x="62.0753%" y="661" width="0.0208%" height="15" fill="rgb(253,114,12)" fg:x="74527" fg:w="25"/><text x="62.3253%" y="671.50"></text></g><g><title>_raw_spin_trylock (39 samples, 0.03%)</title><rect x="62.0961%" y="661" width="0.0325%" height="15" fill="rgb(215,223,47)" fg:x="74552" fg:w="39"/><text x="62.3461%" y="671.50"></text></g><g><title>clear_page_erms (1,999 samples, 1.67%)</title><rect x="62.1336%" y="661" width="1.6650%" height="15" fill="rgb(248,225,23)" fg:x="74597" fg:w="1999"/><text x="62.3836%" y="671.50"></text></g><g><title>post_alloc_hook (52 samples, 0.04%)</title><rect x="63.7986%" y="661" width="0.0433%" height="15" fill="rgb(250,108,0)" fg:x="76596" fg:w="52"/><text x="64.0486%" y="671.50"></text></g><g><title>prep_compound_page (67 samples, 0.06%)</title><rect x="63.8419%" y="661" width="0.0558%" height="15" fill="rgb(228,208,7)" fg:x="76648" fg:w="67"/><text x="64.0919%" y="671.50"></text></g><g><title>__rmqueue_pcplist (68 samples, 0.06%)</title><rect x="63.9494%" y="645" width="0.0566%" height="15" fill="rgb(244,45,10)" fg:x="76777" fg:w="68"/><text x="64.1994%" y="655.50"></text></g><g><title>get_page_from_freelist (2,393 samples, 1.99%)</title><rect x="62.0145%" y="677" width="1.9932%" height="15" fill="rgb(207,125,25)" fg:x="74454" fg:w="2393"/><text x="62.2645%" y="687.50">g..</text></g><g><title>rmqueue (132 samples, 0.11%)</title><rect x="63.8978%" y="661" width="0.1099%" height="15" fill="rgb(210,195,18)" fg:x="76715" fg:w="132"/><text x="64.1478%" y="671.50"></text></g><g><title>__alloc_pages (2,508 samples, 2.09%)</title><rect x="61.9304%" y="693" width="2.0890%" height="15" fill="rgb(249,80,12)" fg:x="74353" fg:w="2508"/><text x="62.1804%" y="703.50">_..</text></g><g><title>__next_zones_zonelist (30 samples, 0.02%)</title><rect x="64.0194%" y="693" width="0.0250%" height="15" fill="rgb(221,65,9)" fg:x="76861" fg:w="30"/><text x="64.2694%" y="703.50"></text></g><g><title>_find_first_bit (22 samples, 0.02%)</title><rect x="64.0443%" y="693" width="0.0183%" height="15" fill="rgb(235,49,36)" fg:x="76891" fg:w="22"/><text x="64.2943%" y="703.50"></text></g><g><title>alloc_pages (2,595 samples, 2.16%)</title><rect x="61.9129%" y="709" width="2.1614%" height="15" fill="rgb(225,32,20)" fg:x="74332" fg:w="2595"/><text x="62.1629%" y="719.50">a..</text></g><g><title>sk_page_frag_refill (2,683 samples, 2.23%)</title><rect x="61.8488%" y="741" width="2.2347%" height="15" fill="rgb(215,141,46)" fg:x="74255" fg:w="2683"/><text x="62.0988%" y="751.50">s..</text></g><g><title>skb_page_frag_refill (2,679 samples, 2.23%)</title><rect x="61.8521%" y="725" width="2.2314%" height="15" fill="rgb(250,160,47)" fg:x="74259" fg:w="2679"/><text x="62.1021%" y="735.50">s..</text></g><g><title>__virt_addr_valid (88 samples, 0.07%)</title><rect x="64.1426%" y="677" width="0.0733%" height="15" fill="rgb(216,222,40)" fg:x="77009" fg:w="88"/><text x="64.3926%" y="687.50"></text></g><g><title>__check_object_size.part.0 (137 samples, 0.11%)</title><rect x="64.1026%" y="709" width="0.1141%" height="15" fill="rgb(234,217,39)" fg:x="76961" fg:w="137"/><text x="64.3526%" y="719.50"></text></g><g><title>check_heap_object (104 samples, 0.09%)</title><rect x="64.1301%" y="693" width="0.0866%" height="15" fill="rgb(207,178,40)" fg:x="76994" fg:w="104"/><text x="64.3801%" y="703.50"></text></g><g><title>check_heap_object (18 samples, 0.01%)</title><rect x="64.2168%" y="709" width="0.0150%" height="15" fill="rgb(221,136,13)" fg:x="77098" fg:w="18"/><text x="64.4668%" y="719.50"></text></g><g><title>__check_object_size (170 samples, 0.14%)</title><rect x="64.1026%" y="725" width="0.1416%" height="15" fill="rgb(249,199,10)" fg:x="76961" fg:w="170"/><text x="64.3526%" y="735.50"></text></g><g><title>check_stack_object (15 samples, 0.01%)</title><rect x="64.2318%" y="709" width="0.0125%" height="15" fill="rgb(249,222,13)" fg:x="77116" fg:w="15"/><text x="64.4818%" y="719.50"></text></g><g><title>copyin (29 samples, 0.02%)</title><rect x="64.3167%" y="709" width="0.0242%" height="15" fill="rgb(244,185,38)" fg:x="77218" fg:w="29"/><text x="64.5667%" y="719.50"></text></g><g><title>_copy_from_iter (2,686 samples, 2.24%)</title><rect x="64.2442%" y="725" width="2.2372%" height="15" fill="rgb(236,202,9)" fg:x="77131" fg:w="2686"/><text x="64.4942%" y="735.50">_..</text></g><g><title>rep_movs_alternative (2,570 samples, 2.14%)</title><rect x="64.3409%" y="709" width="2.1406%" height="15" fill="rgb(250,229,37)" fg:x="77247" fg:w="2570"/><text x="64.5909%" y="719.50">r..</text></g><g><title>skb_do_copy_data_nocache (2,894 samples, 2.41%)</title><rect x="64.0835%" y="741" width="2.4105%" height="15" fill="rgb(206,174,23)" fg:x="76938" fg:w="2894"/><text x="64.3335%" y="751.50">sk..</text></g><g><title>copyin (15 samples, 0.01%)</title><rect x="66.4815%" y="725" width="0.0125%" height="15" fill="rgb(211,33,43)" fg:x="79817" fg:w="15"/><text x="66.7315%" y="735.50"></text></g><g><title>nf_conntrack_tcp_packet (83 samples, 0.07%)</title><rect x="66.7472%" y="549" width="0.0691%" height="15" fill="rgb(245,58,50)" fg:x="80136" fg:w="83"/><text x="66.9972%" y="559.50"></text></g><g><title>tcp_in_window (46 samples, 0.04%)</title><rect x="66.7780%" y="533" width="0.0383%" height="15" fill="rgb(244,68,36)" fg:x="80173" fg:w="46"/><text x="67.0280%" y="543.50"></text></g><g><title>nf_conntrack_handle_packet (103 samples, 0.09%)</title><rect x="66.7339%" y="565" width="0.0858%" height="15" fill="rgb(232,229,15)" fg:x="80120" fg:w="103"/><text x="66.9839%" y="575.50"></text></g><g><title>__nf_conntrack_find_get (33 samples, 0.03%)</title><rect x="66.8363%" y="549" width="0.0275%" height="15" fill="rgb(254,30,23)" fg:x="80243" fg:w="33"/><text x="67.0863%" y="559.50"></text></g><g><title>hash_conntrack_raw (13 samples, 0.01%)</title><rect x="66.8730%" y="549" width="0.0108%" height="15" fill="rgb(235,160,14)" fg:x="80287" fg:w="13"/><text x="67.1230%" y="559.50"></text></g><g><title>nf_conntrack_in (214 samples, 0.18%)</title><rect x="66.7189%" y="581" width="0.1782%" height="15" fill="rgb(212,155,44)" fg:x="80102" fg:w="214"/><text x="66.9689%" y="591.50"></text></g><g><title>resolve_normal_ct (87 samples, 0.07%)</title><rect x="66.8246%" y="565" width="0.0725%" height="15" fill="rgb(226,2,50)" fg:x="80229" fg:w="87"/><text x="67.0746%" y="575.50"></text></g><g><title>nf_ct_get_tuple (16 samples, 0.01%)</title><rect x="66.8838%" y="549" width="0.0133%" height="15" fill="rgb(234,177,6)" fg:x="80300" fg:w="16"/><text x="67.1338%" y="559.50"></text></g><g><title>ipv4_conntrack_local (222 samples, 0.18%)</title><rect x="66.7139%" y="597" width="0.1849%" height="15" fill="rgb(217,24,9)" fg:x="80096" fg:w="222"/><text x="66.9639%" y="607.50"></text></g><g><title>nf_hook_slow (260 samples, 0.22%)</title><rect x="66.6964%" y="613" width="0.2166%" height="15" fill="rgb(220,13,46)" fg:x="80075" fg:w="260"/><text x="66.9464%" y="623.50"></text></g><g><title>nf_nat_ipv4_local_fn (15 samples, 0.01%)</title><rect x="66.9004%" y="597" width="0.0125%" height="15" fill="rgb(239,221,27)" fg:x="80320" fg:w="15"/><text x="67.1504%" y="607.50"></text></g><g><title>__ip_local_out (313 samples, 0.26%)</title><rect x="66.6631%" y="629" width="0.2607%" height="15" fill="rgb(222,198,25)" fg:x="80035" fg:w="313"/><text x="66.9131%" y="639.50"></text></g><g><title>nf_nat_ipv4_local_fn (13 samples, 0.01%)</title><rect x="66.9129%" y="613" width="0.0108%" height="15" fill="rgb(211,99,13)" fg:x="80335" fg:w="13"/><text x="67.1629%" y="623.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (28 samples, 0.02%)</title><rect x="67.1487%" y="405" width="0.0233%" height="15" fill="rgb(232,111,31)" fg:x="80618" fg:w="28"/><text x="67.3987%" y="415.50"></text></g><g><title>__inet_lookup_established (38 samples, 0.03%)</title><rect x="67.2803%" y="325" width="0.0317%" height="15" fill="rgb(245,82,37)" fg:x="80776" fg:w="38"/><text x="67.5303%" y="335.50"></text></g><g><title>tcp_filter (28 samples, 0.02%)</title><rect x="67.3311%" y="325" width="0.0233%" height="15" fill="rgb(227,149,46)" fg:x="80837" fg:w="28"/><text x="67.5811%" y="335.50"></text></g><g><title>sk_filter_trim_cap (19 samples, 0.02%)</title><rect x="67.3386%" y="309" width="0.0158%" height="15" fill="rgb(218,36,50)" fg:x="80846" fg:w="19"/><text x="67.5886%" y="319.50"></text></g><g><title>__tcp_ack_snd_check (28 samples, 0.02%)</title><rect x="67.3952%" y="293" width="0.0233%" height="15" fill="rgb(226,80,48)" fg:x="80914" fg:w="28"/><text x="67.6452%" y="303.50"></text></g><g><title>tcp_send_delayed_ack (16 samples, 0.01%)</title><rect x="67.4052%" y="277" width="0.0133%" height="15" fill="rgb(238,224,15)" fg:x="80926" fg:w="16"/><text x="67.6552%" y="287.50"></text></g><g><title>tcp_ack (30 samples, 0.02%)</title><rect x="67.4235%" y="293" width="0.0250%" height="15" fill="rgb(241,136,10)" fg:x="80948" fg:w="30"/><text x="67.6735%" y="303.50"></text></g><g><title>_raw_read_lock_irqsave (19 samples, 0.02%)</title><rect x="67.5126%" y="181" width="0.0158%" height="15" fill="rgb(208,32,45)" fg:x="81055" fg:w="19"/><text x="67.7626%" y="191.50"></text></g><g><title>__raw_read_lock_irqsave (19 samples, 0.02%)</title><rect x="67.5126%" y="165" width="0.0158%" height="15" fill="rgb(207,135,9)" fg:x="81055" fg:w="19"/><text x="67.7626%" y="175.50"></text></g><g><title>__wake_up_common (48 samples, 0.04%)</title><rect x="67.4935%" y="213" width="0.0400%" height="15" fill="rgb(206,86,44)" fg:x="81032" fg:w="48"/><text x="67.7435%" y="223.50"></text></g><g><title>ep_poll_callback (39 samples, 0.03%)</title><rect x="67.5010%" y="197" width="0.0325%" height="15" fill="rgb(245,177,15)" fg:x="81041" fg:w="39"/><text x="67.7510%" y="207.50"></text></g><g><title>tcp_data_ready (94 samples, 0.08%)</title><rect x="67.4727%" y="277" width="0.0783%" height="15" fill="rgb(206,64,50)" fg:x="81007" fg:w="94"/><text x="67.7227%" y="287.50"></text></g><g><title>sock_def_readable (86 samples, 0.07%)</title><rect x="67.4793%" y="261" width="0.0716%" height="15" fill="rgb(234,36,40)" fg:x="81015" fg:w="86"/><text x="67.7293%" y="271.50"></text></g><g><title>__wake_up_sync_key (73 samples, 0.06%)</title><rect x="67.4902%" y="245" width="0.0608%" height="15" fill="rgb(213,64,8)" fg:x="81028" fg:w="73"/><text x="67.7402%" y="255.50"></text></g><g><title>__wake_up_common_lock (73 samples, 0.06%)</title><rect x="67.4902%" y="229" width="0.0608%" height="15" fill="rgb(210,75,36)" fg:x="81028" fg:w="73"/><text x="67.7402%" y="239.50"></text></g><g><title>tcp_queue_rcv (32 samples, 0.03%)</title><rect x="67.5585%" y="277" width="0.0267%" height="15" fill="rgb(229,88,21)" fg:x="81110" fg:w="32"/><text x="67.8085%" y="287.50"></text></g><g><title>tcp_try_coalesce (17 samples, 0.01%)</title><rect x="67.5709%" y="261" width="0.0142%" height="15" fill="rgb(252,204,47)" fg:x="81125" fg:w="17"/><text x="67.8209%" y="271.50"></text></g><g><title>mem_cgroup_charge_skmem (39 samples, 0.03%)</title><rect x="67.6001%" y="229" width="0.0325%" height="15" fill="rgb(208,77,27)" fg:x="81160" fg:w="39"/><text x="67.8501%" y="239.50"></text></g><g><title>try_charge_memcg (25 samples, 0.02%)</title><rect x="67.6118%" y="213" width="0.0208%" height="15" fill="rgb(221,76,26)" fg:x="81174" fg:w="25"/><text x="67.8618%" y="223.50"></text></g><g><title>tcp_data_queue (223 samples, 0.19%)</title><rect x="67.4485%" y="293" width="0.1857%" height="15" fill="rgb(225,139,18)" fg:x="80978" fg:w="223"/><text x="67.6985%" y="303.50"></text></g><g><title>tcp_try_rmem_schedule (56 samples, 0.05%)</title><rect x="67.5876%" y="277" width="0.0466%" height="15" fill="rgb(230,137,11)" fg:x="81145" fg:w="56"/><text x="67.8376%" y="287.50"></text></g><g><title>__sk_mem_schedule (53 samples, 0.04%)</title><rect x="67.5901%" y="261" width="0.0441%" height="15" fill="rgb(212,28,1)" fg:x="81148" fg:w="53"/><text x="67.8401%" y="271.50"></text></g><g><title>__sk_mem_raise_allocated (50 samples, 0.04%)</title><rect x="67.5926%" y="245" width="0.0416%" height="15" fill="rgb(248,164,17)" fg:x="81151" fg:w="50"/><text x="67.8426%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (360 samples, 0.30%)</title><rect x="67.3585%" y="325" width="0.2999%" height="15" fill="rgb(222,171,42)" fg:x="80870" fg:w="360"/><text x="67.6085%" y="335.50"></text></g><g><title>tcp_rcv_established (336 samples, 0.28%)</title><rect x="67.3785%" y="309" width="0.2799%" height="15" fill="rgb(243,84,45)" fg:x="80894" fg:w="336"/><text x="67.6285%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (524 samples, 0.44%)</title><rect x="67.2236%" y="357" width="0.4365%" height="15" fill="rgb(252,49,23)" fg:x="80708" fg:w="524"/><text x="67.4736%" y="367.50"></text></g><g><title>tcp_v4_rcv (483 samples, 0.40%)</title><rect x="67.2578%" y="341" width="0.4023%" height="15" fill="rgb(215,19,7)" fg:x="80749" fg:w="483"/><text x="67.5078%" y="351.50"></text></g><g><title>ip_local_deliver_finish (535 samples, 0.45%)</title><rect x="67.2170%" y="373" width="0.4456%" height="15" fill="rgb(238,81,41)" fg:x="80700" fg:w="535"/><text x="67.4670%" y="383.50"></text></g><g><title>nf_hook_slow (28 samples, 0.02%)</title><rect x="67.6709%" y="373" width="0.0233%" height="15" fill="rgb(210,199,37)" fg:x="81245" fg:w="28"/><text x="67.9209%" y="383.50"></text></g><g><title>ip_local_deliver (603 samples, 0.50%)</title><rect x="67.2003%" y="389" width="0.5023%" height="15" fill="rgb(244,192,49)" fg:x="80680" fg:w="603"/><text x="67.4503%" y="399.50"></text></g><g><title>ip_rcv_core (16 samples, 0.01%)</title><rect x="67.7034%" y="389" width="0.0133%" height="15" fill="rgb(226,211,11)" fg:x="81284" fg:w="16"/><text x="67.9534%" y="399.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (23 samples, 0.02%)</title><rect x="67.7167%" y="389" width="0.0192%" height="15" fill="rgb(236,162,54)" fg:x="81300" fg:w="23"/><text x="67.9667%" y="399.50"></text></g><g><title>ipv4_conntrack_in (18 samples, 0.01%)</title><rect x="67.7500%" y="389" width="0.0150%" height="15" fill="rgb(220,229,9)" fg:x="81340" fg:w="18"/><text x="68.0000%" y="399.50"></text></g><g><title>nf_hook_slow (34 samples, 0.03%)</title><rect x="67.7650%" y="389" width="0.0283%" height="15" fill="rgb(250,87,22)" fg:x="81358" fg:w="34"/><text x="68.0150%" y="399.50"></text></g><g><title>ip_rcv (745 samples, 0.62%)</title><rect x="67.1803%" y="405" width="0.6205%" height="15" fill="rgb(239,43,17)" fg:x="80656" fg:w="745"/><text x="67.4303%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (790 samples, 0.66%)</title><rect x="67.1462%" y="421" width="0.6580%" height="15" fill="rgb(231,177,25)" fg:x="80615" fg:w="790"/><text x="67.3962%" y="431.50"></text></g><g><title>__netif_receive_skb (800 samples, 0.67%)</title><rect x="67.1395%" y="437" width="0.6663%" height="15" fill="rgb(219,179,1)" fg:x="80607" fg:w="800"/><text x="67.3895%" y="447.50"></text></g><g><title>__napi_poll (835 samples, 0.70%)</title><rect x="67.1220%" y="469" width="0.6955%" height="15" fill="rgb(238,219,53)" fg:x="80586" fg:w="835"/><text x="67.3720%" y="479.50"></text></g><g><title>process_backlog (824 samples, 0.69%)</title><rect x="67.1312%" y="453" width="0.6863%" height="15" fill="rgb(232,167,36)" fg:x="80597" fg:w="824"/><text x="67.3812%" y="463.50"></text></g><g><title>net_rx_action (877 samples, 0.73%)</title><rect x="67.0920%" y="485" width="0.7305%" height="15" fill="rgb(244,19,51)" fg:x="80550" fg:w="877"/><text x="67.3420%" y="495.50"></text></g><g><title>__do_softirq (904 samples, 0.75%)</title><rect x="67.0704%" y="501" width="0.7530%" height="15" fill="rgb(224,6,22)" fg:x="80524" fg:w="904"/><text x="67.3204%" y="511.50"></text></g><g><title>__local_bh_enable_ip (928 samples, 0.77%)</title><rect x="67.0520%" y="533" width="0.7730%" height="15" fill="rgb(224,145,5)" fg:x="80502" fg:w="928"/><text x="67.3020%" y="543.50"></text></g><g><title>do_softirq.part.0 (918 samples, 0.76%)</title><rect x="67.0604%" y="517" width="0.7646%" height="15" fill="rgb(234,130,49)" fg:x="80512" fg:w="918"/><text x="67.3104%" y="527.50"></text></g><g><title>__netif_rx (26 samples, 0.02%)</title><rect x="67.8466%" y="501" width="0.0217%" height="15" fill="rgb(254,6,2)" fg:x="81456" fg:w="26"/><text x="68.0966%" y="511.50"></text></g><g><title>netif_rx_internal (25 samples, 0.02%)</title><rect x="67.8475%" y="485" width="0.0208%" height="15" fill="rgb(208,96,46)" fg:x="81457" fg:w="25"/><text x="68.0975%" y="495.50"></text></g><g><title>enqueue_to_backlog (22 samples, 0.02%)</title><rect x="67.8500%" y="469" width="0.0183%" height="15" fill="rgb(239,3,39)" fg:x="81460" fg:w="22"/><text x="68.1000%" y="479.50"></text></g><g><title>eth_type_trans (16 samples, 0.01%)</title><rect x="67.8683%" y="501" width="0.0133%" height="15" fill="rgb(233,210,1)" fg:x="81482" fg:w="16"/><text x="68.1183%" y="511.50"></text></g><g><title>loopback_xmit (75 samples, 0.06%)</title><rect x="67.8341%" y="517" width="0.0625%" height="15" fill="rgb(244,137,37)" fg:x="81441" fg:w="75"/><text x="68.0841%" y="527.50"></text></g><g><title>dev_hard_start_xmit (92 samples, 0.08%)</title><rect x="67.8250%" y="533" width="0.0766%" height="15" fill="rgb(240,136,2)" fg:x="81430" fg:w="92"/><text x="68.0750%" y="543.50"></text></g><g><title>__dev_queue_xmit (1,080 samples, 0.90%)</title><rect x="67.0270%" y="549" width="0.8996%" height="15" fill="rgb(239,18,37)" fg:x="80472" fg:w="1080"/><text x="67.2770%" y="559.50"></text></g><g><title>ip_finish_output2 (1,129 samples, 0.94%)</title><rect x="66.9904%" y="581" width="0.9404%" height="15" fill="rgb(218,185,22)" fg:x="80428" fg:w="1129"/><text x="67.2404%" y="591.50"></text></g><g><title>neigh_hh_output (1,091 samples, 0.91%)</title><rect x="67.0220%" y="565" width="0.9087%" height="15" fill="rgb(225,218,4)" fg:x="80466" fg:w="1091"/><text x="67.2720%" y="575.50"></text></g><g><title>__ip_finish_output (1,146 samples, 0.95%)</title><rect x="66.9787%" y="597" width="0.9545%" height="15" fill="rgb(230,182,32)" fg:x="80414" fg:w="1146"/><text x="67.2287%" y="607.50"></text></g><g><title>ip_finish_output (1,164 samples, 0.97%)</title><rect x="66.9654%" y="613" width="0.9695%" height="15" fill="rgb(242,56,43)" fg:x="80398" fg:w="1164"/><text x="67.2154%" y="623.50"></text></g><g><title>nf_hook_slow (27 samples, 0.02%)</title><rect x="67.9383%" y="613" width="0.0225%" height="15" fill="rgb(233,99,24)" fg:x="81566" fg:w="27"/><text x="68.1883%" y="623.50"></text></g><g><title>ip_output (1,248 samples, 1.04%)</title><rect x="66.9321%" y="629" width="1.0395%" height="15" fill="rgb(234,209,42)" fg:x="80358" fg:w="1248"/><text x="67.1821%" y="639.50"></text></g><g><title>nf_nat_ipv4_out (13 samples, 0.01%)</title><rect x="67.9608%" y="613" width="0.0108%" height="15" fill="rgb(227,7,12)" fg:x="81593" fg:w="13"/><text x="68.2108%" y="623.50"></text></g><g><title>__ip_queue_xmit (1,611 samples, 1.34%)</title><rect x="66.6364%" y="661" width="1.3418%" height="15" fill="rgb(245,203,43)" fg:x="80003" fg:w="1611"/><text x="66.8864%" y="671.50"></text></g><g><title>ip_local_out (1,588 samples, 1.32%)</title><rect x="66.6556%" y="645" width="1.3227%" height="15" fill="rgb(238,205,33)" fg:x="80026" fg:w="1588"/><text x="66.9056%" y="655.50"></text></g><g><title>ip_queue_xmit (1,621 samples, 1.35%)</title><rect x="66.6364%" y="677" width="1.3502%" height="15" fill="rgb(231,56,7)" fg:x="80003" fg:w="1621"/><text x="66.8864%" y="687.50"></text></g><g><title>skb_clone (23 samples, 0.02%)</title><rect x="67.9866%" y="677" width="0.0192%" height="15" fill="rgb(244,186,29)" fg:x="81624" fg:w="23"/><text x="68.2366%" y="687.50"></text></g><g><title>__skb_clone (19 samples, 0.02%)</title><rect x="67.9899%" y="661" width="0.0158%" height="15" fill="rgb(234,111,31)" fg:x="81628" fg:w="19"/><text x="68.2399%" y="671.50"></text></g><g><title>__tcp_transmit_skb (1,729 samples, 1.44%)</title><rect x="66.5739%" y="693" width="1.4401%" height="15" fill="rgb(241,149,10)" fg:x="79928" fg:w="1729"/><text x="66.8239%" y="703.50"></text></g><g><title>ktime_get (16 samples, 0.01%)</title><rect x="68.0199%" y="693" width="0.0133%" height="15" fill="rgb(249,206,44)" fg:x="81664" fg:w="16"/><text x="68.2699%" y="703.50"></text></g><g><title>tcp_cwnd_validate (15 samples, 0.01%)</title><rect x="68.0507%" y="693" width="0.0125%" height="15" fill="rgb(251,153,30)" fg:x="81701" fg:w="15"/><text x="68.3007%" y="703.50"></text></g><g><title>tcp_event_new_data_sent (75 samples, 0.06%)</title><rect x="68.0649%" y="693" width="0.0625%" height="15" fill="rgb(239,152,38)" fg:x="81718" fg:w="75"/><text x="68.3149%" y="703.50"></text></g><g><title>tcp_rearm_rto (31 samples, 0.03%)</title><rect x="68.1015%" y="677" width="0.0258%" height="15" fill="rgb(249,139,47)" fg:x="81762" fg:w="31"/><text x="68.3515%" y="687.50"></text></g><g><title>__mod_timer (56 samples, 0.05%)</title><rect x="68.1607%" y="645" width="0.0466%" height="15" fill="rgb(244,64,35)" fg:x="81833" fg:w="56"/><text x="68.4107%" y="655.50"></text></g><g><title>lock_timer_base (25 samples, 0.02%)</title><rect x="68.1865%" y="629" width="0.0208%" height="15" fill="rgb(216,46,15)" fg:x="81864" fg:w="25"/><text x="68.4365%" y="639.50"></text></g><g><title>_raw_spin_lock_irqsave (16 samples, 0.01%)</title><rect x="68.1940%" y="613" width="0.0133%" height="15" fill="rgb(250,74,19)" fg:x="81873" fg:w="16"/><text x="68.4440%" y="623.50"></text></g><g><title>__raw_spin_lock_irqsave (15 samples, 0.01%)</title><rect x="68.1948%" y="597" width="0.0125%" height="15" fill="rgb(249,42,33)" fg:x="81874" fg:w="15"/><text x="68.4448%" y="607.50"></text></g><g><title>tcp_schedule_loss_probe (86 samples, 0.07%)</title><rect x="68.1398%" y="693" width="0.0716%" height="15" fill="rgb(242,149,17)" fg:x="81808" fg:w="86"/><text x="68.3898%" y="703.50"></text></g><g><title>sk_reset_timer (64 samples, 0.05%)</title><rect x="68.1582%" y="677" width="0.0533%" height="15" fill="rgb(244,29,21)" fg:x="81830" fg:w="64"/><text x="68.4082%" y="687.50"></text></g><g><title>mod_timer (61 samples, 0.05%)</title><rect x="68.1607%" y="661" width="0.0508%" height="15" fill="rgb(220,130,37)" fg:x="81833" fg:w="61"/><text x="68.4107%" y="671.50"></text></g><g><title>tcp_tso_segs (18 samples, 0.01%)</title><rect x="68.2148%" y="693" width="0.0150%" height="15" fill="rgb(211,67,2)" fg:x="81898" fg:w="18"/><text x="68.4648%" y="703.50"></text></g><g><title>__tcp_push_pending_frames (2,066 samples, 1.72%)</title><rect x="66.5106%" y="725" width="1.7208%" height="15" fill="rgb(235,68,52)" fg:x="79852" fg:w="2066"/><text x="66.7606%" y="735.50"></text></g><g><title>tcp_write_xmit (2,034 samples, 1.69%)</title><rect x="66.5373%" y="709" width="1.6942%" height="15" fill="rgb(246,142,3)" fg:x="79884" fg:w="2034"/><text x="66.7873%" y="719.50"></text></g><g><title>tcp_push (2,069 samples, 1.72%)</title><rect x="66.5098%" y="741" width="1.7233%" height="15" fill="rgb(241,25,7)" fg:x="79851" fg:w="2069"/><text x="66.7598%" y="751.50"></text></g><g><title>__sk_dst_check (16 samples, 0.01%)</title><rect x="68.4688%" y="661" width="0.0133%" height="15" fill="rgb(242,119,39)" fg:x="82203" fg:w="16"/><text x="68.7188%" y="671.50"></text></g><g><title>ipv4_conntrack_defrag (22 samples, 0.02%)</title><rect x="68.5196%" y="629" width="0.0183%" height="15" fill="rgb(241,98,45)" fg:x="82264" fg:w="22"/><text x="68.7696%" y="639.50"></text></g><g><title>ipv4_conntrack_local (19 samples, 0.02%)</title><rect x="68.5380%" y="629" width="0.0158%" height="15" fill="rgb(254,28,30)" fg:x="82286" fg:w="19"/><text x="68.7880%" y="639.50"></text></g><g><title>__nf_conntrack_find_get (17 samples, 0.01%)</title><rect x="68.5971%" y="581" width="0.0142%" height="15" fill="rgb(241,142,54)" fg:x="82357" fg:w="17"/><text x="68.8471%" y="591.50"></text></g><g><title>__nf_ct_refresh_acct (18 samples, 0.01%)</title><rect x="68.6254%" y="565" width="0.0150%" height="15" fill="rgb(222,85,15)" fg:x="82391" fg:w="18"/><text x="68.8754%" y="575.50"></text></g><g><title>nf_ct_seq_offset (16 samples, 0.01%)</title><rect x="68.7104%" y="549" width="0.0133%" height="15" fill="rgb(210,85,47)" fg:x="82493" fg:w="16"/><text x="68.9604%" y="559.50"></text></g><g><title>nf_conntrack_tcp_packet (145 samples, 0.12%)</title><rect x="68.6438%" y="565" width="0.1208%" height="15" fill="rgb(224,206,25)" fg:x="82413" fg:w="145"/><text x="68.8938%" y="575.50"></text></g><g><title>tcp_in_window (49 samples, 0.04%)</title><rect x="68.7237%" y="549" width="0.0408%" height="15" fill="rgb(243,201,19)" fg:x="82509" fg:w="49"/><text x="68.9737%" y="559.50"></text></g><g><title>nf_conntrack_handle_packet (184 samples, 0.15%)</title><rect x="68.6238%" y="581" width="0.1533%" height="15" fill="rgb(236,59,4)" fg:x="82389" fg:w="184"/><text x="68.8738%" y="591.50"></text></g><g><title>tcp_in_window (15 samples, 0.01%)</title><rect x="68.7645%" y="565" width="0.0125%" height="15" fill="rgb(254,179,45)" fg:x="82558" fg:w="15"/><text x="69.0145%" y="575.50"></text></g><g><title>nf_conntrack_tcp_packet (16 samples, 0.01%)</title><rect x="68.7770%" y="581" width="0.0133%" height="15" fill="rgb(226,14,10)" fg:x="82573" fg:w="16"/><text x="69.0270%" y="591.50"></text></g><g><title>__nf_conntrack_find_get (105 samples, 0.09%)</title><rect x="68.8237%" y="565" width="0.0875%" height="15" fill="rgb(244,27,41)" fg:x="82629" fg:w="105"/><text x="69.0737%" y="575.50"></text></g><g><title>hash_conntrack_raw (21 samples, 0.02%)</title><rect x="68.9194%" y="565" width="0.0175%" height="15" fill="rgb(235,35,32)" fg:x="82744" fg:w="21"/><text x="69.1694%" y="575.50"></text></g><g><title>__siphash_unaligned (13 samples, 0.01%)</title><rect x="68.9261%" y="549" width="0.0108%" height="15" fill="rgb(218,68,31)" fg:x="82752" fg:w="13"/><text x="69.1761%" y="559.50"></text></g><g><title>nf_conntrack_in (438 samples, 0.36%)</title><rect x="68.5879%" y="597" width="0.3648%" height="15" fill="rgb(207,120,37)" fg:x="82346" fg:w="438"/><text x="68.8379%" y="607.50"></text></g><g><title>resolve_normal_ct (186 samples, 0.15%)</title><rect x="68.7978%" y="581" width="0.1549%" height="15" fill="rgb(227,98,0)" fg:x="82598" fg:w="186"/><text x="69.0478%" y="591.50"></text></g><g><title>nf_ct_get_tuple (19 samples, 0.02%)</title><rect x="68.9369%" y="565" width="0.0158%" height="15" fill="rgb(207,7,3)" fg:x="82765" fg:w="19"/><text x="69.1869%" y="575.50"></text></g><g><title>ipv4_conntrack_local (466 samples, 0.39%)</title><rect x="68.5738%" y="613" width="0.3881%" height="15" fill="rgb(206,98,19)" fg:x="82329" fg:w="466"/><text x="68.8238%" y="623.50"></text></g><g><title>nf_conntrack_in (13 samples, 0.01%)</title><rect x="68.9619%" y="613" width="0.0108%" height="15" fill="rgb(217,5,26)" fg:x="82795" fg:w="13"/><text x="69.2119%" y="623.50"></text></g><g><title>nf_nat_inet_fn (21 samples, 0.02%)</title><rect x="68.9728%" y="613" width="0.0175%" height="15" fill="rgb(235,190,38)" fg:x="82808" fg:w="21"/><text x="69.2228%" y="623.50"></text></g><g><title>nf_hook_slow (554 samples, 0.46%)</title><rect x="68.5538%" y="629" width="0.4614%" height="15" fill="rgb(247,86,24)" fg:x="82305" fg:w="554"/><text x="68.8038%" y="639.50"></text></g><g><title>nf_nat_ipv4_local_fn (30 samples, 0.02%)</title><rect x="68.9902%" y="613" width="0.0250%" height="15" fill="rgb(205,101,16)" fg:x="82829" fg:w="30"/><text x="69.2402%" y="623.50"></text></g><g><title>nf_nat_inet_fn (17 samples, 0.01%)</title><rect x="69.0011%" y="597" width="0.0142%" height="15" fill="rgb(246,168,33)" fg:x="82842" fg:w="17"/><text x="69.2511%" y="607.50"></text></g><g><title>__ip_local_out (640 samples, 0.53%)</title><rect x="68.4963%" y="645" width="0.5331%" height="15" fill="rgb(231,114,1)" fg:x="82236" fg:w="640"/><text x="68.7463%" y="655.50"></text></g><g><title>nf_nat_ipv4_local_fn (17 samples, 0.01%)</title><rect x="69.0152%" y="629" width="0.0142%" height="15" fill="rgb(207,184,53)" fg:x="82859" fg:w="17"/><text x="69.2652%" y="639.50"></text></g><g><title>__rcu_read_unlock (13 samples, 0.01%)</title><rect x="69.0311%" y="645" width="0.0108%" height="15" fill="rgb(224,95,51)" fg:x="82878" fg:w="13"/><text x="69.2811%" y="655.50"></text></g><g><title>apparmor_ip_postroute (15 samples, 0.01%)</title><rect x="69.0794%" y="629" width="0.0125%" height="15" fill="rgb(212,188,45)" fg:x="82936" fg:w="15"/><text x="69.3294%" y="639.50"></text></g><g><title>__netif_receive_skb (14 samples, 0.01%)</title><rect x="69.3467%" y="469" width="0.0117%" height="15" fill="rgb(223,154,38)" fg:x="83257" fg:w="14"/><text x="69.5967%" y="479.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (15 samples, 0.01%)</title><rect x="69.3950%" y="437" width="0.0125%" height="15" fill="rgb(251,22,52)" fg:x="83315" fg:w="15"/><text x="69.6450%" y="447.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (53 samples, 0.04%)</title><rect x="69.4217%" y="421" width="0.0441%" height="15" fill="rgb(229,209,22)" fg:x="83347" fg:w="53"/><text x="69.6717%" y="431.50"></text></g><g><title>raw_local_deliver (13 samples, 0.01%)</title><rect x="69.5625%" y="357" width="0.0108%" height="15" fill="rgb(234,138,34)" fg:x="83516" fg:w="13"/><text x="69.8125%" y="367.50"></text></g><g><title>__inet_lookup_established (92 samples, 0.08%)</title><rect x="69.6483%" y="341" width="0.0766%" height="15" fill="rgb(212,95,11)" fg:x="83619" fg:w="92"/><text x="69.8983%" y="351.50"></text></g><g><title>tcp_filter (50 samples, 0.04%)</title><rect x="69.7457%" y="341" width="0.0416%" height="15" fill="rgb(240,179,47)" fg:x="83736" fg:w="50"/><text x="69.9957%" y="351.50"></text></g><g><title>sk_filter_trim_cap (43 samples, 0.04%)</title><rect x="69.7515%" y="325" width="0.0358%" height="15" fill="rgb(240,163,11)" fg:x="83743" fg:w="43"/><text x="70.0015%" y="335.50"></text></g><g><title>tcp_check_space (30 samples, 0.02%)</title><rect x="69.8165%" y="325" width="0.0250%" height="15" fill="rgb(236,37,12)" fg:x="83821" fg:w="30"/><text x="70.0665%" y="335.50"></text></g><g><title>mod_timer (13 samples, 0.01%)</title><rect x="69.9031%" y="277" width="0.0108%" height="15" fill="rgb(232,164,16)" fg:x="83925" fg:w="13"/><text x="70.1531%" y="287.50"></text></g><g><title>__mod_timer (38 samples, 0.03%)</title><rect x="69.9215%" y="245" width="0.0317%" height="15" fill="rgb(244,205,15)" fg:x="83947" fg:w="38"/><text x="70.1715%" y="255.50"></text></g><g><title>__tcp_ack_snd_check (85 samples, 0.07%)</title><rect x="69.8923%" y="309" width="0.0708%" height="15" fill="rgb(223,117,47)" fg:x="83912" fg:w="85"/><text x="70.1423%" y="319.50"></text></g><g><title>tcp_send_delayed_ack (75 samples, 0.06%)</title><rect x="69.9006%" y="293" width="0.0625%" height="15" fill="rgb(244,107,35)" fg:x="83922" fg:w="75"/><text x="70.1506%" y="303.50"></text></g><g><title>sk_reset_timer (59 samples, 0.05%)</title><rect x="69.9140%" y="277" width="0.0491%" height="15" fill="rgb(205,140,8)" fg:x="83938" fg:w="59"/><text x="70.1640%" y="287.50"></text></g><g><title>mod_timer (50 samples, 0.04%)</title><rect x="69.9215%" y="261" width="0.0416%" height="15" fill="rgb(228,84,46)" fg:x="83947" fg:w="50"/><text x="70.1715%" y="271.50"></text></g><g><title>cubictcp_acked (22 samples, 0.02%)</title><rect x="70.0556%" y="293" width="0.0183%" height="15" fill="rgb(254,188,9)" fg:x="84108" fg:w="22"/><text x="70.3056%" y="303.50"></text></g><g><title>rb_erase (20 samples, 0.02%)</title><rect x="70.0814%" y="293" width="0.0167%" height="15" fill="rgb(206,112,54)" fg:x="84139" fg:w="20"/><text x="70.3314%" y="303.50"></text></g><g><title>__slab_free (21 samples, 0.02%)</title><rect x="70.2005%" y="229" width="0.0175%" height="15" fill="rgb(216,84,49)" fg:x="84282" fg:w="21"/><text x="70.4505%" y="239.50"></text></g><g><title>kfree_skbmem (38 samples, 0.03%)</title><rect x="70.1938%" y="261" width="0.0317%" height="15" fill="rgb(214,194,35)" fg:x="84274" fg:w="38"/><text x="70.4438%" y="271.50"></text></g><g><title>kmem_cache_free (35 samples, 0.03%)</title><rect x="70.1963%" y="245" width="0.0292%" height="15" fill="rgb(249,28,3)" fg:x="84277" fg:w="35"/><text x="70.4463%" y="255.50"></text></g><g><title>__slab_free (15 samples, 0.01%)</title><rect x="70.2588%" y="213" width="0.0125%" height="15" fill="rgb(222,56,52)" fg:x="84352" fg:w="15"/><text x="70.5088%" y="223.50"></text></g><g><title>skb_release_data (65 samples, 0.05%)</title><rect x="70.2280%" y="261" width="0.0541%" height="15" fill="rgb(245,217,50)" fg:x="84315" fg:w="65"/><text x="70.4780%" y="271.50"></text></g><g><title>skb_free_head (32 samples, 0.03%)</title><rect x="70.2555%" y="245" width="0.0267%" height="15" fill="rgb(213,201,24)" fg:x="84348" fg:w="32"/><text x="70.5055%" y="255.50"></text></g><g><title>kmem_cache_free (32 samples, 0.03%)</title><rect x="70.2555%" y="229" width="0.0267%" height="15" fill="rgb(248,116,28)" fg:x="84348" fg:w="32"/><text x="70.5055%" y="239.50"></text></g><g><title>__kfree_skb (115 samples, 0.10%)</title><rect x="70.1913%" y="277" width="0.0958%" height="15" fill="rgb(219,72,43)" fg:x="84271" fg:w="115"/><text x="70.4413%" y="287.50"></text></g><g><title>mod_memcg_state (14 samples, 0.01%)</title><rect x="70.2996%" y="229" width="0.0117%" height="15" fill="rgb(209,138,14)" fg:x="84401" fg:w="14"/><text x="70.5496%" y="239.50"></text></g><g><title>mem_cgroup_uncharge_skmem (32 samples, 0.03%)</title><rect x="70.2963%" y="245" width="0.0267%" height="15" fill="rgb(222,18,33)" fg:x="84397" fg:w="32"/><text x="70.5463%" y="255.50"></text></g><g><title>refill_stock (14 samples, 0.01%)</title><rect x="70.3113%" y="229" width="0.0117%" height="15" fill="rgb(213,199,7)" fg:x="84415" fg:w="14"/><text x="70.5613%" y="239.50"></text></g><g><title>__sk_mem_reduce_allocated (48 samples, 0.04%)</title><rect x="70.2871%" y="261" width="0.0400%" height="15" fill="rgb(250,110,10)" fg:x="84386" fg:w="48"/><text x="70.5371%" y="271.50"></text></g><g><title>__sk_mem_reclaim (50 samples, 0.04%)</title><rect x="70.2871%" y="277" width="0.0416%" height="15" fill="rgb(248,123,6)" fg:x="84386" fg:w="50"/><text x="70.5371%" y="287.50"></text></g><g><title>tcp_ack_update_rtt (23 samples, 0.02%)</title><rect x="70.3412%" y="277" width="0.0192%" height="15" fill="rgb(206,91,31)" fg:x="84451" fg:w="23"/><text x="70.5912%" y="287.50"></text></g><g><title>tcp_clean_rtx_queue.constprop.0 (297 samples, 0.25%)</title><rect x="70.1239%" y="293" width="0.2474%" height="15" fill="rgb(211,154,13)" fg:x="84190" fg:w="297"/><text x="70.3739%" y="303.50"></text></g><g><title>tcp_rate_skb_delivered (17 samples, 0.01%)</title><rect x="70.3912%" y="293" width="0.0142%" height="15" fill="rgb(225,148,7)" fg:x="84511" fg:w="17"/><text x="70.6412%" y="303.50"></text></g><g><title>tcp_ack (512 samples, 0.43%)</title><rect x="69.9873%" y="309" width="0.4265%" height="15" fill="rgb(220,160,43)" fg:x="84026" fg:w="512"/><text x="70.2373%" y="319.50"></text></g><g><title>page_counter_try_charge (29 samples, 0.02%)</title><rect x="70.4962%" y="245" width="0.0242%" height="15" fill="rgb(213,52,39)" fg:x="84637" fg:w="29"/><text x="70.7462%" y="255.50"></text></g><g><title>mem_cgroup_charge_skmem (69 samples, 0.06%)</title><rect x="70.4645%" y="277" width="0.0575%" height="15" fill="rgb(243,137,7)" fg:x="84599" fg:w="69"/><text x="70.7145%" y="287.50"></text></g><g><title>try_charge_memcg (48 samples, 0.04%)</title><rect x="70.4820%" y="261" width="0.0400%" height="15" fill="rgb(230,79,13)" fg:x="84620" fg:w="48"/><text x="70.7320%" y="271.50"></text></g><g><title>sk_forced_mem_schedule (77 samples, 0.06%)</title><rect x="70.4587%" y="293" width="0.0641%" height="15" fill="rgb(247,105,23)" fg:x="84592" fg:w="77"/><text x="70.7087%" y="303.50"></text></g><g><title>_raw_spin_lock_irqsave (23 samples, 0.02%)</title><rect x="70.7044%" y="101" width="0.0192%" height="15" fill="rgb(223,179,41)" fg:x="84887" fg:w="23"/><text x="70.9544%" y="111.50"></text></g><g><title>__raw_spin_lock_irqsave (21 samples, 0.02%)</title><rect x="70.7061%" y="85" width="0.0175%" height="15" fill="rgb(218,9,34)" fg:x="84889" fg:w="21"/><text x="70.9561%" y="95.50"></text></g><g><title>available_idle_cpu (15 samples, 0.01%)</title><rect x="70.7969%" y="69" width="0.0125%" height="15" fill="rgb(222,106,8)" fg:x="84998" fg:w="15"/><text x="71.0469%" y="79.50"></text></g><g><title>select_task_rq_fair (94 samples, 0.08%)</title><rect x="70.7327%" y="101" width="0.0783%" height="15" fill="rgb(211,220,0)" fg:x="84921" fg:w="94"/><text x="70.9827%" y="111.50"></text></g><g><title>wake_affine (25 samples, 0.02%)</title><rect x="70.7902%" y="85" width="0.0208%" height="15" fill="rgb(229,52,16)" fg:x="84990" fg:w="25"/><text x="71.0402%" y="95.50"></text></g><g><title>llist_add_batch (22 samples, 0.02%)</title><rect x="70.8443%" y="85" width="0.0183%" height="15" fill="rgb(212,155,18)" fg:x="85055" fg:w="22"/><text x="71.0943%" y="95.50"></text></g><g><title>sched_clock (21 samples, 0.02%)</title><rect x="70.8635%" y="69" width="0.0175%" height="15" fill="rgb(242,21,14)" fg:x="85078" fg:w="21"/><text x="71.1135%" y="79.50"></text></g><g><title>sched_clock_noinstr (17 samples, 0.01%)</title><rect x="70.8668%" y="53" width="0.0142%" height="15" fill="rgb(222,19,48)" fg:x="85082" fg:w="17"/><text x="71.1168%" y="63.50"></text></g><g><title>native_sched_clock (17 samples, 0.01%)</title><rect x="70.8668%" y="37" width="0.0142%" height="15" fill="rgb(232,45,27)" fg:x="85082" fg:w="17"/><text x="71.1168%" y="47.50"></text></g><g><title>ttwu_queue_wakelist (85 samples, 0.07%)</title><rect x="70.8110%" y="101" width="0.0708%" height="15" fill="rgb(249,103,42)" fg:x="85015" fg:w="85"/><text x="71.0610%" y="111.50"></text></g><g><title>sched_clock_cpu (22 samples, 0.02%)</title><rect x="70.8635%" y="85" width="0.0183%" height="15" fill="rgb(246,81,33)" fg:x="85078" fg:w="22"/><text x="71.1135%" y="95.50"></text></g><g><title>try_to_wake_up (259 samples, 0.22%)</title><rect x="70.6678%" y="117" width="0.2157%" height="15" fill="rgb(252,33,42)" fg:x="84843" fg:w="259"/><text x="70.9178%" y="127.50"></text></g><g><title>default_wake_function (271 samples, 0.23%)</title><rect x="70.6594%" y="133" width="0.2257%" height="15" fill="rgb(209,212,41)" fg:x="84833" fg:w="271"/><text x="70.9094%" y="143.50"></text></g><g><title>__wake_up_common (309 samples, 0.26%)</title><rect x="70.6369%" y="165" width="0.2574%" height="15" fill="rgb(207,154,6)" fg:x="84806" fg:w="309"/><text x="70.8869%" y="175.50"></text></g><g><title>ep_autoremove_wake_function (286 samples, 0.24%)</title><rect x="70.6561%" y="149" width="0.2382%" height="15" fill="rgb(223,64,47)" fg:x="84829" fg:w="286"/><text x="70.9061%" y="159.50"></text></g><g><title>__wake_up_common_lock (333 samples, 0.28%)</title><rect x="70.6319%" y="181" width="0.2774%" height="15" fill="rgb(211,161,38)" fg:x="84800" fg:w="333"/><text x="70.8819%" y="191.50"></text></g><g><title>__wake_up (336 samples, 0.28%)</title><rect x="70.6303%" y="197" width="0.2799%" height="15" fill="rgb(219,138,40)" fg:x="84798" fg:w="336"/><text x="70.8803%" y="207.50"></text></g><g><title>_raw_read_lock_irqsave (30 samples, 0.02%)</title><rect x="70.9101%" y="197" width="0.0250%" height="15" fill="rgb(241,228,46)" fg:x="85134" fg:w="30"/><text x="71.1601%" y="207.50"></text></g><g><title>__raw_read_lock_irqsave (30 samples, 0.02%)</title><rect x="70.9101%" y="181" width="0.0250%" height="15" fill="rgb(223,209,38)" fg:x="85134" fg:w="30"/><text x="71.1601%" y="191.50"></text></g><g><title>__wake_up_common (439 samples, 0.37%)</title><rect x="70.5728%" y="229" width="0.3657%" height="15" fill="rgb(236,164,45)" fg:x="84729" fg:w="439"/><text x="70.8228%" y="239.50"></text></g><g><title>ep_poll_callback (403 samples, 0.34%)</title><rect x="70.6028%" y="213" width="0.3357%" height="15" fill="rgb(231,15,5)" fg:x="84765" fg:w="403"/><text x="70.8528%" y="223.50"></text></g><g><title>__wake_up_common_lock (465 samples, 0.39%)</title><rect x="70.5670%" y="245" width="0.3873%" height="15" fill="rgb(252,35,15)" fg:x="84722" fg:w="465"/><text x="70.8170%" y="255.50"></text></g><g><title>tcp_data_ready (516 samples, 0.43%)</title><rect x="70.5312%" y="293" width="0.4298%" height="15" fill="rgb(248,181,18)" fg:x="84679" fg:w="516"/><text x="70.7812%" y="303.50"></text></g><g><title>sock_def_readable (510 samples, 0.42%)</title><rect x="70.5362%" y="277" width="0.4248%" height="15" fill="rgb(233,39,42)" fg:x="84685" fg:w="510"/><text x="70.7862%" y="287.50"></text></g><g><title>__wake_up_sync_key (477 samples, 0.40%)</title><rect x="70.5636%" y="261" width="0.3973%" height="15" fill="rgb(238,110,33)" fg:x="84718" fg:w="477"/><text x="70.8136%" y="271.50"></text></g><g><title>tcp_grow_window (13 samples, 0.01%)</title><rect x="70.9693%" y="293" width="0.0108%" height="15" fill="rgb(233,195,10)" fg:x="85205" fg:w="13"/><text x="71.2193%" y="303.50"></text></g><g><title>tcp_data_queue (686 samples, 0.57%)</title><rect x="70.4195%" y="309" width="0.5714%" height="15" fill="rgb(254,105,3)" fg:x="84545" fg:w="686"/><text x="70.6695%" y="319.50"></text></g><g><title>tcp_queue_rcv (13 samples, 0.01%)</title><rect x="70.9801%" y="293" width="0.0108%" height="15" fill="rgb(221,225,9)" fg:x="85218" fg:w="13"/><text x="71.2301%" y="303.50"></text></g><g><title>tcp_mstamp_refresh (16 samples, 0.01%)</title><rect x="71.0001%" y="309" width="0.0133%" height="15" fill="rgb(224,227,45)" fg:x="85242" fg:w="16"/><text x="71.2501%" y="319.50"></text></g><g><title>read_tsc (13 samples, 0.01%)</title><rect x="71.0026%" y="293" width="0.0108%" height="15" fill="rgb(229,198,43)" fg:x="85245" fg:w="13"/><text x="71.2526%" y="303.50"></text></g><g><title>tcp_rearm_rto (13 samples, 0.01%)</title><rect x="71.0334%" y="309" width="0.0108%" height="15" fill="rgb(206,209,35)" fg:x="85282" fg:w="13"/><text x="71.2834%" y="319.50"></text></g><g><title>tcp_rcv_established (1,443 samples, 1.20%)</title><rect x="69.8515%" y="325" width="1.2019%" height="15" fill="rgb(245,195,53)" fg:x="83863" fg:w="1443"/><text x="70.1015%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (1,509 samples, 1.26%)</title><rect x="69.8032%" y="341" width="1.2569%" height="15" fill="rgb(240,92,26)" fg:x="83805" fg:w="1509"/><text x="70.0532%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (1,851 samples, 1.54%)</title><rect x="69.5233%" y="373" width="1.5417%" height="15" fill="rgb(207,40,23)" fg:x="83469" fg:w="1851"/><text x="69.7733%" y="383.50"></text></g><g><title>tcp_v4_rcv (1,756 samples, 1.46%)</title><rect x="69.6024%" y="357" width="1.4626%" height="15" fill="rgb(223,111,35)" fg:x="83564" fg:w="1756"/><text x="69.8524%" y="367.50"></text></g><g><title>ip_local_deliver_finish (1,860 samples, 1.55%)</title><rect x="69.5225%" y="389" width="1.5492%" height="15" fill="rgb(229,147,28)" fg:x="83468" fg:w="1860"/><text x="69.7725%" y="399.50"></text></g><g><title>nf_hook_slow (23 samples, 0.02%)</title><rect x="71.0826%" y="389" width="0.0192%" height="15" fill="rgb(211,29,28)" fg:x="85341" fg:w="23"/><text x="71.3326%" y="399.50"></text></g><g><title>ip_local_deliver (1,930 samples, 1.61%)</title><rect x="69.5025%" y="405" width="1.6075%" height="15" fill="rgb(228,72,33)" fg:x="83444" fg:w="1930"/><text x="69.7525%" y="415.50"></text></g><g><title>ip_rcv_core (31 samples, 0.03%)</title><rect x="71.1167%" y="405" width="0.0258%" height="15" fill="rgb(205,214,31)" fg:x="85382" fg:w="31"/><text x="71.3667%" y="415.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (31 samples, 0.03%)</title><rect x="71.1425%" y="405" width="0.0258%" height="15" fill="rgb(224,111,15)" fg:x="85413" fg:w="31"/><text x="71.3925%" y="415.50"></text></g><g><title>ip_sabotage_in (17 samples, 0.01%)</title><rect x="71.1683%" y="405" width="0.0142%" height="15" fill="rgb(253,21,26)" fg:x="85444" fg:w="17"/><text x="71.4183%" y="415.50"></text></g><g><title>nf_hook_slow (51 samples, 0.04%)</title><rect x="71.1950%" y="405" width="0.0425%" height="15" fill="rgb(245,139,43)" fg:x="85476" fg:w="51"/><text x="71.4450%" y="415.50"></text></g><g><title>ip_rcv (2,121 samples, 1.77%)</title><rect x="69.4775%" y="421" width="1.7666%" height="15" fill="rgb(252,170,7)" fg:x="83414" fg:w="2121"/><text x="69.7275%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (2,222 samples, 1.85%)</title><rect x="69.4075%" y="437" width="1.8508%" height="15" fill="rgb(231,118,14)" fg:x="83330" fg:w="2222"/><text x="69.6575%" y="447.50">_..</text></g><g><title>__netif_receive_skb (2,251 samples, 1.87%)</title><rect x="69.3900%" y="453" width="1.8749%" height="15" fill="rgb(238,83,0)" fg:x="83309" fg:w="2251"/><text x="69.6400%" y="463.50">_..</text></g><g><title>__netif_receive_skb_one_core (19 samples, 0.02%)</title><rect x="71.2650%" y="453" width="0.0158%" height="15" fill="rgb(221,39,39)" fg:x="85560" fg:w="19"/><text x="71.5150%" y="463.50"></text></g><g><title>__napi_poll (2,341 samples, 1.95%)</title><rect x="69.3409%" y="485" width="1.9499%" height="15" fill="rgb(222,119,46)" fg:x="83250" fg:w="2341"/><text x="69.5909%" y="495.50">_..</text></g><g><title>process_backlog (2,300 samples, 1.92%)</title><rect x="69.3751%" y="469" width="1.9157%" height="15" fill="rgb(222,165,49)" fg:x="83291" fg:w="2300"/><text x="69.6251%" y="479.50">p..</text></g><g><title>kfree_skbmem (56 samples, 0.05%)</title><rect x="71.3049%" y="469" width="0.0466%" height="15" fill="rgb(219,113,52)" fg:x="85608" fg:w="56"/><text x="71.5549%" y="479.50"></text></g><g><title>kmem_cache_free (42 samples, 0.03%)</title><rect x="71.3166%" y="453" width="0.0350%" height="15" fill="rgb(214,7,15)" fg:x="85622" fg:w="42"/><text x="71.5666%" y="463.50"></text></g><g><title>cache_from_obj (15 samples, 0.01%)</title><rect x="71.3391%" y="437" width="0.0125%" height="15" fill="rgb(235,32,4)" fg:x="85649" fg:w="15"/><text x="71.5891%" y="447.50"></text></g><g><title>__mem_cgroup_uncharge (13 samples, 0.01%)</title><rect x="71.4832%" y="405" width="0.0108%" height="15" fill="rgb(238,90,54)" fg:x="85822" fg:w="13"/><text x="71.7332%" y="415.50"></text></g><g><title>_raw_spin_trylock (15 samples, 0.01%)</title><rect x="71.4940%" y="405" width="0.0125%" height="15" fill="rgb(213,208,19)" fg:x="85835" fg:w="15"/><text x="71.7440%" y="415.50"></text></g><g><title>free_tail_page_prepare (16 samples, 0.01%)</title><rect x="71.5248%" y="389" width="0.0133%" height="15" fill="rgb(233,156,4)" fg:x="85872" fg:w="16"/><text x="71.7748%" y="399.50"></text></g><g><title>free_unref_page_commit (22 samples, 0.02%)</title><rect x="71.5382%" y="389" width="0.0183%" height="15" fill="rgb(207,194,5)" fg:x="85888" fg:w="22"/><text x="71.7882%" y="399.50"></text></g><g><title>free_unref_page (293 samples, 0.24%)</title><rect x="71.5073%" y="405" width="0.2440%" height="15" fill="rgb(206,111,30)" fg:x="85851" fg:w="293"/><text x="71.7573%" y="415.50"></text></g><g><title>free_unref_page_prepare (234 samples, 0.19%)</title><rect x="71.5565%" y="389" width="0.1949%" height="15" fill="rgb(243,70,54)" fg:x="85910" fg:w="234"/><text x="71.8065%" y="399.50"></text></g><g><title>free_tail_page_prepare (63 samples, 0.05%)</title><rect x="71.6989%" y="373" width="0.0525%" height="15" fill="rgb(242,28,8)" fg:x="86081" fg:w="63"/><text x="71.9489%" y="383.50"></text></g><g><title>free_compound_page (358 samples, 0.30%)</title><rect x="71.4765%" y="421" width="0.2982%" height="15" fill="rgb(219,106,18)" fg:x="85814" fg:w="358"/><text x="71.7265%" y="431.50"></text></g><g><title>free_unref_page_prepare (22 samples, 0.02%)</title><rect x="71.7564%" y="405" width="0.0183%" height="15" fill="rgb(244,222,10)" fg:x="86150" fg:w="22"/><text x="72.0064%" y="415.50"></text></g><g><title>destroy_large_folio (387 samples, 0.32%)</title><rect x="71.4574%" y="437" width="0.3223%" height="15" fill="rgb(236,179,52)" fg:x="85791" fg:w="387"/><text x="71.7074%" y="447.50"></text></g><g><title>__folio_put (412 samples, 0.34%)</title><rect x="71.4474%" y="453" width="0.3432%" height="15" fill="rgb(213,23,39)" fg:x="85779" fg:w="412"/><text x="71.6974%" y="463.50"></text></g><g><title>skb_release_data (603 samples, 0.50%)</title><rect x="71.3541%" y="469" width="0.5023%" height="15" fill="rgb(238,48,10)" fg:x="85667" fg:w="603"/><text x="71.6041%" y="479.50"></text></g><g><title>skb_free_head (62 samples, 0.05%)</title><rect x="71.8047%" y="453" width="0.0516%" height="15" fill="rgb(251,196,23)" fg:x="86208" fg:w="62"/><text x="72.0547%" y="463.50"></text></g><g><title>kmem_cache_free (54 samples, 0.04%)</title><rect x="71.8114%" y="437" width="0.0450%" height="15" fill="rgb(250,152,24)" fg:x="86216" fg:w="54"/><text x="72.0614%" y="447.50"></text></g><g><title>cache_from_obj (24 samples, 0.02%)</title><rect x="71.8363%" y="421" width="0.0200%" height="15" fill="rgb(209,150,17)" fg:x="86246" fg:w="24"/><text x="72.0863%" y="431.50"></text></g><g><title>napi_consume_skb (677 samples, 0.56%)</title><rect x="71.2949%" y="485" width="0.5639%" height="15" fill="rgb(234,202,34)" fg:x="85596" fg:w="677"/><text x="71.5449%" y="495.50"></text></g><g><title>process_backlog (18 samples, 0.01%)</title><rect x="71.8588%" y="485" width="0.0150%" height="15" fill="rgb(253,148,53)" fg:x="86273" fg:w="18"/><text x="72.1088%" y="495.50"></text></g><g><title>net_rx_action (3,088 samples, 2.57%)</title><rect x="69.3109%" y="501" width="2.5721%" height="15" fill="rgb(218,129,16)" fg:x="83214" fg:w="3088"/><text x="69.5609%" y="511.50">ne..</text></g><g><title>__do_softirq (3,143 samples, 2.62%)</title><rect x="69.2668%" y="517" width="2.6179%" height="15" fill="rgb(216,85,19)" fg:x="83161" fg:w="3143"/><text x="69.5168%" y="527.50">__..</text></g><g><title>__local_bh_enable_ip (3,184 samples, 2.65%)</title><rect x="69.2393%" y="549" width="2.6520%" height="15" fill="rgb(235,228,7)" fg:x="83128" fg:w="3184"/><text x="69.4893%" y="559.50">__..</text></g><g><title>do_softirq.part.0 (3,177 samples, 2.65%)</title><rect x="69.2451%" y="533" width="2.6462%" height="15" fill="rgb(245,175,0)" fg:x="83135" fg:w="3177"/><text x="69.4951%" y="543.50">do..</text></g><g><title>_raw_spin_lock_irqsave (25 samples, 0.02%)</title><rect x="71.9746%" y="469" width="0.0208%" height="15" fill="rgb(208,168,36)" fg:x="86412" fg:w="25"/><text x="72.2246%" y="479.50"></text></g><g><title>__raw_spin_lock_irqsave (25 samples, 0.02%)</title><rect x="71.9746%" y="453" width="0.0208%" height="15" fill="rgb(246,171,24)" fg:x="86412" fg:w="25"/><text x="72.2246%" y="463.50"></text></g><g><title>__netif_rx (88 samples, 0.07%)</title><rect x="71.9246%" y="517" width="0.0733%" height="15" fill="rgb(215,142,24)" fg:x="86352" fg:w="88"/><text x="72.1746%" y="527.50"></text></g><g><title>netif_rx_internal (80 samples, 0.07%)</title><rect x="71.9313%" y="501" width="0.0666%" height="15" fill="rgb(250,187,7)" fg:x="86360" fg:w="80"/><text x="72.1813%" y="511.50"></text></g><g><title>enqueue_to_backlog (59 samples, 0.05%)</title><rect x="71.9488%" y="485" width="0.0491%" height="15" fill="rgb(228,66,33)" fg:x="86381" fg:w="59"/><text x="72.1988%" y="495.50"></text></g><g><title>eth_type_trans (21 samples, 0.02%)</title><rect x="71.9979%" y="517" width="0.0175%" height="15" fill="rgb(234,215,21)" fg:x="86440" fg:w="21"/><text x="72.2479%" y="527.50"></text></g><g><title>loopback_xmit (160 samples, 0.13%)</title><rect x="71.9088%" y="533" width="0.1333%" height="15" fill="rgb(222,191,20)" fg:x="86333" fg:w="160"/><text x="72.1588%" y="543.50"></text></g><g><title>skb_clone_tx_timestamp (20 samples, 0.02%)</title><rect x="72.0421%" y="533" width="0.0167%" height="15" fill="rgb(245,79,54)" fg:x="86493" fg:w="20"/><text x="72.2921%" y="543.50"></text></g><g><title>dev_hard_start_xmit (210 samples, 0.17%)</title><rect x="71.8913%" y="549" width="0.1749%" height="15" fill="rgb(240,10,37)" fg:x="86312" fg:w="210"/><text x="72.1413%" y="559.50"></text></g><g><title>netif_skb_features (21 samples, 0.02%)</title><rect x="72.1104%" y="533" width="0.0175%" height="15" fill="rgb(214,192,32)" fg:x="86575" fg:w="21"/><text x="72.3604%" y="543.50"></text></g><g><title>validate_xmit_skb (56 samples, 0.05%)</title><rect x="72.0871%" y="549" width="0.0466%" height="15" fill="rgb(209,36,54)" fg:x="86547" fg:w="56"/><text x="72.3371%" y="559.50"></text></g><g><title>__dev_queue_xmit (3,527 samples, 2.94%)</title><rect x="69.2026%" y="565" width="2.9377%" height="15" fill="rgb(220,10,11)" fg:x="83084" fg:w="3527"/><text x="69.4526%" y="575.50">__..</text></g><g><title>ip_finish_output2 (3,624 samples, 3.02%)</title><rect x="69.1260%" y="597" width="3.0185%" height="15" fill="rgb(221,106,17)" fg:x="82992" fg:w="3624"/><text x="69.3760%" y="607.50">ip_..</text></g><g><title>neigh_hh_output (3,546 samples, 2.95%)</title><rect x="69.1910%" y="581" width="2.9535%" height="15" fill="rgb(251,142,44)" fg:x="83070" fg:w="3546"/><text x="69.4410%" y="591.50">nei..</text></g><g><title>ip_skb_dst_mtu (18 samples, 0.01%)</title><rect x="72.1445%" y="597" width="0.0150%" height="15" fill="rgb(238,13,15)" fg:x="86616" fg:w="18"/><text x="72.3945%" y="607.50"></text></g><g><title>__ip_finish_output (3,667 samples, 3.05%)</title><rect x="69.1060%" y="613" width="3.0543%" height="15" fill="rgb(208,107,27)" fg:x="82968" fg:w="3667"/><text x="69.3560%" y="623.50">__i..</text></g><g><title>ip_finish_output (3,692 samples, 3.08%)</title><rect x="69.0927%" y="629" width="3.0752%" height="15" fill="rgb(205,136,37)" fg:x="82952" fg:w="3692"/><text x="69.3427%" y="639.50">ip_..</text></g><g><title>nf_confirm (14 samples, 0.01%)</title><rect x="72.1679%" y="629" width="0.0117%" height="15" fill="rgb(250,205,27)" fg:x="86644" fg:w="14"/><text x="72.4179%" y="639.50"></text></g><g><title>nf_confirm (21 samples, 0.02%)</title><rect x="72.1870%" y="613" width="0.0175%" height="15" fill="rgb(210,80,43)" fg:x="86667" fg:w="21"/><text x="72.4370%" y="623.50"></text></g><g><title>nf_hook_slow (47 samples, 0.04%)</title><rect x="72.1795%" y="629" width="0.0391%" height="15" fill="rgb(247,160,36)" fg:x="86658" fg:w="47"/><text x="72.4295%" y="639.50"></text></g><g><title>nf_nat_ipv4_out (13 samples, 0.01%)</title><rect x="72.2078%" y="613" width="0.0108%" height="15" fill="rgb(234,13,49)" fg:x="86692" fg:w="13"/><text x="72.4578%" y="623.50"></text></g><g><title>ip_output (3,814 samples, 3.18%)</title><rect x="69.0477%" y="645" width="3.1768%" height="15" fill="rgb(234,122,0)" fg:x="82898" fg:w="3814"/><text x="69.2977%" y="655.50">ip_..</text></g><g><title>ip_local_out (4,506 samples, 3.75%)</title><rect x="68.4822%" y="661" width="3.7532%" height="15" fill="rgb(207,146,38)" fg:x="82219" fg:w="4506"/><text x="68.7322%" y="671.50">ip_l..</text></g><g><title>__ip_queue_xmit (4,574 samples, 3.81%)</title><rect x="68.4322%" y="677" width="3.8098%" height="15" fill="rgb(207,177,25)" fg:x="82159" fg:w="4574"/><text x="68.6822%" y="687.50">__ip..</text></g><g><title>ip_queue_xmit (4,588 samples, 3.82%)</title><rect x="68.4322%" y="693" width="3.8215%" height="15" fill="rgb(211,178,42)" fg:x="82159" fg:w="4588"/><text x="68.6822%" y="703.50">ip_q..</text></g><g><title>skb_clone (27 samples, 0.02%)</title><rect x="72.2536%" y="693" width="0.0225%" height="15" fill="rgb(230,69,54)" fg:x="86747" fg:w="27"/><text x="72.5036%" y="703.50"></text></g><g><title>__tcp_transmit_skb (4,800 samples, 4.00%)</title><rect x="68.3006%" y="709" width="3.9980%" height="15" fill="rgb(214,135,41)" fg:x="82001" fg:w="4800"/><text x="68.5506%" y="719.50">__tc..</text></g><g><title>ktime_get (19 samples, 0.02%)</title><rect x="72.3244%" y="709" width="0.0158%" height="15" fill="rgb(237,67,25)" fg:x="86832" fg:w="19"/><text x="72.5744%" y="719.50"></text></g><g><title>read_tsc (15 samples, 0.01%)</title><rect x="72.3436%" y="709" width="0.0125%" height="15" fill="rgb(222,189,50)" fg:x="86855" fg:w="15"/><text x="72.5936%" y="719.50"></text></g><g><title>rb_insert_color (13 samples, 0.01%)</title><rect x="72.4036%" y="693" width="0.0108%" height="15" fill="rgb(245,148,34)" fg:x="86927" fg:w="13"/><text x="72.6536%" y="703.50"></text></g><g><title>enqueue_timer (13 samples, 0.01%)</title><rect x="72.4644%" y="629" width="0.0108%" height="15" fill="rgb(222,29,6)" fg:x="87000" fg:w="13"/><text x="72.7144%" y="639.50"></text></g><g><title>__mod_timer (84 samples, 0.07%)</title><rect x="72.4277%" y="645" width="0.0700%" height="15" fill="rgb(221,189,43)" fg:x="86956" fg:w="84"/><text x="72.6777%" y="655.50"></text></g><g><title>lock_timer_base (21 samples, 0.02%)</title><rect x="72.4802%" y="629" width="0.0175%" height="15" fill="rgb(207,36,27)" fg:x="87019" fg:w="21"/><text x="72.7302%" y="639.50"></text></g><g><title>_raw_spin_lock_irqsave (17 samples, 0.01%)</title><rect x="72.4835%" y="613" width="0.0142%" height="15" fill="rgb(217,90,24)" fg:x="87023" fg:w="17"/><text x="72.7335%" y="623.50"></text></g><g><title>__raw_spin_lock_irqsave (17 samples, 0.01%)</title><rect x="72.4835%" y="597" width="0.0142%" height="15" fill="rgb(224,66,35)" fg:x="87023" fg:w="17"/><text x="72.7335%" y="607.50"></text></g><g><title>tcp_event_new_data_sent (165 samples, 0.14%)</title><rect x="72.3852%" y="709" width="0.1374%" height="15" fill="rgb(221,13,50)" fg:x="86905" fg:w="165"/><text x="72.6352%" y="719.50"></text></g><g><title>tcp_rearm_rto (122 samples, 0.10%)</title><rect x="72.4211%" y="693" width="0.1016%" height="15" fill="rgb(236,68,49)" fg:x="86948" fg:w="122"/><text x="72.6711%" y="703.50"></text></g><g><title>sk_reset_timer (118 samples, 0.10%)</title><rect x="72.4244%" y="677" width="0.0983%" height="15" fill="rgb(229,146,28)" fg:x="86952" fg:w="118"/><text x="72.6744%" y="687.50"></text></g><g><title>mod_timer (115 samples, 0.10%)</title><rect x="72.4269%" y="661" width="0.0958%" height="15" fill="rgb(225,31,38)" fg:x="86955" fg:w="115"/><text x="72.6769%" y="671.50"></text></g><g><title>tcp_schedule_loss_probe (34 samples, 0.03%)</title><rect x="72.5402%" y="709" width="0.0283%" height="15" fill="rgb(250,208,3)" fg:x="87091" fg:w="34"/><text x="72.7902%" y="719.50"></text></g><g><title>tcp_tso_segs (17 samples, 0.01%)</title><rect x="72.5735%" y="709" width="0.0142%" height="15" fill="rgb(246,54,23)" fg:x="87131" fg:w="17"/><text x="72.8235%" y="719.50"></text></g><g><title>tcp_push_one (5,240 samples, 4.36%)</title><rect x="68.2331%" y="741" width="4.3645%" height="15" fill="rgb(243,76,11)" fg:x="81920" fg:w="5240"/><text x="68.4831%" y="751.50">tcp_p..</text></g><g><title>tcp_write_xmit (5,187 samples, 4.32%)</title><rect x="68.2773%" y="725" width="4.3204%" height="15" fill="rgb(245,21,50)" fg:x="81973" fg:w="5187"/><text x="68.5273%" y="735.50">tcp_w..</text></g><g><title>tcp_rate_check_app_limited (14 samples, 0.01%)</title><rect x="72.5976%" y="741" width="0.0117%" height="15" fill="rgb(228,9,43)" fg:x="87160" fg:w="14"/><text x="72.8476%" y="751.50"></text></g><g><title>tcp_send_mss (75 samples, 0.06%)</title><rect x="72.6093%" y="741" width="0.0625%" height="15" fill="rgb(208,100,47)" fg:x="87174" fg:w="75"/><text x="72.8593%" y="751.50"></text></g><g><title>tcp_current_mss (66 samples, 0.05%)</title><rect x="72.6168%" y="725" width="0.0550%" height="15" fill="rgb(232,26,8)" fg:x="87183" fg:w="66"/><text x="72.8668%" y="735.50"></text></g><g><title>tcp_skb_entail (43 samples, 0.04%)</title><rect x="72.6718%" y="741" width="0.0358%" height="15" fill="rgb(216,166,38)" fg:x="87249" fg:w="43"/><text x="72.9218%" y="751.50"></text></g><g><title>kmem_cache_alloc_node (34 samples, 0.03%)</title><rect x="72.7709%" y="693" width="0.0283%" height="15" fill="rgb(251,202,51)" fg:x="87368" fg:w="34"/><text x="73.0209%" y="703.50"></text></g><g><title>memset_orig (34 samples, 0.03%)</title><rect x="72.7992%" y="693" width="0.0283%" height="15" fill="rgb(254,216,34)" fg:x="87402" fg:w="34"/><text x="73.0492%" y="703.50"></text></g><g><title>kmalloc_reserve (74 samples, 0.06%)</title><rect x="72.7667%" y="709" width="0.0616%" height="15" fill="rgb(251,32,27)" fg:x="87363" fg:w="74"/><text x="73.0167%" y="719.50"></text></g><g><title>kmem_cache_alloc_node (74 samples, 0.06%)</title><rect x="72.8284%" y="709" width="0.0616%" height="15" fill="rgb(208,127,28)" fg:x="87437" fg:w="74"/><text x="73.0784%" y="719.50"></text></g><g><title>memset_orig (34 samples, 0.03%)</title><rect x="72.8975%" y="709" width="0.0283%" height="15" fill="rgb(224,137,22)" fg:x="87520" fg:w="34"/><text x="73.1475%" y="719.50"></text></g><g><title>__alloc_skb (283 samples, 0.24%)</title><rect x="72.7126%" y="725" width="0.2357%" height="15" fill="rgb(254,70,32)" fg:x="87298" fg:w="283"/><text x="72.9626%" y="735.50"></text></g><g><title>should_failslab (27 samples, 0.02%)</title><rect x="72.9258%" y="709" width="0.0225%" height="15" fill="rgb(229,75,37)" fg:x="87554" fg:w="27"/><text x="73.1758%" y="719.50"></text></g><g><title>mod_memcg_state (46 samples, 0.04%)</title><rect x="72.9766%" y="693" width="0.0383%" height="15" fill="rgb(252,64,23)" fg:x="87615" fg:w="46"/><text x="73.2266%" y="703.50"></text></g><g><title>__mod_memcg_state (42 samples, 0.03%)</title><rect x="72.9800%" y="677" width="0.0350%" height="15" fill="rgb(232,162,48)" fg:x="87619" fg:w="42"/><text x="73.2300%" y="687.50"></text></g><g><title>cgroup_rstat_updated (15 samples, 0.01%)</title><rect x="73.0024%" y="661" width="0.0125%" height="15" fill="rgb(246,160,12)" fg:x="87646" fg:w="15"/><text x="73.2524%" y="671.50"></text></g><g><title>mem_cgroup_charge_skmem (68 samples, 0.06%)</title><rect x="72.9683%" y="709" width="0.0566%" height="15" fill="rgb(247,166,0)" fg:x="87605" fg:w="68"/><text x="73.2183%" y="719.50"></text></g><g><title>tcp_stream_alloc_skb (385 samples, 0.32%)</title><rect x="72.7076%" y="741" width="0.3207%" height="15" fill="rgb(249,219,21)" fg:x="87292" fg:w="385"/><text x="72.9576%" y="751.50"></text></g><g><title>sk_forced_mem_schedule (85 samples, 0.07%)</title><rect x="72.9575%" y="725" width="0.0708%" height="15" fill="rgb(205,209,3)" fg:x="87592" fg:w="85"/><text x="73.2075%" y="735.50"></text></g><g><title>__mod_memcg_state (40 samples, 0.03%)</title><rect x="73.1540%" y="661" width="0.0333%" height="15" fill="rgb(243,44,1)" fg:x="87828" fg:w="40"/><text x="73.4040%" y="671.50"></text></g><g><title>cgroup_rstat_updated (16 samples, 0.01%)</title><rect x="73.1740%" y="645" width="0.0133%" height="15" fill="rgb(206,159,16)" fg:x="87852" fg:w="16"/><text x="73.4240%" y="655.50"></text></g><g><title>mod_memcg_state (51 samples, 0.04%)</title><rect x="73.1457%" y="677" width="0.0425%" height="15" fill="rgb(244,77,30)" fg:x="87818" fg:w="51"/><text x="73.3957%" y="687.50"></text></g><g><title>consume_stock (23 samples, 0.02%)</title><rect x="73.2207%" y="661" width="0.0192%" height="15" fill="rgb(218,69,12)" fg:x="87908" fg:w="23"/><text x="73.4707%" y="671.50"></text></g><g><title>page_counter_try_charge (34 samples, 0.03%)</title><rect x="73.2398%" y="661" width="0.0283%" height="15" fill="rgb(212,87,7)" fg:x="87931" fg:w="34"/><text x="73.4898%" y="671.50"></text></g><g><title>mem_cgroup_charge_skmem (162 samples, 0.13%)</title><rect x="73.1382%" y="693" width="0.1349%" height="15" fill="rgb(245,114,25)" fg:x="87809" fg:w="162"/><text x="73.3882%" y="703.50"></text></g><g><title>try_charge_memcg (99 samples, 0.08%)</title><rect x="73.1907%" y="677" width="0.0825%" height="15" fill="rgb(210,61,42)" fg:x="87872" fg:w="99"/><text x="73.4407%" y="687.50"></text></g><g><title>__sk_mem_raise_allocated (292 samples, 0.24%)</title><rect x="73.0599%" y="709" width="0.2432%" height="15" fill="rgb(211,52,33)" fg:x="87715" fg:w="292"/><text x="73.3099%" y="719.50"></text></g><g><title>tcp_leave_memory_pressure (30 samples, 0.02%)</title><rect x="73.2781%" y="693" width="0.0250%" height="15" fill="rgb(234,58,33)" fg:x="87977" fg:w="30"/><text x="73.5281%" y="703.50"></text></g><g><title>tcp_wmem_schedule (333 samples, 0.28%)</title><rect x="73.0341%" y="741" width="0.2774%" height="15" fill="rgb(220,115,36)" fg:x="87684" fg:w="333"/><text x="73.2841%" y="751.50"></text></g><g><title>__sk_mem_schedule (309 samples, 0.26%)</title><rect x="73.0541%" y="725" width="0.2574%" height="15" fill="rgb(243,153,54)" fg:x="87708" fg:w="309"/><text x="73.3041%" y="735.50"></text></g><g><title>tcp_sendmsg_locked (14,065 samples, 11.72%)</title><rect x="61.6014%" y="757" width="11.7151%" height="15" fill="rgb(251,47,18)" fg:x="73958" fg:w="14065"/><text x="61.8514%" y="767.50">tcp_sendmsg_locked</text></g><g><title>tcp_sendmsg (14,203 samples, 11.83%)</title><rect x="61.4931%" y="773" width="11.8300%" height="15" fill="rgb(242,102,42)" fg:x="73828" fg:w="14203"/><text x="61.7431%" y="783.50">tcp_sendmsg</text></g><g><title>inet6_sendmsg (14,250 samples, 11.87%)</title><rect x="61.4581%" y="789" width="11.8692%" height="15" fill="rgb(234,31,38)" fg:x="73786" fg:w="14250"/><text x="61.7081%" y="799.50">inet6_sendmsg</text></g><g><title>security_socket_sendmsg (33 samples, 0.03%)</title><rect x="73.3306%" y="789" width="0.0275%" height="15" fill="rgb(221,117,51)" fg:x="88040" fg:w="33"/><text x="73.5806%" y="799.50"></text></g><g><title>apparmor_socket_sendmsg (22 samples, 0.02%)</title><rect x="73.3398%" y="773" width="0.0183%" height="15" fill="rgb(212,20,18)" fg:x="88051" fg:w="22"/><text x="73.5898%" y="783.50"></text></g><g><title>aa_sk_perm (17 samples, 0.01%)</title><rect x="73.3439%" y="757" width="0.0142%" height="15" fill="rgb(245,133,36)" fg:x="88056" fg:w="17"/><text x="73.5939%" y="767.50"></text></g><g><title>do_iter_readv_writev (14,387 samples, 11.98%)</title><rect x="61.3757%" y="821" width="11.9833%" height="15" fill="rgb(212,6,19)" fg:x="73687" fg:w="14387"/><text x="61.6257%" y="831.50">do_iter_readv_writ..</text></g><g><title>sock_write_iter (14,343 samples, 11.95%)</title><rect x="61.4123%" y="805" width="11.9466%" height="15" fill="rgb(218,1,36)" fg:x="73731" fg:w="14343"/><text x="61.6623%" y="815.50">sock_write_iter</text></g><g><title>apparmor_file_permission (15 samples, 0.01%)</title><rect x="73.3589%" y="805" width="0.0125%" height="15" fill="rgb(246,84,54)" fg:x="88074" fg:w="15"/><text x="73.6089%" y="815.50"></text></g><g><title>rw_verify_area (45 samples, 0.04%)</title><rect x="73.3589%" y="821" width="0.0375%" height="15" fill="rgb(242,110,6)" fg:x="88074" fg:w="45"/><text x="73.6089%" y="831.50"></text></g><g><title>security_file_permission (30 samples, 0.02%)</title><rect x="73.3714%" y="805" width="0.0250%" height="15" fill="rgb(214,47,5)" fg:x="88089" fg:w="30"/><text x="73.6214%" y="815.50"></text></g><g><title>apparmor_file_permission (27 samples, 0.02%)</title><rect x="73.3739%" y="789" width="0.0225%" height="15" fill="rgb(218,159,25)" fg:x="88092" fg:w="27"/><text x="73.6239%" y="799.50"></text></g><g><title>do_iter_write (14,492 samples, 12.07%)</title><rect x="61.3332%" y="837" width="12.0707%" height="15" fill="rgb(215,211,28)" fg:x="73636" fg:w="14492"/><text x="61.5832%" y="847.50">do_iter_write</text></g><g><title>copy_iovec_from_user (13 samples, 0.01%)</title><rect x="73.4339%" y="805" width="0.0108%" height="15" fill="rgb(238,59,32)" fg:x="88164" fg:w="13"/><text x="73.6839%" y="815.50"></text></g><g><title>__import_iovec (51 samples, 0.04%)</title><rect x="73.4047%" y="821" width="0.0425%" height="15" fill="rgb(226,82,3)" fg:x="88129" fg:w="51"/><text x="73.6547%" y="831.50"></text></g><g><title>import_iovec (53 samples, 0.04%)</title><rect x="73.4039%" y="837" width="0.0441%" height="15" fill="rgb(240,164,32)" fg:x="88128" fg:w="53"/><text x="73.6539%" y="847.50"></text></g><g><title>do_writev (14,680 samples, 12.23%)</title><rect x="61.2232%" y="869" width="12.2273%" height="15" fill="rgb(232,46,7)" fg:x="73504" fg:w="14680"/><text x="61.4732%" y="879.50">do_writev</text></g><g><title>vfs_writev (14,566 samples, 12.13%)</title><rect x="61.3182%" y="853" width="12.1324%" height="15" fill="rgb(229,129,53)" fg:x="73618" fg:w="14566"/><text x="61.5682%" y="863.50">vfs_writev</text></g><g><title>fput (14 samples, 0.01%)</title><rect x="73.4506%" y="869" width="0.0117%" height="15" fill="rgb(234,188,29)" fg:x="88184" fg:w="14"/><text x="73.7006%" y="879.50"></text></g><g><title>__x64_sys_writev (14,696 samples, 12.24%)</title><rect x="61.2224%" y="885" width="12.2406%" height="15" fill="rgb(246,141,4)" fg:x="73503" fg:w="14696"/><text x="61.4724%" y="895.50">__x64_sys_writev</text></g><g><title>exit_to_user_mode_loop (15 samples, 0.01%)</title><rect x="73.5838%" y="853" width="0.0125%" height="15" fill="rgb(229,23,39)" fg:x="88344" fg:w="15"/><text x="73.8338%" y="863.50"></text></g><g><title>schedule (14 samples, 0.01%)</title><rect x="73.5847%" y="837" width="0.0117%" height="15" fill="rgb(206,12,3)" fg:x="88345" fg:w="14"/><text x="73.8347%" y="847.50"></text></g><g><title>__schedule (14 samples, 0.01%)</title><rect x="73.5847%" y="821" width="0.0117%" height="15" fill="rgb(252,226,20)" fg:x="88345" fg:w="14"/><text x="73.8347%" y="831.50"></text></g><g><title>finish_task_switch.isra.0 (14 samples, 0.01%)</title><rect x="73.5847%" y="805" width="0.0117%" height="15" fill="rgb(216,123,35)" fg:x="88345" fg:w="14"/><text x="73.8347%" y="815.50"></text></g><g><title>__perf_event_task_sched_in (14 samples, 0.01%)</title><rect x="73.5847%" y="789" width="0.0117%" height="15" fill="rgb(212,68,40)" fg:x="88345" fg:w="14"/><text x="73.8347%" y="799.50"></text></g><g><title>perf_ctx_enable (14 samples, 0.01%)</title><rect x="73.5847%" y="773" width="0.0117%" height="15" fill="rgb(254,125,32)" fg:x="88345" fg:w="14"/><text x="73.8347%" y="783.50"></text></g><g><title>x86_pmu_enable (14 samples, 0.01%)</title><rect x="73.5847%" y="757" width="0.0117%" height="15" fill="rgb(253,97,22)" fg:x="88345" fg:w="14"/><text x="73.8347%" y="767.50"></text></g><g><title>intel_pmu_enable_all (14 samples, 0.01%)</title><rect x="73.5847%" y="741" width="0.0117%" height="15" fill="rgb(241,101,14)" fg:x="88345" fg:w="14"/><text x="73.8347%" y="751.50"></text></g><g><title>native_write_msr (14 samples, 0.01%)</title><rect x="73.5847%" y="725" width="0.0117%" height="15" fill="rgb(238,103,29)" fg:x="88345" fg:w="14"/><text x="73.8347%" y="735.50"></text></g><g><title>fpregs_assert_state_consistent (13 samples, 0.01%)</title><rect x="73.5963%" y="853" width="0.0108%" height="15" fill="rgb(233,195,47)" fg:x="88359" fg:w="13"/><text x="73.8463%" y="863.50"></text></g><g><title>exit_to_user_mode_prepare (32 samples, 0.03%)</title><rect x="73.5813%" y="869" width="0.0267%" height="15" fill="rgb(246,218,30)" fg:x="88341" fg:w="32"/><text x="73.8313%" y="879.50"></text></g><g><title>do_syscall_64 (14,891 samples, 12.40%)</title><rect x="61.2082%" y="901" width="12.4031%" height="15" fill="rgb(219,145,47)" fg:x="73486" fg:w="14891"/><text x="61.4582%" y="911.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (167 samples, 0.14%)</title><rect x="73.4722%" y="885" width="0.1391%" height="15" fill="rgb(243,12,26)" fg:x="88210" fg:w="167"/><text x="73.7222%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15,000 samples, 12.49%)</title><rect x="61.1208%" y="917" width="12.4939%" height="15" fill="rgb(214,87,16)" fg:x="73381" fg:w="15000"/><text x="61.3708%" y="927.50">entry_SYSCALL_64_af..</text></g><g><title>__GI___writev (15,201 samples, 12.66%)</title><rect x="61.0508%" y="933" width="12.6613%" height="15" fill="rgb(208,99,42)" fg:x="73297" fg:w="15201"/><text x="61.3008%" y="943.50">__GI___writev</text></g><g><title>syscall_return_via_sysret (113 samples, 0.09%)</title><rect x="73.6180%" y="917" width="0.0941%" height="15" fill="rgb(253,99,2)" fg:x="88385" fg:w="113"/><text x="73.8680%" y="927.50"></text></g><g><title>uv__getiovmax (13 samples, 0.01%)</title><rect x="73.7121%" y="933" width="0.0108%" height="15" fill="rgb(220,168,23)" fg:x="88498" fg:w="13"/><text x="73.9621%" y="943.50"></text></g><g><title>uv__try_write (15,256 samples, 12.71%)</title><rect x="61.0275%" y="949" width="12.7071%" height="15" fill="rgb(242,38,24)" fg:x="73269" fg:w="15256"/><text x="61.2775%" y="959.50">uv__try_write</text></g><g><title>writev@plt (14 samples, 0.01%)</title><rect x="73.7229%" y="933" width="0.0117%" height="15" fill="rgb(225,182,9)" fg:x="88511" fg:w="14"/><text x="73.9729%" y="943.50"></text></g><g><title>non-virtual thunk to node::LibuvStreamWrap::DoTryWrite (15,311 samples, 12.75%)</title><rect x="60.9958%" y="965" width="12.7529%" height="15" fill="rgb(243,178,37)" fg:x="73231" fg:w="15311"/><text x="61.2458%" y="975.50">non-virtual thunk t..</text></g><g><title>uv_try_write (17 samples, 0.01%)</title><rect x="73.7346%" y="949" width="0.0142%" height="15" fill="rgb(232,139,19)" fg:x="88525" fg:w="17"/><text x="73.9846%" y="959.50"></text></g><g><title>node::StreamBase::Write (15,362 samples, 12.80%)</title><rect x="60.9559%" y="981" width="12.7954%" height="15" fill="rgb(225,201,24)" fg:x="73183" fg:w="15362"/><text x="61.2059%" y="991.50">node::StreamBase::W..</text></g><g><title>v8::HandleScope::~HandleScope (16 samples, 0.01%)</title><rect x="73.7587%" y="965" width="0.0133%" height="15" fill="rgb(221,47,46)" fg:x="88554" fg:w="16"/><text x="74.0087%" y="975.50"></text></g><g><title>__sysvec_apic_timer_interrupt (13 samples, 0.01%)</title><rect x="82.5927%" y="917" width="0.0108%" height="15" fill="rgb(249,23,13)" fg:x="99160" fg:w="13"/><text x="82.8427%" y="927.50"></text></g><g><title>hrtimer_interrupt (13 samples, 0.01%)</title><rect x="82.5927%" y="901" width="0.0108%" height="15" fill="rgb(219,9,5)" fg:x="99160" fg:w="13"/><text x="82.8427%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (17 samples, 0.01%)</title><rect x="82.5919%" y="949" width="0.0142%" height="15" fill="rgb(254,171,16)" fg:x="99159" fg:w="17"/><text x="82.8419%" y="959.50"></text></g><g><title>sysvec_apic_timer_interrupt (16 samples, 0.01%)</title><rect x="82.5927%" y="933" width="0.0133%" height="15" fill="rgb(230,171,20)" fg:x="99160" fg:w="16"/><text x="82.8427%" y="943.50"></text></g><g><title>__x64_sys_write (13 samples, 0.01%)</title><rect x="82.6985%" y="757" width="0.0108%" height="15" fill="rgb(210,71,41)" fg:x="99287" fg:w="13"/><text x="82.9485%" y="767.50"></text></g><g><title>ksys_write (13 samples, 0.01%)</title><rect x="82.6985%" y="741" width="0.0108%" height="15" fill="rgb(206,173,20)" fg:x="99287" fg:w="13"/><text x="82.9485%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="82.6960%" y="789" width="0.0150%" height="15" fill="rgb(233,88,34)" fg:x="99284" fg:w="18"/><text x="82.9460%" y="799.50"></text></g><g><title>do_syscall_64 (16 samples, 0.01%)</title><rect x="82.6977%" y="773" width="0.0133%" height="15" fill="rgb(223,209,46)" fg:x="99286" fg:w="16"/><text x="82.9477%" y="783.50"></text></g><g><title>non-virtual thunk to node::PerIsolatePlatformData::PostNonNestableTask (24 samples, 0.02%)</title><rect x="82.6927%" y="837" width="0.0200%" height="15" fill="rgb(250,43,18)" fg:x="99280" fg:w="24"/><text x="82.9427%" y="847.50"></text></g><g><title>uv_async_send (21 samples, 0.02%)</title><rect x="82.6952%" y="821" width="0.0175%" height="15" fill="rgb(208,13,10)" fg:x="99283" fg:w="21"/><text x="82.9452%" y="831.50"></text></g><g><title>__GI___libc_write (20 samples, 0.02%)</title><rect x="82.6960%" y="805" width="0.0167%" height="15" fill="rgb(212,200,36)" fg:x="99284" fg:w="20"/><text x="82.9460%" y="815.50"></text></g><g><title>v8::internal::MinorGCJob::ScheduleTaskIfNeeded (40 samples, 0.03%)</title><rect x="82.6877%" y="853" width="0.0333%" height="15" fill="rgb(225,90,30)" fg:x="99274" fg:w="40"/><text x="82.9377%" y="863.50"></text></g><g><title>v8::internal::AllocationCounter::InvokeAllocationObservers (50 samples, 0.04%)</title><rect x="82.6802%" y="885" width="0.0416%" height="15" fill="rgb(236,182,39)" fg:x="99265" fg:w="50"/><text x="82.9302%" y="895.50"></text></g><g><title>v8::internal::ScheduleMinorGCTaskObserver::Step (46 samples, 0.04%)</title><rect x="82.6835%" y="869" width="0.0383%" height="15" fill="rgb(212,144,35)" fg:x="99269" fg:w="46"/><text x="82.9335%" y="879.50"></text></g><g><title>__GI___printf_fp_l (48 samples, 0.04%)</title><rect x="82.7685%" y="741" width="0.0400%" height="15" fill="rgb(228,63,44)" fg:x="99371" fg:w="48"/><text x="83.0185%" y="751.50"></text></g><g><title>__vsnprintf_internal (85 samples, 0.07%)</title><rect x="82.7510%" y="773" width="0.0708%" height="15" fill="rgb(228,109,6)" fg:x="99350" fg:w="85"/><text x="83.0010%" y="783.50"></text></g><g><title>__vfprintf_internal (83 samples, 0.07%)</title><rect x="82.7526%" y="757" width="0.0691%" height="15" fill="rgb(238,117,24)" fg:x="99352" fg:w="83"/><text x="83.0026%" y="767.50"></text></g><g><title>v8::base::OS::VSNPrintF (86 samples, 0.07%)</title><rect x="82.7510%" y="789" width="0.0716%" height="15" fill="rgb(242,26,26)" fg:x="99350" fg:w="86"/><text x="83.0010%" y="799.50"></text></g><g><title>v8::internal::GCTracer::Print (100 samples, 0.08%)</title><rect x="82.7402%" y="821" width="0.0833%" height="15" fill="rgb(221,92,48)" fg:x="99337" fg:w="100"/><text x="82.9902%" y="831.50"></text></g><g><title>v8::internal::GCTracer::Output (88 samples, 0.07%)</title><rect x="82.7501%" y="805" width="0.0733%" height="15" fill="rgb(209,209,32)" fg:x="99349" fg:w="88"/><text x="83.0001%" y="815.50"></text></g><g><title>v8::internal::GCTracer::UpdateStatistics (104 samples, 0.09%)</title><rect x="82.7385%" y="837" width="0.0866%" height="15" fill="rgb(221,70,22)" fg:x="99335" fg:w="104"/><text x="82.9885%" y="847.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionEpilogue (13 samples, 0.01%)</title><rect x="82.8351%" y="837" width="0.0108%" height="15" fill="rgb(248,145,5)" fg:x="99451" fg:w="13"/><text x="83.0851%" y="847.50"></text></g><g><title>v8::internal::Heap::NewSpaceAllocationCounter (129 samples, 0.11%)</title><rect x="82.8693%" y="805" width="0.1074%" height="15" fill="rgb(226,116,26)" fg:x="99492" fg:w="129"/><text x="83.1193%" y="815.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AllocatedSinceLastGC (129 samples, 0.11%)</title><rect x="82.8693%" y="789" width="0.1074%" height="15" fill="rgb(244,5,17)" fg:x="99492" fg:w="129"/><text x="83.1193%" y="799.50"></text></g><g><title>v8::internal::GCTracer::StartInSafepoint (143 samples, 0.12%)</title><rect x="82.8676%" y="821" width="0.1191%" height="15" fill="rgb(252,159,33)" fg:x="99490" fg:w="143"/><text x="83.1176%" y="831.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (41 samples, 0.03%)</title><rect x="82.9934%" y="821" width="0.0341%" height="15" fill="rgb(206,71,0)" fg:x="99641" fg:w="41"/><text x="83.2434%" y="831.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::MakeAllPagesInFromSpaceIterable (19 samples, 0.02%)</title><rect x="83.0117%" y="805" width="0.0158%" height="15" fill="rgb(233,118,54)" fg:x="99663" fg:w="19"/><text x="83.2617%" y="815.50"></text></g><g><title>v8::internal::Heap::CreateFillerObjectAt (18 samples, 0.01%)</title><rect x="83.0125%" y="789" width="0.0150%" height="15" fill="rgb(234,83,48)" fg:x="99664" fg:w="18"/><text x="83.2625%" y="799.50"></text></g><g><title>malloc (14 samples, 0.01%)</title><rect x="83.1250%" y="773" width="0.0117%" height="15" fill="rgb(228,3,54)" fg:x="99799" fg:w="14"/><text x="83.3750%" y="783.50"></text></g><g><title>operator new (17 samples, 0.01%)</title><rect x="83.1241%" y="789" width="0.0142%" height="15" fill="rgb(226,155,13)" fg:x="99798" fg:w="17"/><text x="83.3741%" y="799.50"></text></g><g><title>v8::internal::ConcurrentMarking::ClearMemoryChunkData (31 samples, 0.03%)</title><rect x="83.1500%" y="789" width="0.0258%" height="15" fill="rgb(241,28,37)" fg:x="99829" fg:w="31"/><text x="83.4000%" y="799.50"></text></g><g><title>v8::internal::(anonymous namespace)::IterateObjectCache (394 samples, 0.33%)</title><rect x="83.1766%" y="773" width="0.3282%" height="15" fill="rgb(233,93,10)" fg:x="99861" fg:w="394"/><text x="83.4266%" y="783.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (130 samples, 0.11%)</title><rect x="83.3965%" y="757" width="0.1083%" height="15" fill="rgb(225,113,19)" fg:x="100125" fg:w="130"/><text x="83.6465%" y="767.50"></text></g><g><title>v8::internal::HandleScopeImplementer::IterateThis (15 samples, 0.01%)</title><rect x="83.5056%" y="773" width="0.0125%" height="15" fill="rgb(241,2,18)" fg:x="100256" fg:w="15"/><text x="83.7556%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (52 samples, 0.04%)</title><rect x="83.5314%" y="693" width="0.0433%" height="15" fill="rgb(228,207,21)" fg:x="100287" fg:w="52"/><text x="83.7814%" y="703.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateShortcutCandidate&lt;v8::internal::FullHeapObjectSlot&gt; (58 samples, 0.05%)</title><rect x="83.5306%" y="709" width="0.0483%" height="15" fill="rgb(213,211,35)" fg:x="100286" fg:w="58"/><text x="83.7806%" y="719.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (65 samples, 0.05%)</title><rect x="83.5256%" y="725" width="0.0541%" height="15" fill="rgb(209,83,10)" fg:x="100280" fg:w="65"/><text x="83.7756%" y="735.50"></text></g><g><title>v8::internal::(anonymous namespace)::VisitSpillSlots (69 samples, 0.06%)</title><rect x="83.5248%" y="741" width="0.0575%" height="15" fill="rgb(209,164,1)" fg:x="100279" fg:w="69"/><text x="83.7748%" y="751.50"></text></g><g><title>v8::internal::CommonFrame::IterateTurbofanOptimizedFrame (92 samples, 0.08%)</title><rect x="83.5239%" y="757" width="0.0766%" height="15" fill="rgb(213,184,43)" fg:x="100278" fg:w="92"/><text x="83.7739%" y="767.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointers (21 samples, 0.02%)</title><rect x="83.5831%" y="741" width="0.0175%" height="15" fill="rgb(231,61,34)" fg:x="100349" fg:w="21"/><text x="83.8331%" y="751.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (18 samples, 0.01%)</title><rect x="83.5856%" y="725" width="0.0150%" height="15" fill="rgb(235,75,3)" fg:x="100352" fg:w="18"/><text x="83.8356%" y="735.50"></text></g><g><title>v8::internal::StackFrameIterator::Advance (29 samples, 0.02%)</title><rect x="83.6106%" y="757" width="0.0242%" height="15" fill="rgb(220,106,47)" fg:x="100382" fg:w="29"/><text x="83.8606%" y="767.50"></text></g><g><title>v8::internal::StackFrameIterator::ComputeStackFrameType (23 samples, 0.02%)</title><rect x="83.6156%" y="741" width="0.0192%" height="15" fill="rgb(210,196,33)" fg:x="100388" fg:w="23"/><text x="83.8656%" y="751.50"></text></g><g><title>v8::internal::Isolate::Iterate (142 samples, 0.12%)</title><rect x="83.5181%" y="773" width="0.1183%" height="15" fill="rgb(229,154,42)" fg:x="100271" fg:w="142"/><text x="83.7681%" y="783.50"></text></g><g><title>v8::internal::Heap::IterateRoots (558 samples, 0.46%)</title><rect x="83.1766%" y="789" width="0.4648%" height="15" fill="rgb(228,114,26)" fg:x="99861" fg:w="558"/><text x="83.4266%" y="799.50"></text></g><g><title>v8::internal::Scavenger::Finalize (19 samples, 0.02%)</title><rect x="83.6480%" y="789" width="0.0158%" height="15" fill="rgb(208,144,1)" fg:x="100427" fg:w="19"/><text x="83.8980%" y="799.50"></text></g><g><title>operator new (27 samples, 0.02%)</title><rect x="83.6930%" y="757" width="0.0225%" height="15" fill="rgb(239,112,37)" fg:x="100481" fg:w="27"/><text x="83.9430%" y="767.50"></text></g><g><title>malloc (27 samples, 0.02%)</title><rect x="83.6930%" y="741" width="0.0225%" height="15" fill="rgb(210,96,50)" fg:x="100481" fg:w="27"/><text x="83.9430%" y="751.50"></text></g><g><title>_int_malloc (20 samples, 0.02%)</title><rect x="83.6988%" y="725" width="0.0167%" height="15" fill="rgb(222,178,2)" fg:x="100488" fg:w="20"/><text x="83.9488%" y="735.50"></text></g><g><title>v8::internal::FreeList::CreateFreeList (39 samples, 0.03%)</title><rect x="83.6905%" y="773" width="0.0325%" height="15" fill="rgb(226,74,18)" fg:x="100478" fg:w="39"/><text x="83.9405%" y="783.50"></text></g><g><title>v8::internal::Scavenger::Scavenger (89 samples, 0.07%)</title><rect x="83.6689%" y="789" width="0.0741%" height="15" fill="rgb(225,67,54)" fg:x="100452" fg:w="89"/><text x="83.9189%" y="799.50"></text></g><g><title>v8::internal::PagedSpaceBase::PagedSpaceBase (24 samples, 0.02%)</title><rect x="83.7230%" y="773" width="0.0200%" height="15" fill="rgb(251,92,32)" fg:x="100517" fg:w="24"/><text x="83.9730%" y="783.50"></text></g><g><title>operator new (14 samples, 0.01%)</title><rect x="83.7313%" y="757" width="0.0117%" height="15" fill="rgb(228,149,22)" fg:x="100527" fg:w="14"/><text x="83.9813%" y="767.50"></text></g><g><title>malloc (14 samples, 0.01%)</title><rect x="83.7313%" y="741" width="0.0117%" height="15" fill="rgb(243,54,13)" fg:x="100527" fg:w="14"/><text x="83.9813%" y="751.50"></text></g><g><title>cfree@GLIBC_2.2.5 (13 samples, 0.01%)</title><rect x="83.7580%" y="773" width="0.0108%" height="15" fill="rgb(243,180,28)" fg:x="100559" fg:w="13"/><text x="84.0080%" y="783.50"></text></g><g><title>v8::internal::Scavenger::~Scavenger (45 samples, 0.04%)</title><rect x="83.7430%" y="789" width="0.0375%" height="15" fill="rgb(208,167,24)" fg:x="100541" fg:w="45"/><text x="83.9930%" y="799.50"></text></g><g><title>__x64_sys_futex (37 samples, 0.03%)</title><rect x="83.8096%" y="661" width="0.0308%" height="15" fill="rgb(245,73,45)" fg:x="100621" fg:w="37"/><text x="84.0596%" y="671.50"></text></g><g><title>do_futex (37 samples, 0.03%)</title><rect x="83.8096%" y="645" width="0.0308%" height="15" fill="rgb(237,203,48)" fg:x="100621" fg:w="37"/><text x="84.0596%" y="655.50"></text></g><g><title>futex_wake (35 samples, 0.03%)</title><rect x="83.8113%" y="629" width="0.0292%" height="15" fill="rgb(211,197,16)" fg:x="100623" fg:w="35"/><text x="84.0613%" y="639.50"></text></g><g><title>wake_up_q (21 samples, 0.02%)</title><rect x="83.8230%" y="613" width="0.0175%" height="15" fill="rgb(243,99,51)" fg:x="100637" fg:w="21"/><text x="84.0730%" y="623.50"></text></g><g><title>try_to_wake_up (20 samples, 0.02%)</title><rect x="83.8238%" y="597" width="0.0167%" height="15" fill="rgb(215,123,29)" fg:x="100638" fg:w="20"/><text x="84.0738%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (50 samples, 0.04%)</title><rect x="83.8021%" y="693" width="0.0416%" height="15" fill="rgb(239,186,37)" fg:x="100612" fg:w="50"/><text x="84.0521%" y="703.50"></text></g><g><title>do_syscall_64 (41 samples, 0.03%)</title><rect x="83.8096%" y="677" width="0.0341%" height="15" fill="rgb(252,136,39)" fg:x="100621" fg:w="41"/><text x="84.0596%" y="687.50"></text></g><g><title>pthread_cond_signal@@GLIBC_2.3.2 (59 samples, 0.05%)</title><rect x="83.7980%" y="709" width="0.0491%" height="15" fill="rgb(223,213,32)" fg:x="100607" fg:w="59"/><text x="84.0480%" y="719.50"></text></g><g><title>uv_cond_signal (60 samples, 0.05%)</title><rect x="83.7980%" y="725" width="0.0500%" height="15" fill="rgb(233,115,5)" fg:x="100607" fg:w="60"/><text x="84.0480%" y="735.50"></text></g><g><title>node::TaskQueue&lt;v8::Task&gt;::Push (63 samples, 0.05%)</title><rect x="83.7971%" y="741" width="0.0525%" height="15" fill="rgb(207,226,44)" fg:x="100606" fg:w="63"/><text x="84.0471%" y="751.50"></text></g><g><title>node::NodePlatform::CallOnWorkerThread (64 samples, 0.05%)</title><rect x="83.7971%" y="757" width="0.0533%" height="15" fill="rgb(208,126,0)" fg:x="100606" fg:w="64"/><text x="84.0471%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (528 samples, 0.44%)</title><rect x="84.0412%" y="677" width="0.4398%" height="15" fill="rgb(244,66,21)" fg:x="100899" fg:w="528"/><text x="84.2912%" y="687.50"></text></g><g><title>v8::internal::EvacuationAllocator::AllocateInNewSpace (17 samples, 0.01%)</title><rect x="84.4810%" y="677" width="0.0142%" height="15" fill="rgb(222,97,12)" fg:x="101427" fg:w="17"/><text x="84.7310%" y="687.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateShortcutCandidate&lt;v8::internal::FullHeapObjectSlot&gt; (573 samples, 0.48%)</title><rect x="84.0187%" y="693" width="0.4773%" height="15" fill="rgb(219,213,19)" fg:x="100872" fg:w="573"/><text x="84.2687%" y="703.50"></text></g><g><title>v8::internal::PretenuringHandler::UpdateAllocationSite (13 samples, 0.01%)</title><rect x="84.5109%" y="693" width="0.0108%" height="15" fill="rgb(252,169,30)" fg:x="101463" fg:w="13"/><text x="84.7609%" y="703.50"></text></g><g><title>v8::internal::Scavenger::Process (793 samples, 0.66%)</title><rect x="83.8629%" y="741" width="0.6605%" height="15" fill="rgb(206,32,51)" fg:x="100685" fg:w="793"/><text x="84.1129%" y="751.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (749 samples, 0.62%)</title><rect x="83.8996%" y="725" width="0.6239%" height="15" fill="rgb(250,172,42)" fg:x="100729" fg:w="749"/><text x="84.1496%" y="735.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (705 samples, 0.59%)</title><rect x="83.9362%" y="709" width="0.5872%" height="15" fill="rgb(209,34,43)" fg:x="100773" fg:w="705"/><text x="84.1862%" y="719.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (30 samples, 0.02%)</title><rect x="84.5867%" y="709" width="0.0250%" height="15" fill="rgb(223,11,35)" fg:x="101554" fg:w="30"/><text x="84.8367%" y="719.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (909 samples, 0.76%)</title><rect x="83.8621%" y="757" width="0.7571%" height="15" fill="rgb(251,219,26)" fg:x="100684" fg:w="909"/><text x="84.1121%" y="767.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ConcurrentScavengePages (115 samples, 0.10%)</title><rect x="84.5234%" y="741" width="0.0958%" height="15" fill="rgb(231,119,3)" fg:x="101478" fg:w="115"/><text x="84.7734%" y="751.50"></text></g><g><title>v8::internal::Scavenger::ScavengePage (115 samples, 0.10%)</title><rect x="84.5234%" y="725" width="0.0958%" height="15" fill="rgb(216,97,11)" fg:x="101478" fg:w="115"/><text x="84.7734%" y="735.50"></text></g><g><title>v8::platform::DefaultJobState::Join (996 samples, 0.83%)</title><rect x="83.7938%" y="773" width="0.8296%" height="15" fill="rgb(223,59,9)" fg:x="100602" fg:w="996"/><text x="84.0438%" y="783.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (1,007 samples, 0.84%)</title><rect x="83.7913%" y="789" width="0.8388%" height="15" fill="rgb(233,93,31)" fg:x="100599" fg:w="1007"/><text x="84.0413%" y="799.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1,910 samples, 1.59%)</title><rect x="83.0458%" y="805" width="1.5909%" height="15" fill="rgb(239,81,33)" fg:x="99704" fg:w="1910"/><text x="83.2958%" y="815.50"></text></g><g><title>v8::internal::ConcurrentMarking::ClearMemoryChunkData (17 samples, 0.01%)</title><rect x="84.9083%" y="789" width="0.0142%" height="15" fill="rgb(213,120,34)" fg:x="101940" fg:w="17"/><text x="85.1583%" y="799.50"></text></g><g><title>v8::internal::Heap::Scavenge (2,261 samples, 1.88%)</title><rect x="83.0417%" y="821" width="1.8832%" height="15" fill="rgb(243,49,53)" fg:x="99699" fg:w="2261"/><text x="83.2917%" y="831.50">v..</text></g><g><title>v8::internal::SemiSpaceNewSpace::EvacuatePrologue (346 samples, 0.29%)</title><rect x="84.6367%" y="805" width="0.2882%" height="15" fill="rgb(247,216,33)" fg:x="101614" fg:w="346"/><text x="84.8867%" y="815.50"></text></g><g><title>v8::internal::PretenuringHandler::ProcessPretenuringFeedback (13 samples, 0.01%)</title><rect x="84.9316%" y="821" width="0.0108%" height="15" fill="rgb(226,26,14)" fg:x="101968" fg:w="13"/><text x="85.1816%" y="831.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (2,518 samples, 2.10%)</title><rect x="82.8534%" y="837" width="2.0973%" height="15" fill="rgb(215,49,53)" fg:x="99473" fg:w="2518"/><text x="83.1034%" y="847.50">v..</text></g><g><title>v8::internal::Heap::CollectGarbage (2,674 samples, 2.23%)</title><rect x="82.7310%" y="853" width="2.2272%" height="15" fill="rgb(245,162,40)" fg:x="99326" fg:w="2674"/><text x="82.9810%" y="863.50">v..</text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (2,687 samples, 2.24%)</title><rect x="82.7218%" y="885" width="2.2381%" height="15" fill="rgb(229,68,17)" fg:x="99315" fg:w="2687"/><text x="82.9718%" y="895.50">v..</text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (2,687 samples, 2.24%)</title><rect x="82.7218%" y="869" width="2.2381%" height="15" fill="rgb(213,182,10)" fg:x="99315" fg:w="2687"/><text x="82.9718%" y="879.50">v..</text></g><g><title>v8::internal::SemiSpaceNewSpace::AddFreshPage (118 samples, 0.10%)</title><rect x="84.9666%" y="869" width="0.0983%" height="15" fill="rgb(245,125,30)" fg:x="102010" fg:w="118"/><text x="85.2166%" y="879.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::UpdateLinearAllocationArea (105 samples, 0.09%)</title><rect x="84.9774%" y="853" width="0.0875%" height="15" fill="rgb(232,202,2)" fg:x="102023" fg:w="105"/><text x="85.2274%" y="863.50"></text></g><g><title>v8::internal::SpaceWithLinearArea::AdvanceAllocationObservers (22 samples, 0.02%)</title><rect x="85.0673%" y="869" width="0.0183%" height="15" fill="rgb(237,140,51)" fg:x="102131" fg:w="22"/><text x="85.3173%" y="879.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EnsureAllocation (152 samples, 0.13%)</title><rect x="84.9599%" y="885" width="0.1266%" height="15" fill="rgb(236,157,25)" fg:x="102002" fg:w="152"/><text x="85.2099%" y="895.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (2,905 samples, 2.42%)</title><rect x="82.6677%" y="901" width="2.4196%" height="15" fill="rgb(219,209,0)" fg:x="99250" fg:w="2905"/><text x="82.9177%" y="911.50">v8..</text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (2,969 samples, 2.47%)</title><rect x="82.6152%" y="933" width="2.4730%" height="15" fill="rgb(240,116,54)" fg:x="99187" fg:w="2969"/><text x="82.8652%" y="943.50">v8..</text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (2,911 samples, 2.42%)</title><rect x="82.6635%" y="917" width="2.4246%" height="15" fill="rgb(216,10,36)" fg:x="99245" fg:w="2911"/><text x="82.9135%" y="927.50">v8..</text></g><g><title>__memmove_avx_unaligned_erms (3,469 samples, 2.89%)</title><rect x="85.0907%" y="917" width="2.8894%" height="15" fill="rgb(222,72,44)" fg:x="102159" fg:w="3469"/><text x="85.3407%" y="927.50">__..</text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.01%)</title><rect x="88.0359%" y="885" width="0.0133%" height="15" fill="rgb(232,159,9)" fg:x="105695" fg:w="16"/><text x="88.2859%" y="895.50"></text></g><g><title>void v8::internal::CopyChars&lt;unsigned char, unsigned char&gt; (14 samples, 0.01%)</title><rect x="88.0509%" y="885" width="0.0117%" height="15" fill="rgb(210,39,32)" fg:x="105713" fg:w="14"/><text x="88.3009%" y="895.50"></text></g><g><title>v8::internal::String::SlowFlatten (6,631 samples, 5.52%)</title><rect x="82.6061%" y="949" width="5.5231%" height="15" fill="rgb(216,194,45)" fg:x="99176" fg:w="6631"/><text x="82.8561%" y="959.50">v8::int..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (3,648 samples, 3.04%)</title><rect x="85.0907%" y="933" width="3.0385%" height="15" fill="rgb(218,18,35)" fg:x="102159" fg:w="3648"/><text x="85.3407%" y="943.50">voi..</text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (178 samples, 0.15%)</title><rect x="87.9809%" y="917" width="0.1483%" height="15" fill="rgb(207,83,51)" fg:x="105629" fg:w="178"/><text x="88.2309%" y="927.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (158 samples, 0.13%)</title><rect x="87.9976%" y="901" width="0.1316%" height="15" fill="rgb(225,63,43)" fg:x="105649" fg:w="158"/><text x="88.2476%" y="911.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (80 samples, 0.07%)</title><rect x="88.0625%" y="885" width="0.0666%" height="15" fill="rgb(207,57,36)" fg:x="105727" fg:w="80"/><text x="88.3125%" y="895.50"></text></g><g><title>v8::String::Utf8Length (17,236 samples, 14.36%)</title><rect x="73.7737%" y="965" width="14.3563%" height="15" fill="rgb(216,99,33)" fg:x="88572" fg:w="17236"/><text x="74.0237%" y="975.50">v8::String::Utf8Length</text></g><g><title>node::StringBytes::Size (17,270 samples, 14.38%)</title><rect x="73.7512%" y="981" width="14.3846%" height="15" fill="rgb(225,42,16)" fg:x="88545" fg:w="17270"/><text x="74.0012%" y="991.50">node::StringBytes::Size</text></g><g><title>v8::HandleScope::HandleScope (15 samples, 0.01%)</title><rect x="88.1392%" y="965" width="0.0125%" height="15" fill="rgb(220,201,45)" fg:x="105819" fg:w="15"/><text x="88.3892%" y="975.50"></text></g><g><title>node::StringBytes::StorageSize (40 samples, 0.03%)</title><rect x="88.1358%" y="981" width="0.0333%" height="15" fill="rgb(225,33,4)" fg:x="105815" fg:w="40"/><text x="88.3858%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,931 samples, 1.61%)</title><rect x="89.6726%" y="949" width="1.6084%" height="15" fill="rgb(224,33,50)" fg:x="107660" fg:w="1931"/><text x="89.9226%" y="959.50"></text></g><g><title>node::StringBytes::Write (3,741 samples, 3.12%)</title><rect x="88.1692%" y="981" width="3.1160%" height="15" fill="rgb(246,198,51)" fg:x="105855" fg:w="3741"/><text x="88.4192%" y="991.50">nod..</text></g><g><title>v8::String::WriteUtf8 (3,702 samples, 3.08%)</title><rect x="88.2016%" y="965" width="3.0835%" height="15" fill="rgb(205,22,4)" fg:x="105894" fg:w="3702"/><text x="88.4516%" y="975.50">v8:..</text></g><g><title>operator delete (34 samples, 0.03%)</title><rect x="91.2851%" y="981" width="0.0283%" height="15" fill="rgb(206,3,8)" fg:x="109596" fg:w="34"/><text x="91.5351%" y="991.50"></text></g><g><title>malloc (15 samples, 0.01%)</title><rect x="91.3742%" y="933" width="0.0125%" height="15" fill="rgb(251,23,15)" fg:x="109703" fg:w="15"/><text x="91.6242%" y="943.50"></text></g><g><title>operator new (44 samples, 0.04%)</title><rect x="91.3626%" y="949" width="0.0366%" height="15" fill="rgb(252,88,28)" fg:x="109689" fg:w="44"/><text x="91.6126%" y="959.50"></text></g><g><title>malloc@plt (15 samples, 0.01%)</title><rect x="91.3867%" y="933" width="0.0125%" height="15" fill="rgb(212,127,14)" fg:x="109718" fg:w="15"/><text x="91.6367%" y="943.50"></text></g><g><title>malloc (122 samples, 0.10%)</title><rect x="91.4525%" y="917" width="0.1016%" height="15" fill="rgb(247,145,37)" fg:x="109797" fg:w="122"/><text x="91.7025%" y="927.50"></text></g><g><title>_int_malloc (73 samples, 0.06%)</title><rect x="91.4933%" y="901" width="0.0608%" height="15" fill="rgb(209,117,53)" fg:x="109846" fg:w="73"/><text x="91.7433%" y="911.50"></text></g><g><title>node::NodeArrayBufferAllocator::Allocate (161 samples, 0.13%)</title><rect x="91.4259%" y="933" width="0.1341%" height="15" fill="rgb(212,90,42)" fg:x="109765" fg:w="161"/><text x="91.6759%" y="943.50"></text></g><g><title>v8::internal::Heap::YoungArrayBufferBytes (15 samples, 0.01%)</title><rect x="91.5666%" y="933" width="0.0125%" height="15" fill="rgb(218,164,37)" fg:x="109934" fg:w="15"/><text x="91.8166%" y="943.50"></text></g><g><title>v8::internal::BackingStore::Allocate (317 samples, 0.26%)</title><rect x="91.3268%" y="965" width="0.2640%" height="15" fill="rgb(246,65,34)" fg:x="109646" fg:w="317"/><text x="91.5768%" y="975.50"></text></g><g><title>v8::internal::Heap::AllocateExternalBackingStore (222 samples, 0.18%)</title><rect x="91.4059%" y="949" width="0.1849%" height="15" fill="rgb(231,100,33)" fg:x="109741" fg:w="222"/><text x="91.6559%" y="959.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::ExternalBackingStoreBytes (14 samples, 0.01%)</title><rect x="91.5791%" y="933" width="0.0117%" height="15" fill="rgb(228,126,14)" fg:x="109949" fg:w="14"/><text x="91.8291%" y="943.50"></text></g><g><title>v8::ArrayBuffer::NewBackingStore (323 samples, 0.27%)</title><rect x="91.3226%" y="981" width="0.2690%" height="15" fill="rgb(215,173,21)" fg:x="109641" fg:w="323"/><text x="91.5726%" y="991.50"></text></g><g><title>v8::Context::GetNumberOfEmbedderDataFields (24 samples, 0.02%)</title><rect x="91.6033%" y="981" width="0.0200%" height="15" fill="rgb(210,6,40)" fg:x="109978" fg:w="24"/><text x="91.8533%" y="991.50"></text></g><g><title>v8::CallDepthScope&lt;false&gt;::CallDepthScope (25 samples, 0.02%)</title><rect x="91.7107%" y="965" width="0.0208%" height="15" fill="rgb(212,48,18)" fg:x="110107" fg:w="25"/><text x="91.9607%" y="975.50"></text></g><g><title>v8::EscapableHandleScope::EscapableHandleScope (40 samples, 0.03%)</title><rect x="91.7316%" y="965" width="0.0333%" height="15" fill="rgb(230,214,11)" fg:x="110132" fg:w="40"/><text x="91.9816%" y="975.50"></text></g><g><title>v8::internal::LookupIterator::FetchValue (25 samples, 0.02%)</title><rect x="91.8149%" y="949" width="0.0208%" height="15" fill="rgb(254,105,39)" fg:x="110232" fg:w="25"/><text x="92.0649%" y="959.50"></text></g><g><title>v8::internal::Object::GetProperty (56 samples, 0.05%)</title><rect x="91.7907%" y="965" width="0.0466%" height="15" fill="rgb(245,158,5)" fg:x="110203" fg:w="56"/><text x="92.0407%" y="975.50"></text></g><g><title>v8::Object::Get (376 samples, 0.31%)</title><rect x="91.6291%" y="981" width="0.3132%" height="15" fill="rgb(249,208,11)" fg:x="110009" fg:w="376"/><text x="91.8791%" y="991.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;true&gt; (126 samples, 0.10%)</title><rect x="91.8373%" y="965" width="0.1049%" height="15" fill="rgb(210,39,28)" fg:x="110259" fg:w="126"/><text x="92.0873%" y="975.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (87 samples, 0.07%)</title><rect x="91.8698%" y="949" width="0.0725%" height="15" fill="rgb(211,56,53)" fg:x="110298" fg:w="87"/><text x="92.1198%" y="959.50"></text></g><g><title>v8::Value::IsArray (19 samples, 0.02%)</title><rect x="91.9456%" y="981" width="0.0158%" height="15" fill="rgb(226,201,30)" fg:x="110389" fg:w="19"/><text x="92.1956%" y="991.50"></text></g><g><title>v8::Value::IsArrayBufferView (29 samples, 0.02%)</title><rect x="91.9615%" y="981" width="0.0242%" height="15" fill="rgb(239,101,34)" fg:x="110408" fg:w="29"/><text x="92.2115%" y="991.50"></text></g><g><title>cfree@GLIBC_2.2.5 (61 samples, 0.05%)</title><rect x="92.0323%" y="965" width="0.0508%" height="15" fill="rgb(226,209,5)" fg:x="110493" fg:w="61"/><text x="92.2823%" y="975.50"></text></g><g><title>_int_free (43 samples, 0.04%)</title><rect x="92.0472%" y="949" width="0.0358%" height="15" fill="rgb(250,105,47)" fg:x="110511" fg:w="43"/><text x="92.2972%" y="959.50"></text></g><g><title>node::NodeArrayBufferAllocator::Free (13 samples, 0.01%)</title><rect x="92.0864%" y="965" width="0.0108%" height="15" fill="rgb(230,72,3)" fg:x="110558" fg:w="13"/><text x="92.3364%" y="975.50"></text></g><g><title>v8::internal::BackingStore::~BackingStore (123 samples, 0.10%)</title><rect x="92.0098%" y="981" width="0.1024%" height="15" fill="rgb(232,218,39)" fg:x="110466" fg:w="123"/><text x="92.2598%" y="991.50"></text></g><g><title>v8::internal::GlobalBackingStoreRegistry::Unregister (13 samples, 0.01%)</title><rect x="92.1014%" y="965" width="0.0108%" height="15" fill="rgb(248,166,6)" fg:x="110576" fg:w="13"/><text x="92.3514%" y="975.50"></text></g><g><title>node::StreamBase::Writev (38,014 samples, 31.66%)</title><rect x="60.4511%" y="997" width="31.6628%" height="15" fill="rgb(247,89,20)" fg:x="72577" fg:w="38014"/><text x="60.7011%" y="1007.50">node::StreamBase::Writev</text></g><g><title>non-virtual thunk to node::LibuvStreamWrap::IsAlive (34 samples, 0.03%)</title><rect x="92.1155%" y="997" width="0.0283%" height="15" fill="rgb(248,130,54)" fg:x="110593" fg:w="34"/><text x="92.3655%" y="1007.50"></text></g><g><title>node::AsyncWrap::IsDoneInitializing (14 samples, 0.01%)</title><rect x="92.1322%" y="981" width="0.0117%" height="15" fill="rgb(234,196,4)" fg:x="110613" fg:w="14"/><text x="92.3822%" y="991.50"></text></g><g><title>[perf-1077634.map] (109,014 samples, 90.80%)</title><rect x="1.3452%" y="1029" width="90.8004%" height="15" fill="rgb(250,143,31)" fg:x="1615" fg:w="109014"/><text x="1.5952%" y="1039.50">[perf-1077634.map]</text></g><g><title>void node::StreamBase::JSMethod&lt;&amp;node::StreamBase::Writev&gt; (38,190 samples, 31.81%)</title><rect x="60.3362%" y="1013" width="31.8094%" height="15" fill="rgb(211,110,34)" fg:x="72439" fg:w="38190"/><text x="60.5862%" y="1023.50">void node::StreamBase::JSMethod&lt;&amp;node::StreamBase::..</text></g><g><title>read (15 samples, 0.01%)</title><rect x="92.1930%" y="933" width="0.0125%" height="15" fill="rgb(215,124,48)" fg:x="110686" fg:w="15"/><text x="92.4430%" y="943.50"></text></g><g><title>node::SpinEventLoopInternal (60 samples, 0.05%)</title><rect x="92.1655%" y="1013" width="0.0500%" height="15" fill="rgb(216,46,13)" fg:x="110653" fg:w="60"/><text x="92.4155%" y="1023.50"></text></g><g><title>uv_run (60 samples, 0.05%)</title><rect x="92.1655%" y="997" width="0.0500%" height="15" fill="rgb(205,184,25)" fg:x="110653" fg:w="60"/><text x="92.4155%" y="1007.50"></text></g><g><title>uv__io_poll (60 samples, 0.05%)</title><rect x="92.1655%" y="981" width="0.0500%" height="15" fill="rgb(228,1,10)" fg:x="110653" fg:w="60"/><text x="92.4155%" y="991.50"></text></g><g><title>uv__stream_io (60 samples, 0.05%)</title><rect x="92.1655%" y="965" width="0.0500%" height="15" fill="rgb(213,116,27)" fg:x="110653" fg:w="60"/><text x="92.4155%" y="975.50"></text></g><g><title>uv__read (60 samples, 0.05%)</title><rect x="92.1655%" y="949" width="0.0500%" height="15" fill="rgb(241,95,50)" fg:x="110653" fg:w="60"/><text x="92.4155%" y="959.50"></text></g><g><title>tcp_poll (23 samples, 0.02%)</title><rect x="92.4187%" y="757" width="0.0192%" height="15" fill="rgb(238,48,32)" fg:x="110957" fg:w="23"/><text x="92.6687%" y="767.50"></text></g><g><title>ep_item_poll.isra.0 (76 samples, 0.06%)</title><rect x="92.3762%" y="789" width="0.0633%" height="15" fill="rgb(235,113,49)" fg:x="110906" fg:w="76"/><text x="92.6262%" y="799.50"></text></g><g><title>sock_poll (61 samples, 0.05%)</title><rect x="92.3887%" y="773" width="0.0508%" height="15" fill="rgb(205,127,43)" fg:x="110921" fg:w="61"/><text x="92.6387%" y="783.50"></text></g><g><title>ep_send_events (117 samples, 0.10%)</title><rect x="92.3454%" y="805" width="0.0975%" height="15" fill="rgb(250,162,2)" fg:x="110869" fg:w="117"/><text x="92.5954%" y="815.50"></text></g><g><title>do_epoll_wait (153 samples, 0.13%)</title><rect x="92.3179%" y="837" width="0.1274%" height="15" fill="rgb(220,13,41)" fg:x="110836" fg:w="153"/><text x="92.5679%" y="847.50"></text></g><g><title>ep_poll (133 samples, 0.11%)</title><rect x="92.3346%" y="821" width="0.1108%" height="15" fill="rgb(249,221,25)" fg:x="110856" fg:w="133"/><text x="92.5846%" y="831.50"></text></g><g><title>do_epoll_pwait.part.0 (155 samples, 0.13%)</title><rect x="92.3171%" y="853" width="0.1291%" height="15" fill="rgb(215,208,19)" fg:x="110835" fg:w="155"/><text x="92.5671%" y="863.50"></text></g><g><title>__x64_sys_epoll_pwait (161 samples, 0.13%)</title><rect x="92.3146%" y="869" width="0.1341%" height="15" fill="rgb(236,175,2)" fg:x="110832" fg:w="161"/><text x="92.5646%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (194 samples, 0.16%)</title><rect x="92.3054%" y="901" width="0.1616%" height="15" fill="rgb(241,52,2)" fg:x="110821" fg:w="194"/><text x="92.5554%" y="911.50"></text></g><g><title>do_syscall_64 (184 samples, 0.15%)</title><rect x="92.3138%" y="885" width="0.1533%" height="15" fill="rgb(248,140,14)" fg:x="110831" fg:w="184"/><text x="92.5638%" y="895.50"></text></g><g><title>syscall_exit_to_user_mode (14 samples, 0.01%)</title><rect x="92.4554%" y="869" width="0.0117%" height="15" fill="rgb(253,22,42)" fg:x="111001" fg:w="14"/><text x="92.7054%" y="879.50"></text></g><g><title>epoll_pwait (233 samples, 0.19%)</title><rect x="92.2838%" y="917" width="0.1941%" height="15" fill="rgb(234,61,47)" fg:x="110795" fg:w="233"/><text x="92.5338%" y="927.50"></text></g><g><title>syscall_return_via_sysret (13 samples, 0.01%)</title><rect x="92.4670%" y="901" width="0.0108%" height="15" fill="rgb(208,226,15)" fg:x="111015" fg:w="13"/><text x="92.7170%" y="911.50"></text></g><g><title>node::Start (339 samples, 0.28%)</title><rect x="92.2155%" y="1013" width="0.2824%" height="15" fill="rgb(217,221,4)" fg:x="110713" fg:w="339"/><text x="92.4655%" y="1023.50"></text></g><g><title>node::NodeMainInstance::Run (339 samples, 0.28%)</title><rect x="92.2155%" y="997" width="0.2824%" height="15" fill="rgb(212,174,34)" fg:x="110713" fg:w="339"/><text x="92.4655%" y="1007.50"></text></g><g><title>node::NodeMainInstance::Run (339 samples, 0.28%)</title><rect x="92.2155%" y="981" width="0.2824%" height="15" fill="rgb(253,83,4)" fg:x="110713" fg:w="339"/><text x="92.4655%" y="991.50"></text></g><g><title>node::SpinEventLoopInternal (339 samples, 0.28%)</title><rect x="92.2155%" y="965" width="0.2824%" height="15" fill="rgb(250,195,49)" fg:x="110713" fg:w="339"/><text x="92.4655%" y="975.50"></text></g><g><title>uv_run (339 samples, 0.28%)</title><rect x="92.2155%" y="949" width="0.2824%" height="15" fill="rgb(241,192,25)" fg:x="110713" fg:w="339"/><text x="92.4655%" y="959.50"></text></g><g><title>uv__io_poll (339 samples, 0.28%)</title><rect x="92.2155%" y="933" width="0.2824%" height="15" fill="rgb(208,124,10)" fg:x="110713" fg:w="339"/><text x="92.4655%" y="943.50"></text></g><g><title>uv__stream_io (20 samples, 0.02%)</title><rect x="92.4812%" y="917" width="0.0167%" height="15" fill="rgb(222,33,0)" fg:x="111032" fg:w="20"/><text x="92.7312%" y="927.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (13 samples, 0.01%)</title><rect x="92.5395%" y="933" width="0.0108%" height="15" fill="rgb(234,209,28)" fg:x="111102" fg:w="13"/><text x="92.7895%" y="943.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (13 samples, 0.01%)</title><rect x="92.5395%" y="917" width="0.0108%" height="15" fill="rgb(224,11,23)" fg:x="111102" fg:w="13"/><text x="92.7895%" y="927.50"></text></g><g><title>node::PerIsolatePlatformData::RunForegroundTask (32 samples, 0.03%)</title><rect x="92.5245%" y="965" width="0.0267%" height="15" fill="rgb(232,99,1)" fg:x="111084" fg:w="32"/><text x="92.7745%" y="975.50"></text></g><g><title>v8::internal::MinorGCJob::Task::RunInternal (15 samples, 0.01%)</title><rect x="92.5387%" y="949" width="0.0125%" height="15" fill="rgb(237,95,45)" fg:x="111101" fg:w="15"/><text x="92.7887%" y="959.50"></text></g><g><title>non-virtual thunk to v8::internal::MinorGCJob::Task::~Task (14 samples, 0.01%)</title><rect x="92.5512%" y="965" width="0.0117%" height="15" fill="rgb(208,109,11)" fg:x="111116" fg:w="14"/><text x="92.8012%" y="975.50"></text></g><g><title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (62 samples, 0.05%)</title><rect x="92.5187%" y="981" width="0.0516%" height="15" fill="rgb(216,190,48)" fg:x="111077" fg:w="62"/><text x="92.7687%" y="991.50"></text></g><g><title>__x64_sys_read (18 samples, 0.01%)</title><rect x="92.5770%" y="933" width="0.0150%" height="15" fill="rgb(251,171,36)" fg:x="111147" fg:w="18"/><text x="92.8270%" y="943.50"></text></g><g><title>ksys_read (18 samples, 0.01%)</title><rect x="92.5770%" y="917" width="0.0150%" height="15" fill="rgb(230,62,22)" fg:x="111147" fg:w="18"/><text x="92.8270%" y="927.50"></text></g><g><title>vfs_read (14 samples, 0.01%)</title><rect x="92.5803%" y="901" width="0.0117%" height="15" fill="rgb(225,114,35)" fg:x="111151" fg:w="14"/><text x="92.8303%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.02%)</title><rect x="92.5753%" y="965" width="0.0183%" height="15" fill="rgb(215,118,42)" fg:x="111145" fg:w="22"/><text x="92.8253%" y="975.50"></text></g><g><title>do_syscall_64 (20 samples, 0.02%)</title><rect x="92.5770%" y="949" width="0.0167%" height="15" fill="rgb(243,119,21)" fg:x="111147" fg:w="20"/><text x="92.8270%" y="959.50"></text></g><g><title>uv__async_io.part.0 (94 samples, 0.08%)</title><rect x="92.5162%" y="997" width="0.0783%" height="15" fill="rgb(252,177,53)" fg:x="111074" fg:w="94"/><text x="92.7662%" y="1007.50"></text></g><g><title>read (29 samples, 0.02%)</title><rect x="92.5703%" y="981" width="0.0242%" height="15" fill="rgb(237,209,29)" fg:x="111139" fg:w="29"/><text x="92.8203%" y="991.50"></text></g><g><title>llhttp__after_headers_complete (23 samples, 0.02%)</title><rect x="92.9918%" y="885" width="0.0192%" height="15" fill="rgb(212,65,23)" fg:x="111645" fg:w="23"/><text x="93.2418%" y="895.50"></text></g><g><title>llhttp__on_header_field (32 samples, 0.03%)</title><rect x="93.0209%" y="885" width="0.0267%" height="15" fill="rgb(230,222,46)" fg:x="111680" fg:w="32"/><text x="93.2709%" y="895.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &amp;node::(anonymous namespace)::Parser::on_header_field&gt;::Raw (27 samples, 0.02%)</title><rect x="93.0251%" y="869" width="0.0225%" height="15" fill="rgb(215,135,32)" fg:x="111685" fg:w="27"/><text x="93.2751%" y="879.50"></text></g><g><title>llhttp__on_header_value (35 samples, 0.03%)</title><rect x="93.0542%" y="885" width="0.0292%" height="15" fill="rgb(246,101,22)" fg:x="111720" fg:w="35"/><text x="93.3042%" y="895.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &amp;node::(anonymous namespace)::Parser::on_header_value&gt;::Raw (32 samples, 0.03%)</title><rect x="93.0567%" y="869" width="0.0267%" height="15" fill="rgb(206,107,13)" fg:x="111723" fg:w="32"/><text x="93.3067%" y="879.50"></text></g><g><title>llhttp__on_message_begin (23 samples, 0.02%)</title><rect x="93.0934%" y="885" width="0.0192%" height="15" fill="rgb(250,100,44)" fg:x="111767" fg:w="23"/><text x="93.3434%" y="895.50"></text></g><g><title>llhttp__on_message_complete (14 samples, 0.01%)</title><rect x="93.1126%" y="885" width="0.0117%" height="15" fill="rgb(231,147,38)" fg:x="111790" fg:w="14"/><text x="93.3626%" y="895.50"></text></g><g><title>llhttp__on_url (14 samples, 0.01%)</title><rect x="93.1392%" y="885" width="0.0117%" height="15" fill="rgb(229,8,40)" fg:x="111822" fg:w="14"/><text x="93.3892%" y="895.50"></text></g><g><title>node::AsyncHooks::push_async_context (28 samples, 0.02%)</title><rect x="93.2850%" y="837" width="0.0233%" height="15" fill="rgb(221,135,30)" fg:x="111997" fg:w="28"/><text x="93.5350%" y="847.50"></text></g><g><title>std::vector&lt;v8::Local&lt;v8::Object&gt;, std::allocator&lt;v8::Local&lt;v8::Object&gt; &gt; &gt;::_M_default_append (13 samples, 0.01%)</title><rect x="93.2975%" y="821" width="0.0108%" height="15" fill="rgb(249,193,18)" fg:x="112012" fg:w="13"/><text x="93.5475%" y="831.50"></text></g><g><title>node::InternalCallbackScope::InternalCallbackScope (61 samples, 0.05%)</title><rect x="93.2700%" y="853" width="0.0508%" height="15" fill="rgb(209,133,39)" fg:x="111979" fg:w="61"/><text x="93.5200%" y="863.50"></text></g><g><title>node::AsyncHooks::pop_async_context (37 samples, 0.03%)</title><rect x="93.3383%" y="821" width="0.0308%" height="15" fill="rgb(232,100,14)" fg:x="112061" fg:w="37"/><text x="93.5883%" y="831.50"></text></g><g><title>v8::Array::Length (19 samples, 0.02%)</title><rect x="93.3533%" y="805" width="0.0158%" height="15" fill="rgb(224,185,1)" fg:x="112079" fg:w="19"/><text x="93.6033%" y="815.50"></text></g><g><title>node::AsyncWrap::EmitAfter (47 samples, 0.04%)</title><rect x="93.3691%" y="821" width="0.0391%" height="15" fill="rgb(223,139,8)" fg:x="112098" fg:w="47"/><text x="93.6191%" y="831.50"></text></g><g><title>node::PrincipalRealm::async_hooks_after_function (20 samples, 0.02%)</title><rect x="93.3916%" y="805" width="0.0167%" height="15" fill="rgb(232,213,38)" fg:x="112125" fg:w="20"/><text x="93.6416%" y="815.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (113 samples, 0.09%)</title><rect x="93.3208%" y="853" width="0.0941%" height="15" fill="rgb(207,94,22)" fg:x="112040" fg:w="113"/><text x="93.5708%" y="863.50"></text></g><g><title>node::InternalCallbackScope::Close (109 samples, 0.09%)</title><rect x="93.3241%" y="837" width="0.0908%" height="15" fill="rgb(219,183,54)" fg:x="112044" fg:w="109"/><text x="93.5741%" y="847.50"></text></g><g><title>v8::internal::Factory::AllocateRawWithAllocationSite (26 samples, 0.02%)</title><rect x="93.4615%" y="805" width="0.0217%" height="15" fill="rgb(216,185,54)" fg:x="112209" fg:w="26"/><text x="93.7115%" y="815.50"></text></g><g><title>v8::internal::Factory::InitializeJSObjectBody (20 samples, 0.02%)</title><rect x="93.4832%" y="805" width="0.0167%" height="15" fill="rgb(254,217,39)" fg:x="112235" fg:w="20"/><text x="93.7332%" y="815.50"></text></g><g><title>v8::internal::Factory::NewJSArrayWithElements (108 samples, 0.09%)</title><rect x="93.4291%" y="837" width="0.0900%" height="15" fill="rgb(240,178,23)" fg:x="112170" fg:w="108"/><text x="93.6791%" y="847.50"></text></g><g><title>v8::internal::Factory::NewJSArrayWithUnverifiedElements (92 samples, 0.08%)</title><rect x="93.4424%" y="821" width="0.0766%" height="15" fill="rgb(218,11,47)" fg:x="112186" fg:w="92"/><text x="93.6924%" y="831.50"></text></g><g><title>v8::internal::Factory::InitializeJSObjectFromMap (23 samples, 0.02%)</title><rect x="93.4999%" y="805" width="0.0192%" height="15" fill="rgb(218,51,51)" fg:x="112255" fg:w="23"/><text x="93.7499%" y="815.50"></text></g><g><title>v8::Array::New (152 samples, 0.13%)</title><rect x="93.4182%" y="853" width="0.1266%" height="15" fill="rgb(238,126,27)" fg:x="112157" fg:w="152"/><text x="93.6682%" y="863.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (31 samples, 0.03%)</title><rect x="93.5190%" y="837" width="0.0258%" height="15" fill="rgb(249,202,22)" fg:x="112278" fg:w="31"/><text x="93.7690%" y="847.50"></text></g><g><title>v8::CallDepthScope&lt;true&gt;::CallDepthScope (15 samples, 0.01%)</title><rect x="93.6015%" y="837" width="0.0125%" height="15" fill="rgb(254,195,49)" fg:x="112377" fg:w="15"/><text x="93.8515%" y="847.50"></text></g><g><title>Builtins_CallFunction_ReceiverIsAny (16 samples, 0.01%)</title><rect x="93.6814%" y="789" width="0.0133%" height="15" fill="rgb(208,123,14)" fg:x="112473" fg:w="16"/><text x="93.9314%" y="799.50"></text></g><g><title>Builtins_JSEntry (48 samples, 0.04%)</title><rect x="93.6706%" y="805" width="0.0400%" height="15" fill="rgb(224,200,8)" fg:x="112460" fg:w="48"/><text x="93.9206%" y="815.50"></text></g><g><title>v8::internal::Execution::Call (143 samples, 0.12%)</title><rect x="93.6215%" y="837" width="0.1191%" height="15" fill="rgb(217,61,36)" fg:x="112401" fg:w="143"/><text x="93.8715%" y="847.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (128 samples, 0.11%)</title><rect x="93.6340%" y="821" width="0.1066%" height="15" fill="rgb(206,35,45)" fg:x="112416" fg:w="128"/><text x="93.8840%" y="831.50"></text></g><g><title>v8::internal::SaveContext::~SaveContext (25 samples, 0.02%)</title><rect x="93.7198%" y="805" width="0.0208%" height="15" fill="rgb(217,65,33)" fg:x="112519" fg:w="25"/><text x="93.9698%" y="815.50"></text></g><g><title>v8::Function::Call (246 samples, 0.20%)</title><rect x="93.5457%" y="853" width="0.2049%" height="15" fill="rgb(222,158,48)" fg:x="112310" fg:w="246"/><text x="93.7957%" y="863.50"></text></g><g><title>v8::Object::Get (43 samples, 0.04%)</title><rect x="93.7556%" y="853" width="0.0358%" height="15" fill="rgb(254,2,54)" fg:x="112562" fg:w="43"/><text x="94.0056%" y="863.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;true&gt; (13 samples, 0.01%)</title><rect x="93.7806%" y="837" width="0.0108%" height="15" fill="rgb(250,143,38)" fg:x="112592" fg:w="13"/><text x="94.0306%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.01%)</title><rect x="93.8064%" y="821" width="0.0142%" height="15" fill="rgb(248,25,0)" fg:x="112623" fg:w="17"/><text x="94.0564%" y="831.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::LookupSingleCharacterStringFromCode (25 samples, 0.02%)</title><rect x="93.8230%" y="821" width="0.0208%" height="15" fill="rgb(206,152,27)" fg:x="112643" fg:w="25"/><text x="94.0730%" y="831.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (37 samples, 0.03%)</title><rect x="93.8505%" y="789" width="0.0308%" height="15" fill="rgb(240,77,30)" fg:x="112676" fg:w="37"/><text x="94.1005%" y="799.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (39 samples, 0.03%)</title><rect x="93.8497%" y="805" width="0.0325%" height="15" fill="rgb(231,5,3)" fg:x="112675" fg:w="39"/><text x="94.0997%" y="815.50"></text></g><g><title>v8::String::NewFromOneByte (113 samples, 0.09%)</title><rect x="93.7914%" y="853" width="0.0941%" height="15" fill="rgb(207,226,32)" fg:x="112605" fg:w="113"/><text x="94.0414%" y="863.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewStringFromOneByte (105 samples, 0.09%)</title><rect x="93.7980%" y="837" width="0.0875%" height="15" fill="rgb(222,207,47)" fg:x="112613" fg:w="105"/><text x="94.0480%" y="847.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (50 samples, 0.04%)</title><rect x="93.8439%" y="821" width="0.0416%" height="15" fill="rgb(229,115,45)" fg:x="112668" fg:w="50"/><text x="94.0939%" y="831.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(), &amp;node::(anonymous namespace)::Parser::on_headers_complete&gt;::Raw (891 samples, 0.74%)</title><rect x="93.1609%" y="885" width="0.7421%" height="15" fill="rgb(224,191,6)" fg:x="111848" fg:w="891"/><text x="93.4109%" y="895.50"></text></g><g><title>node::(anonymous namespace)::Parser::on_headers_complete (861 samples, 0.72%)</title><rect x="93.1859%" y="869" width="0.7171%" height="15" fill="rgb(230,227,24)" fg:x="111878" fg:w="861"/><text x="93.4359%" y="879.50"></text></g><g><title>v8::Value::IsFunction (18 samples, 0.01%)</title><rect x="93.8880%" y="853" width="0.0150%" height="15" fill="rgb(228,80,19)" fg:x="112721" fg:w="18"/><text x="94.1380%" y="863.50"></text></g><g><title>cfree@GLIBC_2.2.5 (17 samples, 0.01%)</title><rect x="93.9238%" y="869" width="0.0142%" height="15" fill="rgb(247,229,0)" fg:x="112764" fg:w="17"/><text x="94.1738%" y="879.50"></text></g><g><title>cfree@GLIBC_2.2.5 (23 samples, 0.02%)</title><rect x="94.0054%" y="853" width="0.0192%" height="15" fill="rgb(237,194,15)" fg:x="112862" fg:w="23"/><text x="94.2554%" y="863.50"></text></g><g><title>operator delete (25 samples, 0.02%)</title><rect x="94.0263%" y="853" width="0.0208%" height="15" fill="rgb(219,203,20)" fg:x="112887" fg:w="25"/><text x="94.2763%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;node::(anonymous namespace)::Parser*, node::(anonymous namespace)::Parser*, std::_Identity&lt;node::(anonymous namespace)::Parser*&gt;, node::(anonymous namespace)::ParserComparator, std::allocator&lt;node::(anonymous namespace)::Parser*&gt; &gt;::erase (182 samples, 0.15%)</title><rect x="93.9463%" y="869" width="0.1516%" height="15" fill="rgb(234,128,8)" fg:x="112791" fg:w="182"/><text x="94.1963%" y="879.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (49 samples, 0.04%)</title><rect x="94.0571%" y="853" width="0.0408%" height="15" fill="rgb(248,202,8)" fg:x="112924" fg:w="49"/><text x="94.3071%" y="863.50"></text></g><g><title>malloc (22 samples, 0.02%)</title><rect x="94.1287%" y="837" width="0.0183%" height="15" fill="rgb(206,104,37)" fg:x="113010" fg:w="22"/><text x="94.3787%" y="847.50"></text></g><g><title>operator new (45 samples, 0.04%)</title><rect x="94.1187%" y="853" width="0.0375%" height="15" fill="rgb(223,8,27)" fg:x="112998" fg:w="45"/><text x="94.3687%" y="863.50"></text></g><g><title>std::pair&lt;std::_Rb_tree_iterator&lt;node::(anonymous namespace)::Parser*&gt;, bool&gt; std::_Rb_tree&lt;node::(anonymous namespace)::Parser*, node::(anonymous namespace)::Parser*, std::_Identity&lt;node::(anonymous namespace)::Parser*&gt;, node::(anonymous namespace)::ParserComparator, std::allocator&lt;node::(anonymous namespace)::Parser*&gt; &gt;::_M_insert_unique&lt;node::(anonymous namespace)::Parser* const&amp;&gt; (93 samples, 0.08%)</title><rect x="94.0979%" y="869" width="0.0775%" height="15" fill="rgb(216,217,28)" fg:x="112973" fg:w="93"/><text x="94.3479%" y="879.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (23 samples, 0.02%)</title><rect x="94.1562%" y="853" width="0.0192%" height="15" fill="rgb(249,199,1)" fg:x="113043" fg:w="23"/><text x="94.4062%" y="863.50"></text></g><g><title>[[vdso]] (20 samples, 0.02%)</title><rect x="94.1862%" y="837" width="0.0167%" height="15" fill="rgb(240,85,17)" fg:x="113079" fg:w="20"/><text x="94.4362%" y="847.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (37 samples, 0.03%)</title><rect x="94.1770%" y="853" width="0.0308%" height="15" fill="rgb(206,108,45)" fg:x="113068" fg:w="37"/><text x="94.4270%" y="863.50"></text></g><g><title>uv__hrtime (43 samples, 0.04%)</title><rect x="94.1754%" y="869" width="0.0358%" height="15" fill="rgb(245,210,41)" fg:x="113066" fg:w="43"/><text x="94.4254%" y="879.50"></text></g><g><title>v8::Object::Get (118 samples, 0.10%)</title><rect x="94.2145%" y="869" width="0.0983%" height="15" fill="rgb(206,13,37)" fg:x="113113" fg:w="118"/><text x="94.4645%" y="879.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;true&gt; (80 samples, 0.07%)</title><rect x="94.2462%" y="853" width="0.0666%" height="15" fill="rgb(250,61,18)" fg:x="113151" fg:w="80"/><text x="94.4962%" y="863.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (48 samples, 0.04%)</title><rect x="94.2728%" y="837" width="0.0400%" height="15" fill="rgb(235,172,48)" fg:x="113183" fg:w="48"/><text x="94.5228%" y="847.50"></text></g><g><title>v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyNonextensibleObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)7&gt; &gt;::GetEntryForIndex (25 samples, 0.02%)</title><rect x="94.2920%" y="821" width="0.0208%" height="15" fill="rgb(249,201,17)" fg:x="113206" fg:w="25"/><text x="94.5420%" y="831.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(), &amp;node::(anonymous namespace)::Parser::on_message_begin&gt;::Raw (505 samples, 0.42%)</title><rect x="93.9030%" y="885" width="0.4206%" height="15" fill="rgb(219,208,6)" fg:x="112739" fg:w="505"/><text x="94.1530%" y="895.50"></text></g><g><title>v8::Value::IsFunction (13 samples, 0.01%)</title><rect x="94.3128%" y="869" width="0.0108%" height="15" fill="rgb(248,31,23)" fg:x="113231" fg:w="13"/><text x="94.5628%" y="879.50"></text></g><g><title>__memset_avx2_unaligned_erms (25 samples, 0.02%)</title><rect x="94.3886%" y="821" width="0.0208%" height="15" fill="rgb(245,15,42)" fg:x="113322" fg:w="25"/><text x="94.6386%" y="831.50"></text></g><g><title>node::AsyncHooks::push_async_context (68 samples, 0.06%)</title><rect x="94.3644%" y="853" width="0.0566%" height="15" fill="rgb(222,217,39)" fg:x="113293" fg:w="68"/><text x="94.6144%" y="863.50"></text></g><g><title>std::vector&lt;v8::Local&lt;v8::Object&gt;, std::allocator&lt;v8::Local&lt;v8::Object&gt; &gt; &gt;::_M_default_append (50 samples, 0.04%)</title><rect x="94.3794%" y="837" width="0.0416%" height="15" fill="rgb(210,219,27)" fg:x="113311" fg:w="50"/><text x="94.6294%" y="847.50"></text></g><g><title>memset@plt (14 samples, 0.01%)</title><rect x="94.4094%" y="821" width="0.0117%" height="15" fill="rgb(252,166,36)" fg:x="113347" fg:w="14"/><text x="94.6594%" y="831.50"></text></g><g><title>node::InternalCallbackScope::InternalCallbackScope (114 samples, 0.09%)</title><rect x="94.3469%" y="869" width="0.0950%" height="15" fill="rgb(245,132,34)" fg:x="113272" fg:w="114"/><text x="94.5969%" y="879.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (19 samples, 0.02%)</title><rect x="94.4419%" y="869" width="0.0158%" height="15" fill="rgb(236,54,3)" fg:x="113386" fg:w="19"/><text x="94.6919%" y="879.50"></text></g><g><title>node::InternalCallbackScope::Close (18 samples, 0.01%)</title><rect x="94.4427%" y="853" width="0.0150%" height="15" fill="rgb(241,173,43)" fg:x="113387" fg:w="18"/><text x="94.6927%" y="863.50"></text></g><g><title>operator delete (29 samples, 0.02%)</title><rect x="94.5385%" y="853" width="0.0242%" height="15" fill="rgb(215,190,9)" fg:x="113502" fg:w="29"/><text x="94.7885%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;node::(anonymous namespace)::Parser*, node::(anonymous namespace)::Parser*, std::_Identity&lt;node::(anonymous namespace)::Parser*&gt;, node::(anonymous namespace)::ParserComparator, std::allocator&lt;node::(anonymous namespace)::Parser*&gt; &gt;::_M_erase (19 samples, 0.02%)</title><rect x="94.5627%" y="853" width="0.0158%" height="15" fill="rgb(242,101,16)" fg:x="113531" fg:w="19"/><text x="94.8127%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;node::(anonymous namespace)::Parser*, node::(anonymous namespace)::Parser*, std::_Identity&lt;node::(anonymous namespace)::Parser*&gt;, node::(anonymous namespace)::ParserComparator, std::allocator&lt;node::(anonymous namespace)::Parser*&gt; &gt;::erase (177 samples, 0.15%)</title><rect x="94.4611%" y="869" width="0.1474%" height="15" fill="rgb(223,190,21)" fg:x="113409" fg:w="177"/><text x="94.7111%" y="879.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (26 samples, 0.02%)</title><rect x="94.5868%" y="853" width="0.0217%" height="15" fill="rgb(215,228,25)" fg:x="113560" fg:w="26"/><text x="94.8368%" y="863.50"></text></g><g><title>operator new (40 samples, 0.03%)</title><rect x="94.6501%" y="853" width="0.0333%" height="15" fill="rgb(225,36,22)" fg:x="113636" fg:w="40"/><text x="94.9001%" y="863.50"></text></g><g><title>std::_Rb_tree_decrement (14 samples, 0.01%)</title><rect x="94.6834%" y="853" width="0.0117%" height="15" fill="rgb(251,106,46)" fg:x="113676" fg:w="14"/><text x="94.9334%" y="863.50"></text></g><g><title>std::pair&lt;std::_Rb_tree_iterator&lt;node::(anonymous namespace)::Parser*&gt;, bool&gt; std::_Rb_tree&lt;node::(anonymous namespace)::Parser*, node::(anonymous namespace)::Parser*, std::_Identity&lt;node::(anonymous namespace)::Parser*&gt;, node::(anonymous namespace)::ParserComparator, std::allocator&lt;node::(anonymous namespace)::Parser*&gt; &gt;::_M_insert_unique&lt;node::(anonymous namespace)::Parser* const&amp;&gt; (131 samples, 0.11%)</title><rect x="94.6085%" y="869" width="0.1091%" height="15" fill="rgb(208,90,1)" fg:x="113586" fg:w="131"/><text x="94.8585%" y="879.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (27 samples, 0.02%)</title><rect x="94.6951%" y="853" width="0.0225%" height="15" fill="rgb(243,10,4)" fg:x="113690" fg:w="27"/><text x="94.9451%" y="863.50"></text></g><g><title>v8::CallDepthScope&lt;true&gt;::CallDepthScope (18 samples, 0.01%)</title><rect x="94.7318%" y="853" width="0.0150%" height="15" fill="rgb(212,137,27)" fg:x="113734" fg:w="18"/><text x="94.9818%" y="863.50"></text></g><g><title>Builtins_CallFunction_ReceiverIsAny (29 samples, 0.02%)</title><rect x="94.8309%" y="805" width="0.0242%" height="15" fill="rgb(231,220,49)" fg:x="113853" fg:w="29"/><text x="95.0809%" y="815.50"></text></g><g><title>Builtins_JSEntry (48 samples, 0.04%)</title><rect x="94.8300%" y="821" width="0.0400%" height="15" fill="rgb(237,96,20)" fg:x="113852" fg:w="48"/><text x="95.0800%" y="831.50"></text></g><g><title>v8::internal::Execution::Call (168 samples, 0.14%)</title><rect x="94.7542%" y="853" width="0.1399%" height="15" fill="rgb(239,229,30)" fg:x="113761" fg:w="168"/><text x="95.0042%" y="863.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (160 samples, 0.13%)</title><rect x="94.7609%" y="837" width="0.1333%" height="15" fill="rgb(219,65,33)" fg:x="113769" fg:w="160"/><text x="95.0109%" y="847.50"></text></g><g><title>v8::Function::Call (217 samples, 0.18%)</title><rect x="94.7184%" y="869" width="0.1807%" height="15" fill="rgb(243,134,7)" fg:x="113718" fg:w="217"/><text x="94.9684%" y="879.50"></text></g><g><title>v8::HandleScope::HandleScope (25 samples, 0.02%)</title><rect x="94.8992%" y="869" width="0.0208%" height="15" fill="rgb(216,177,54)" fg:x="113935" fg:w="25"/><text x="95.1492%" y="879.50"></text></g><g><title>v8::internal::Object::GetProperty (18 samples, 0.01%)</title><rect x="94.9516%" y="853" width="0.0150%" height="15" fill="rgb(211,160,20)" fg:x="113998" fg:w="18"/><text x="95.2016%" y="863.50"></text></g><g><title>v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyNonextensibleObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)7&gt; &gt;::GetEntryForIndex (13 samples, 0.01%)</title><rect x="95.0025%" y="821" width="0.0108%" height="15" fill="rgb(239,85,39)" fg:x="114059" fg:w="13"/><text x="95.2525%" y="831.50"></text></g><g><title>v8::Object::Get (113 samples, 0.09%)</title><rect x="94.9208%" y="869" width="0.0941%" height="15" fill="rgb(232,125,22)" fg:x="113961" fg:w="113"/><text x="95.1708%" y="879.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;true&gt; (58 samples, 0.05%)</title><rect x="94.9666%" y="853" width="0.0483%" height="15" fill="rgb(244,57,34)" fg:x="114016" fg:w="58"/><text x="95.2166%" y="863.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (26 samples, 0.02%)</title><rect x="94.9933%" y="837" width="0.0217%" height="15" fill="rgb(214,203,32)" fg:x="114048" fg:w="26"/><text x="95.2433%" y="847.50"></text></g><g><title>v8::Value::IsFunction (24 samples, 0.02%)</title><rect x="95.0150%" y="869" width="0.0200%" height="15" fill="rgb(207,58,43)" fg:x="114074" fg:w="24"/><text x="95.2650%" y="879.50"></text></g><g><title>node::(anonymous namespace)::Parser::Proxy&lt;int (node::(anonymous namespace)::Parser::*)(), &amp;node::(anonymous namespace)::Parser::on_message_complete&gt;::Raw (855 samples, 0.71%)</title><rect x="94.3236%" y="885" width="0.7121%" height="15" fill="rgb(215,193,15)" fg:x="113244" fg:w="855"/><text x="94.5736%" y="895.50"></text></g><g><title>llhttp__internal_execute (2,836 samples, 2.36%)</title><rect x="92.6744%" y="901" width="2.3622%" height="15" fill="rgb(232,15,44)" fg:x="111264" fg:w="2836"/><text x="92.9244%" y="911.50">ll..</text></g><g><title>malloc (15 samples, 0.01%)</title><rect x="95.0674%" y="885" width="0.0125%" height="15" fill="rgb(212,3,48)" fg:x="114137" fg:w="15"/><text x="95.3174%" y="895.50"></text></g><g><title>operator new (46 samples, 0.04%)</title><rect x="95.0424%" y="901" width="0.0383%" height="15" fill="rgb(218,128,7)" fg:x="114107" fg:w="46"/><text x="95.2924%" y="911.50"></text></g><g><title>operator new[] (38 samples, 0.03%)</title><rect x="95.0808%" y="901" width="0.0317%" height="15" fill="rgb(226,216,39)" fg:x="114153" fg:w="38"/><text x="95.3308%" y="911.50"></text></g><g><title>v8::EscapableHandleScope::EscapableHandleScope (18 samples, 0.01%)</title><rect x="95.1124%" y="901" width="0.0150%" height="15" fill="rgb(243,47,51)" fg:x="114191" fg:w="18"/><text x="95.3624%" y="911.50"></text></g><g><title>node::(anonymous namespace)::Parser::Execute (3,002 samples, 2.50%)</title><rect x="92.6403%" y="917" width="2.5004%" height="15" fill="rgb(241,183,40)" fg:x="111223" fg:w="3002"/><text x="92.8903%" y="927.50">no..</text></g><g><title>node::AsyncWrap::EmitTraceEventAfter (30 samples, 0.02%)</title><rect x="95.1499%" y="901" width="0.0250%" height="15" fill="rgb(231,217,32)" fg:x="114236" fg:w="30"/><text x="95.3999%" y="911.50"></text></g><g><title>node::AsyncWrap::EmitTraceEventBefore (45 samples, 0.04%)</title><rect x="95.1749%" y="901" width="0.0375%" height="15" fill="rgb(229,61,38)" fg:x="114266" fg:w="45"/><text x="95.4249%" y="911.50"></text></g><g><title>node::PrincipalRealm::process_object (15 samples, 0.01%)</title><rect x="95.2723%" y="869" width="0.0125%" height="15" fill="rgb(225,210,5)" fg:x="114383" fg:w="15"/><text x="95.5223%" y="879.50"></text></g><g><title>v8::internal::Execution::Call (81 samples, 0.07%)</title><rect x="95.3098%" y="853" width="0.0675%" height="15" fill="rgb(231,79,45)" fg:x="114428" fg:w="81"/><text x="95.5598%" y="863.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (67 samples, 0.06%)</title><rect x="95.3215%" y="837" width="0.0558%" height="15" fill="rgb(224,100,7)" fg:x="114442" fg:w="67"/><text x="95.5715%" y="847.50"></text></g><g><title>v8::Function::Call (112 samples, 0.09%)</title><rect x="95.2857%" y="869" width="0.0933%" height="15" fill="rgb(241,198,18)" fg:x="114399" fg:w="112"/><text x="95.5357%" y="879.50"></text></g><g><title>node::InternalCallbackScope::Close (174 samples, 0.14%)</title><rect x="95.2382%" y="885" width="0.1449%" height="15" fill="rgb(252,97,53)" fg:x="114342" fg:w="174"/><text x="95.4882%" y="895.50"></text></g><g><title>node::AsyncHooks::push_async_context (18 samples, 0.01%)</title><rect x="95.3906%" y="869" width="0.0150%" height="15" fill="rgb(220,88,7)" fg:x="114525" fg:w="18"/><text x="95.6406%" y="879.50"></text></g><g><title>node::InternalCallbackScope::InternalCallbackScope (42 samples, 0.03%)</title><rect x="95.3831%" y="885" width="0.0350%" height="15" fill="rgb(213,176,14)" fg:x="114516" fg:w="42"/><text x="95.6331%" y="895.50"></text></g><g><title>Builtins_CallBoundFunction (16 samples, 0.01%)</title><rect x="95.4664%" y="821" width="0.0133%" height="15" fill="rgb(246,73,7)" fg:x="114616" fg:w="16"/><text x="95.7164%" y="831.50"></text></g><g><title>Builtins_CallFunction_ReceiverIsAny (18 samples, 0.01%)</title><rect x="95.4797%" y="821" width="0.0150%" height="15" fill="rgb(245,64,36)" fg:x="114632" fg:w="18"/><text x="95.7297%" y="831.50"></text></g><g><title>Builtins_Call_ReceiverIsAny (16 samples, 0.01%)</title><rect x="95.4947%" y="821" width="0.0133%" height="15" fill="rgb(245,80,10)" fg:x="114650" fg:w="16"/><text x="95.7447%" y="831.50"></text></g><g><title>Builtins_JSEntry (58 samples, 0.05%)</title><rect x="95.4614%" y="837" width="0.0483%" height="15" fill="rgb(232,107,50)" fg:x="114610" fg:w="58"/><text x="95.7114%" y="847.50"></text></g><g><title>v8::internal::Execution::Call (87 samples, 0.07%)</title><rect x="95.4397%" y="869" width="0.0725%" height="15" fill="rgb(253,3,0)" fg:x="114584" fg:w="87"/><text x="95.6897%" y="879.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (83 samples, 0.07%)</title><rect x="95.4431%" y="853" width="0.0691%" height="15" fill="rgb(212,99,53)" fg:x="114588" fg:w="83"/><text x="95.6931%" y="863.50"></text></g><g><title>node::AsyncWrap::MakeCallback (448 samples, 0.37%)</title><rect x="95.1407%" y="917" width="0.3731%" height="15" fill="rgb(249,111,54)" fg:x="114225" fg:w="448"/><text x="95.3907%" y="927.50"></text></g><g><title>node::InternalMakeCallback (362 samples, 0.30%)</title><rect x="95.2124%" y="901" width="0.3015%" height="15" fill="rgb(249,55,30)" fg:x="114311" fg:w="362"/><text x="95.4624%" y="911.50"></text></g><g><title>v8::Function::Call (109 samples, 0.09%)</title><rect x="95.4231%" y="885" width="0.0908%" height="15" fill="rgb(237,47,42)" fg:x="114564" fg:w="109"/><text x="95.6731%" y="895.50"></text></g><g><title>v8::Object::Get (43 samples, 0.04%)</title><rect x="95.5214%" y="917" width="0.0358%" height="15" fill="rgb(211,20,18)" fg:x="114682" fg:w="43"/><text x="95.7714%" y="927.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;true&gt; (23 samples, 0.02%)</title><rect x="95.5380%" y="901" width="0.0192%" height="15" fill="rgb(231,203,46)" fg:x="114702" fg:w="23"/><text x="95.7880%" y="911.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (15 samples, 0.01%)</title><rect x="95.5447%" y="885" width="0.0125%" height="15" fill="rgb(237,142,3)" fg:x="114710" fg:w="15"/><text x="95.7947%" y="895.50"></text></g><g><title>non-virtual thunk to node::(anonymous namespace)::Parser::OnStreamRead (3,572 samples, 2.98%)</title><rect x="92.6061%" y="933" width="2.9752%" height="15" fill="rgb(241,107,1)" fg:x="111182" fg:w="3572"/><text x="92.8561%" y="943.50">non..</text></g><g><title>v8::internal::HandleScope::DeleteExtensions (23 samples, 0.02%)</title><rect x="95.5622%" y="917" width="0.0192%" height="15" fill="rgb(229,83,13)" fg:x="114731" fg:w="23"/><text x="95.8122%" y="927.50"></text></g><g><title>v8::Context::Enter (18 samples, 0.01%)</title><rect x="95.5813%" y="933" width="0.0150%" height="15" fill="rgb(241,91,40)" fg:x="114754" fg:w="18"/><text x="95.8313%" y="943.50"></text></g><g><title>v8::Context::Exit (24 samples, 0.02%)</title><rect x="95.5963%" y="933" width="0.0200%" height="15" fill="rgb(225,3,45)" fg:x="114772" fg:w="24"/><text x="95.8463%" y="943.50"></text></g><g><title>node::LibuvStreamWrap::OnUvRead (3,635 samples, 3.03%)</title><rect x="92.5945%" y="949" width="3.0277%" height="15" fill="rgb(244,223,14)" fg:x="111168" fg:w="3635"/><text x="92.8445%" y="959.50">nod..</text></g><g><title>node::errors::TryCatchScope::~TryCatchScope (20 samples, 0.02%)</title><rect x="95.6222%" y="949" width="0.0167%" height="15" fill="rgb(224,124,37)" fg:x="114803" fg:w="20"/><text x="95.8722%" y="959.50"></text></g><g><title>v8::TryCatch::HasCaught (16 samples, 0.01%)</title><rect x="95.6255%" y="933" width="0.0133%" height="15" fill="rgb(251,171,30)" fg:x="114807" fg:w="16"/><text x="95.8755%" y="943.50"></text></g><g><title>v8::Context::Enter (13 samples, 0.01%)</title><rect x="95.6388%" y="949" width="0.0108%" height="15" fill="rgb(236,46,54)" fg:x="114823" fg:w="13"/><text x="95.8888%" y="959.50"></text></g><g><title>uv__io_poll (3,783 samples, 3.15%)</title><rect x="92.5087%" y="1013" width="3.1510%" height="15" fill="rgb(245,213,5)" fg:x="111065" fg:w="3783"/><text x="92.7587%" y="1023.50">uv_..</text></g><g><title>uv__stream_io (3,680 samples, 3.07%)</title><rect x="92.5945%" y="997" width="3.0652%" height="15" fill="rgb(230,144,27)" fg:x="111168" fg:w="3680"/><text x="92.8445%" y="1007.50">uv_..</text></g><g><title>uv__read (3,680 samples, 3.07%)</title><rect x="92.5945%" y="981" width="3.0652%" height="15" fill="rgb(220,86,6)" fg:x="111168" fg:w="3680"/><text x="92.8445%" y="991.50">uv_..</text></g><g><title>node::LibuvStreamWrap::ReadStart (3,680 samples, 3.07%)</title><rect x="92.5945%" y="965" width="3.0652%" height="15" fill="rgb(240,20,13)" fg:x="111168" fg:w="3680"/><text x="92.8445%" y="975.50">nod..</text></g><g><title>v8::TryCatch::SetVerbose (13 samples, 0.01%)</title><rect x="95.7354%" y="933" width="0.0108%" height="15" fill="rgb(217,89,34)" fg:x="114939" fg:w="13"/><text x="95.9854%" y="943.50"></text></g><g><title>node::LibuvStreamWrap::ReadStart (117 samples, 0.10%)</title><rect x="95.6605%" y="949" width="0.0975%" height="15" fill="rgb(229,13,5)" fg:x="114849" fg:w="117"/><text x="95.9105%" y="959.50"></text></g><g><title>v8::internal::Isolate::UnregisterTryCatchHandler (13 samples, 0.01%)</title><rect x="95.7471%" y="933" width="0.0108%" height="15" fill="rgb(244,67,35)" fg:x="114953" fg:w="13"/><text x="95.9971%" y="943.50"></text></g><g><title>__GI___pthread_enable_asynccancel (16 samples, 0.01%)</title><rect x="95.7721%" y="933" width="0.0133%" height="15" fill="rgb(221,40,2)" fg:x="114983" fg:w="16"/><text x="96.0221%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (49 samples, 0.04%)</title><rect x="95.7887%" y="933" width="0.0408%" height="15" fill="rgb(237,157,21)" fg:x="115003" fg:w="49"/><text x="96.0387%" y="943.50"></text></g><g><title>__x64_sys_read (15 samples, 0.01%)</title><rect x="95.8695%" y="917" width="0.0125%" height="15" fill="rgb(222,94,11)" fg:x="115100" fg:w="15"/><text x="96.1195%" y="927.50"></text></g><g><title>__fget_light (57 samples, 0.05%)</title><rect x="95.9062%" y="853" width="0.0475%" height="15" fill="rgb(249,113,6)" fg:x="115144" fg:w="57"/><text x="96.1562%" y="863.50"></text></g><g><title>__fdget_pos (59 samples, 0.05%)</title><rect x="95.9062%" y="869" width="0.0491%" height="15" fill="rgb(238,137,36)" fg:x="115144" fg:w="59"/><text x="96.1562%" y="879.50"></text></g><g><title>apparmor_file_permission (60 samples, 0.05%)</title><rect x="96.0028%" y="821" width="0.0500%" height="15" fill="rgb(210,102,26)" fg:x="115260" fg:w="60"/><text x="96.2528%" y="831.50"></text></g><g><title>aa_file_perm (27 samples, 0.02%)</title><rect x="96.0303%" y="805" width="0.0225%" height="15" fill="rgb(218,30,30)" fg:x="115293" fg:w="27"/><text x="96.2803%" y="815.50"></text></g><g><title>rw_verify_area (103 samples, 0.09%)</title><rect x="95.9861%" y="853" width="0.0858%" height="15" fill="rgb(214,67,26)" fg:x="115240" fg:w="103"/><text x="96.2361%" y="863.50"></text></g><g><title>security_file_permission (93 samples, 0.08%)</title><rect x="95.9945%" y="837" width="0.0775%" height="15" fill="rgb(251,9,53)" fg:x="115250" fg:w="93"/><text x="96.2445%" y="847.50"></text></g><g><title>fsnotify_perm.part.0 (23 samples, 0.02%)</title><rect x="96.0528%" y="821" width="0.0192%" height="15" fill="rgb(228,204,25)" fg:x="115320" fg:w="23"/><text x="96.3028%" y="831.50"></text></g><g><title>apparmor_socket_recvmsg (44 samples, 0.04%)</title><rect x="96.0936%" y="821" width="0.0366%" height="15" fill="rgb(207,153,8)" fg:x="115369" fg:w="44"/><text x="96.3436%" y="831.50"></text></g><g><title>_raw_spin_lock_bh (20 samples, 0.02%)</title><rect x="96.1636%" y="789" width="0.0167%" height="15" fill="rgb(242,9,16)" fg:x="115453" fg:w="20"/><text x="96.4136%" y="799.50"></text></g><g><title>sock_rfree (15 samples, 0.01%)</title><rect x="96.1977%" y="789" width="0.0125%" height="15" fill="rgb(217,211,10)" fg:x="115494" fg:w="15"/><text x="96.4477%" y="799.50"></text></g><g><title>_raw_spin_lock_bh (19 samples, 0.02%)</title><rect x="96.3076%" y="773" width="0.0158%" height="15" fill="rgb(219,228,52)" fg:x="115626" fg:w="19"/><text x="96.5576%" y="783.50"></text></g><g><title>skb_attempt_defer_free (21 samples, 0.02%)</title><rect x="96.3243%" y="773" width="0.0175%" height="15" fill="rgb(231,92,29)" fg:x="115646" fg:w="21"/><text x="96.5743%" y="783.50"></text></g><g><title>__check_object_size.part.0 (64 samples, 0.05%)</title><rect x="96.3868%" y="709" width="0.0533%" height="15" fill="rgb(232,8,23)" fg:x="115721" fg:w="64"/><text x="96.6368%" y="719.50"></text></g><g><title>check_heap_object (57 samples, 0.05%)</title><rect x="96.3926%" y="693" width="0.0475%" height="15" fill="rgb(216,211,34)" fg:x="115728" fg:w="57"/><text x="96.6426%" y="703.50"></text></g><g><title>__virt_addr_valid (38 samples, 0.03%)</title><rect x="96.4084%" y="677" width="0.0317%" height="15" fill="rgb(236,151,0)" fg:x="115747" fg:w="38"/><text x="96.6584%" y="687.50"></text></g><g><title>__check_object_size (65 samples, 0.05%)</title><rect x="96.3868%" y="725" width="0.0541%" height="15" fill="rgb(209,168,3)" fg:x="115721" fg:w="65"/><text x="96.6368%" y="735.50"></text></g><g><title>_copy_to_iter (36 samples, 0.03%)</title><rect x="96.4409%" y="725" width="0.0300%" height="15" fill="rgb(208,129,28)" fg:x="115786" fg:w="36"/><text x="96.6909%" y="735.50"></text></g><g><title>rep_movs_alternative (28 samples, 0.02%)</title><rect x="96.4476%" y="709" width="0.0233%" height="15" fill="rgb(229,78,22)" fg:x="115794" fg:w="28"/><text x="96.6976%" y="719.50"></text></g><g><title>__skb_datagram_iter (163 samples, 0.14%)</title><rect x="96.3435%" y="757" width="0.1358%" height="15" fill="rgb(228,187,13)" fg:x="115669" fg:w="163"/><text x="96.5935%" y="767.50"></text></g><g><title>simple_copy_to_iter (115 samples, 0.10%)</title><rect x="96.3834%" y="741" width="0.0958%" height="15" fill="rgb(240,119,24)" fg:x="115717" fg:w="115"/><text x="96.6334%" y="751.50"></text></g><g><title>skb_copy_datagram_iter (166 samples, 0.14%)</title><rect x="96.3418%" y="773" width="0.1383%" height="15" fill="rgb(209,194,42)" fg:x="115667" fg:w="166"/><text x="96.5918%" y="783.50"></text></g><g><title>__mod_memcg_state (22 samples, 0.02%)</title><rect x="96.4992%" y="709" width="0.0183%" height="15" fill="rgb(247,200,46)" fg:x="115856" fg:w="22"/><text x="96.7492%" y="719.50"></text></g><g><title>cgroup_rstat_updated (16 samples, 0.01%)</title><rect x="96.5042%" y="693" width="0.0133%" height="15" fill="rgb(218,76,16)" fg:x="115862" fg:w="16"/><text x="96.7542%" y="703.50"></text></g><g><title>mod_memcg_state (33 samples, 0.03%)</title><rect x="96.4951%" y="725" width="0.0275%" height="15" fill="rgb(225,21,48)" fg:x="115851" fg:w="33"/><text x="96.7451%" y="735.50"></text></g><g><title>mem_cgroup_uncharge_skmem (50 samples, 0.04%)</title><rect x="96.4917%" y="741" width="0.0416%" height="15" fill="rgb(239,223,50)" fg:x="115847" fg:w="50"/><text x="96.7417%" y="751.50"></text></g><g><title>refill_stock (13 samples, 0.01%)</title><rect x="96.5225%" y="725" width="0.0108%" height="15" fill="rgb(244,45,21)" fg:x="115884" fg:w="13"/><text x="96.7725%" y="735.50"></text></g><g><title>sock_rfree (69 samples, 0.06%)</title><rect x="96.4801%" y="773" width="0.0575%" height="15" fill="rgb(232,33,43)" fg:x="115833" fg:w="69"/><text x="96.7301%" y="783.50"></text></g><g><title>__sk_mem_reduce_allocated (69 samples, 0.06%)</title><rect x="96.4801%" y="757" width="0.0575%" height="15" fill="rgb(209,8,3)" fg:x="115833" fg:w="69"/><text x="96.7301%" y="767.50"></text></g><g><title>__tcp_cleanup_rbuf (32 samples, 0.03%)</title><rect x="96.5417%" y="757" width="0.0267%" height="15" fill="rgb(214,25,53)" fg:x="115907" fg:w="32"/><text x="96.7917%" y="767.50"></text></g><g><title>tcp_cleanup_rbuf (39 samples, 0.03%)</title><rect x="96.5375%" y="773" width="0.0325%" height="15" fill="rgb(254,186,54)" fg:x="115902" fg:w="39"/><text x="96.7875%" y="783.50"></text></g><g><title>ktime_get (13 samples, 0.01%)</title><rect x="96.5942%" y="741" width="0.0108%" height="15" fill="rgb(208,174,49)" fg:x="115970" fg:w="13"/><text x="96.8442%" y="751.50"></text></g><g><title>tcp_recvmsg_locked (474 samples, 0.39%)</title><rect x="96.2202%" y="789" width="0.3948%" height="15" fill="rgb(233,191,51)" fg:x="115521" fg:w="474"/><text x="96.4702%" y="799.50"></text></g><g><title>tcp_rcv_space_adjust (45 samples, 0.04%)</title><rect x="96.5775%" y="773" width="0.0375%" height="15" fill="rgb(222,134,10)" fg:x="115950" fg:w="45"/><text x="96.8275%" y="783.50"></text></g><g><title>tcp_mstamp_refresh (26 samples, 0.02%)</title><rect x="96.5933%" y="757" width="0.0217%" height="15" fill="rgb(230,226,20)" fg:x="115969" fg:w="26"/><text x="96.8433%" y="767.50"></text></g><g><title>tcp_recvmsg (569 samples, 0.47%)</title><rect x="96.1444%" y="805" width="0.4739%" height="15" fill="rgb(251,111,25)" fg:x="115430" fg:w="569"/><text x="96.3944%" y="815.50"></text></g><g><title>inet6_recvmsg (590 samples, 0.49%)</title><rect x="96.1302%" y="821" width="0.4914%" height="15" fill="rgb(224,40,46)" fg:x="115413" fg:w="590"/><text x="96.3802%" y="831.50"></text></g><g><title>security_socket_recvmsg (45 samples, 0.04%)</title><rect x="96.6217%" y="821" width="0.0375%" height="15" fill="rgb(236,108,47)" fg:x="116003" fg:w="45"/><text x="96.8717%" y="831.50"></text></g><g><title>apparmor_socket_recvmsg (29 samples, 0.02%)</title><rect x="96.6350%" y="805" width="0.0242%" height="15" fill="rgb(234,93,0)" fg:x="116019" fg:w="29"/><text x="96.8850%" y="815.50"></text></g><g><title>aa_sk_perm (27 samples, 0.02%)</title><rect x="96.6367%" y="789" width="0.0225%" height="15" fill="rgb(224,213,32)" fg:x="116021" fg:w="27"/><text x="96.8867%" y="799.50"></text></g><g><title>sock_read_iter (707 samples, 0.59%)</title><rect x="96.0719%" y="853" width="0.5889%" height="15" fill="rgb(251,11,48)" fg:x="115343" fg:w="707"/><text x="96.3219%" y="863.50"></text></g><g><title>sock_recvmsg (686 samples, 0.57%)</title><rect x="96.0894%" y="837" width="0.5714%" height="15" fill="rgb(236,173,5)" fg:x="115364" fg:w="686"/><text x="96.3394%" y="847.50"></text></g><g><title>ksys_read (921 samples, 0.77%)</title><rect x="95.8970%" y="885" width="0.7671%" height="15" fill="rgb(230,95,12)" fg:x="115133" fg:w="921"/><text x="96.1470%" y="895.50"></text></g><g><title>vfs_read (839 samples, 0.70%)</title><rect x="95.9653%" y="869" width="0.6988%" height="15" fill="rgb(232,209,1)" fg:x="115215" fg:w="839"/><text x="96.2153%" y="879.50"></text></g><g><title>__x64_sys_read (927 samples, 0.77%)</title><rect x="95.8937%" y="901" width="0.7721%" height="15" fill="rgb(232,6,1)" fg:x="115129" fg:w="927"/><text x="96.1437%" y="911.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.01%)</title><rect x="96.7783%" y="885" width="0.0108%" height="15" fill="rgb(210,224,50)" fg:x="116191" fg:w="13"/><text x="97.0283%" y="895.50"></text></g><g><title>do_syscall_64 (1,090 samples, 0.91%)</title><rect x="95.8820%" y="917" width="0.9079%" height="15" fill="rgb(228,127,35)" fg:x="115115" fg:w="1090"/><text x="96.1320%" y="927.50"></text></g><g><title>syscall_exit_to_user_mode (137 samples, 0.11%)</title><rect x="96.6758%" y="901" width="0.1141%" height="15" fill="rgb(245,102,45)" fg:x="116068" fg:w="137"/><text x="96.9258%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,155 samples, 0.96%)</title><rect x="95.8296%" y="933" width="0.9620%" height="15" fill="rgb(214,1,49)" fg:x="115052" fg:w="1155"/><text x="96.0796%" y="943.50"></text></g><g><title>uv_run (1,486 samples, 1.24%)</title><rect x="95.6605%" y="1013" width="1.2377%" height="15" fill="rgb(226,163,40)" fg:x="114849" fg:w="1486"/><text x="95.9105%" y="1023.50"></text></g><g><title>uv__io_poll (1,486 samples, 1.24%)</title><rect x="95.6605%" y="997" width="1.2377%" height="15" fill="rgb(239,212,28)" fg:x="114849" fg:w="1486"/><text x="95.9105%" y="1007.50"></text></g><g><title>uv__stream_io (1,486 samples, 1.24%)</title><rect x="95.6605%" y="981" width="1.2377%" height="15" fill="rgb(220,20,13)" fg:x="114849" fg:w="1486"/><text x="95.9105%" y="991.50"></text></g><g><title>uv__read (1,486 samples, 1.24%)</title><rect x="95.6605%" y="965" width="1.2377%" height="15" fill="rgb(210,164,35)" fg:x="114849" fg:w="1486"/><text x="95.9105%" y="975.50"></text></g><g><title>read (1,369 samples, 1.14%)</title><rect x="95.7579%" y="949" width="1.1403%" height="15" fill="rgb(248,109,41)" fg:x="114966" fg:w="1369"/><text x="96.0079%" y="959.50"></text></g><g><title>syscall_return_via_sysret (119 samples, 0.10%)</title><rect x="96.7991%" y="933" width="0.0991%" height="15" fill="rgb(238,23,50)" fg:x="116216" fg:w="119"/><text x="97.0491%" y="943.50"></text></g><g><title>v8::internal::RootScavengeVisitor::VisitRootPointer (62 samples, 0.05%)</title><rect x="96.9248%" y="1013" width="0.0516%" height="15" fill="rgb(211,48,49)" fg:x="116367" fg:w="62"/><text x="97.1748%" y="1023.50"></text></g><g><title>[unknown] (5,812 samples, 4.84%)</title><rect x="92.1455%" y="1029" width="4.8410%" height="15" fill="rgb(223,36,21)" fg:x="110629" fg:w="5812"/><text x="92.3955%" y="1039.50">[unkno..</text></g><g><title>node::InternalCallbackScope::InternalCallbackScope (15 samples, 0.01%)</title><rect x="97.0323%" y="853" width="0.0125%" height="15" fill="rgb(207,123,46)" fg:x="116496" fg:w="15"/><text x="97.2823%" y="863.50"></text></g><g><title>v8::internal::Factory::NewJSObject (21 samples, 0.02%)</title><rect x="97.0573%" y="837" width="0.0175%" height="15" fill="rgb(240,218,32)" fg:x="116526" fg:w="21"/><text x="97.3073%" y="847.50"></text></g><g><title>v8::Object::New (29 samples, 0.02%)</title><rect x="97.0514%" y="853" width="0.0242%" height="15" fill="rgb(252,5,43)" fg:x="116519" fg:w="29"/><text x="97.3014%" y="863.50"></text></g><g><title>node::Environment::RunAndClearNativeImmediates (71 samples, 0.06%)</title><rect x="97.0198%" y="869" width="0.0591%" height="15" fill="rgb(252,84,19)" fg:x="116481" fg:w="71"/><text x="97.2698%" y="879.50"></text></g><g><title>node::Environment::CheckImmediate (90 samples, 0.07%)</title><rect x="97.0065%" y="885" width="0.0750%" height="15" fill="rgb(243,152,39)" fg:x="116465" fg:w="90"/><text x="97.2565%" y="895.50"></text></g><g><title>uv__run_check (102 samples, 0.08%)</title><rect x="96.9998%" y="901" width="0.0850%" height="15" fill="rgb(234,160,15)" fg:x="116457" fg:w="102"/><text x="97.2498%" y="911.50"></text></g><g><title>_start (141 samples, 0.12%)</title><rect x="96.9865%" y="1029" width="0.1174%" height="15" fill="rgb(237,34,20)" fg:x="116441" fg:w="141"/><text x="97.2365%" y="1039.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (141 samples, 0.12%)</title><rect x="96.9865%" y="1013" width="0.1174%" height="15" fill="rgb(229,97,13)" fg:x="116441" fg:w="141"/><text x="97.2365%" y="1023.50"></text></g><g><title>__libc_start_call_main (141 samples, 0.12%)</title><rect x="96.9865%" y="997" width="0.1174%" height="15" fill="rgb(234,71,50)" fg:x="116441" fg:w="141"/><text x="97.2365%" y="1007.50"></text></g><g><title>node::Start (141 samples, 0.12%)</title><rect x="96.9865%" y="981" width="0.1174%" height="15" fill="rgb(253,155,4)" fg:x="116441" fg:w="141"/><text x="97.2365%" y="991.50"></text></g><g><title>node::NodeMainInstance::Run (141 samples, 0.12%)</title><rect x="96.9865%" y="965" width="0.1174%" height="15" fill="rgb(222,185,37)" fg:x="116441" fg:w="141"/><text x="97.2365%" y="975.50"></text></g><g><title>node::NodeMainInstance::Run (141 samples, 0.12%)</title><rect x="96.9865%" y="949" width="0.1174%" height="15" fill="rgb(251,177,13)" fg:x="116441" fg:w="141"/><text x="97.2365%" y="959.50"></text></g><g><title>node::SpinEventLoopInternal (141 samples, 0.12%)</title><rect x="96.9865%" y="933" width="0.1174%" height="15" fill="rgb(250,179,40)" fg:x="116441" fg:w="141"/><text x="97.2365%" y="943.50"></text></g><g><title>uv_run (141 samples, 0.12%)</title><rect x="96.9865%" y="917" width="0.1174%" height="15" fill="rgb(242,44,2)" fg:x="116441" fg:w="141"/><text x="97.2365%" y="927.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (14 samples, 0.01%)</title><rect x="97.1056%" y="1029" width="0.0117%" height="15" fill="rgb(216,177,13)" fg:x="116584" fg:w="14"/><text x="97.3556%" y="1039.50"></text></g><g><title>cfree@GLIBC_2.2.5 (18 samples, 0.01%)</title><rect x="97.1331%" y="981" width="0.0150%" height="15" fill="rgb(216,106,43)" fg:x="116617" fg:w="18"/><text x="97.3831%" y="991.50"></text></g><g><title>__cgroup_account_cputime (15 samples, 0.01%)</title><rect x="97.3180%" y="741" width="0.0125%" height="15" fill="rgb(216,183,2)" fg:x="116839" fg:w="15"/><text x="97.5680%" y="751.50"></text></g><g><title>update_curr (36 samples, 0.03%)</title><rect x="97.3055%" y="757" width="0.0300%" height="15" fill="rgb(249,75,3)" fg:x="116824" fg:w="36"/><text x="97.5555%" y="767.50"></text></g><g><title>update_load_avg (13 samples, 0.01%)</title><rect x="97.3355%" y="757" width="0.0108%" height="15" fill="rgb(219,67,39)" fg:x="116860" fg:w="13"/><text x="97.5855%" y="767.50"></text></g><g><title>dequeue_entity (67 samples, 0.06%)</title><rect x="97.2922%" y="773" width="0.0558%" height="15" fill="rgb(253,228,2)" fg:x="116808" fg:w="67"/><text x="97.5422%" y="783.50"></text></g><g><title>dequeue_task (83 samples, 0.07%)</title><rect x="97.2822%" y="805" width="0.0691%" height="15" fill="rgb(235,138,27)" fg:x="116796" fg:w="83"/><text x="97.5322%" y="815.50"></text></g><g><title>dequeue_task_fair (76 samples, 0.06%)</title><rect x="97.2880%" y="789" width="0.0633%" height="15" fill="rgb(236,97,51)" fg:x="116803" fg:w="76"/><text x="97.5380%" y="799.50"></text></g><g><title>__perf_event_task_sched_in (225 samples, 0.19%)</title><rect x="97.3571%" y="789" width="0.1874%" height="15" fill="rgb(240,80,30)" fg:x="116886" fg:w="225"/><text x="97.6071%" y="799.50"></text></g><g><title>perf_ctx_enable (222 samples, 0.18%)</title><rect x="97.3596%" y="773" width="0.1849%" height="15" fill="rgb(230,178,19)" fg:x="116889" fg:w="222"/><text x="97.6096%" y="783.50"></text></g><g><title>x86_pmu_enable (219 samples, 0.18%)</title><rect x="97.3621%" y="757" width="0.1824%" height="15" fill="rgb(210,190,27)" fg:x="116892" fg:w="219"/><text x="97.6121%" y="767.50"></text></g><g><title>intel_pmu_enable_all (219 samples, 0.18%)</title><rect x="97.3621%" y="741" width="0.1824%" height="15" fill="rgb(222,107,31)" fg:x="116892" fg:w="219"/><text x="97.6121%" y="751.50"></text></g><g><title>native_write_msr (217 samples, 0.18%)</title><rect x="97.3638%" y="725" width="0.1807%" height="15" fill="rgb(216,127,34)" fg:x="116894" fg:w="217"/><text x="97.6138%" y="735.50"></text></g><g><title>finish_task_switch.isra.0 (246 samples, 0.20%)</title><rect x="97.3513%" y="805" width="0.2049%" height="15" fill="rgb(234,116,52)" fg:x="116879" fg:w="246"/><text x="97.6013%" y="815.50"></text></g><g><title>pick_next_task_fair (14 samples, 0.01%)</title><rect x="97.5587%" y="789" width="0.0117%" height="15" fill="rgb(222,124,15)" fg:x="117128" fg:w="14"/><text x="97.8087%" y="799.50"></text></g><g><title>pick_next_task (30 samples, 0.02%)</title><rect x="97.5562%" y="805" width="0.0250%" height="15" fill="rgb(231,179,28)" fg:x="117125" fg:w="30"/><text x="97.8062%" y="815.50"></text></g><g><title>prepare_task_switch (13 samples, 0.01%)</title><rect x="97.5812%" y="805" width="0.0108%" height="15" fill="rgb(226,93,45)" fg:x="117155" fg:w="13"/><text x="97.8312%" y="815.50"></text></g><g><title>psi_group_change (36 samples, 0.03%)</title><rect x="97.5962%" y="789" width="0.0300%" height="15" fill="rgb(215,8,51)" fg:x="117173" fg:w="36"/><text x="97.8462%" y="799.50"></text></g><g><title>psi_task_switch (46 samples, 0.04%)</title><rect x="97.5929%" y="805" width="0.0383%" height="15" fill="rgb(223,106,5)" fg:x="117169" fg:w="46"/><text x="97.8429%" y="815.50"></text></g><g><title>__schedule (448 samples, 0.37%)</title><rect x="97.2638%" y="821" width="0.3731%" height="15" fill="rgb(250,191,5)" fg:x="116774" fg:w="448"/><text x="97.5138%" y="831.50"></text></g><g><title>futex_wait_queue (468 samples, 0.39%)</title><rect x="97.2489%" y="853" width="0.3898%" height="15" fill="rgb(242,132,44)" fg:x="116756" fg:w="468"/><text x="97.4989%" y="863.50"></text></g><g><title>schedule (455 samples, 0.38%)</title><rect x="97.2597%" y="837" width="0.3790%" height="15" fill="rgb(251,152,29)" fg:x="116769" fg:w="455"/><text x="97.5097%" y="847.50"></text></g><g><title>futex_wait (489 samples, 0.41%)</title><rect x="97.2430%" y="869" width="0.4073%" height="15" fill="rgb(218,179,5)" fg:x="116749" fg:w="489"/><text x="97.4930%" y="879.50"></text></g><g><title>futex_wait_setup (14 samples, 0.01%)</title><rect x="97.6387%" y="853" width="0.0117%" height="15" fill="rgb(227,67,19)" fg:x="117224" fg:w="14"/><text x="97.8887%" y="863.50"></text></g><g><title>__x64_sys_futex (503 samples, 0.42%)</title><rect x="97.2339%" y="901" width="0.4190%" height="15" fill="rgb(233,119,31)" fg:x="116738" fg:w="503"/><text x="97.4839%" y="911.50"></text></g><g><title>do_futex (500 samples, 0.42%)</title><rect x="97.2364%" y="885" width="0.4165%" height="15" fill="rgb(241,120,22)" fg:x="116741" fg:w="500"/><text x="97.4864%" y="895.50"></text></g><g><title>__get_user_8 (15 samples, 0.01%)</title><rect x="97.7011%" y="821" width="0.0125%" height="15" fill="rgb(224,102,30)" fg:x="117299" fg:w="15"/><text x="97.9511%" y="831.50"></text></g><g><title>rseq_ip_fixup (19 samples, 0.02%)</title><rect x="97.6986%" y="837" width="0.0158%" height="15" fill="rgb(210,164,37)" fg:x="117296" fg:w="19"/><text x="97.9486%" y="847.50"></text></g><g><title>__rseq_handle_notify_resume (26 samples, 0.02%)</title><rect x="97.6978%" y="853" width="0.0217%" height="15" fill="rgb(226,191,16)" fg:x="117295" fg:w="26"/><text x="97.9478%" y="863.50"></text></g><g><title>exit_to_user_mode_loop (45 samples, 0.04%)</title><rect x="97.6853%" y="869" width="0.0375%" height="15" fill="rgb(214,40,45)" fg:x="117280" fg:w="45"/><text x="97.9353%" y="879.50"></text></g><g><title>restore_fpregs_from_fpstate (19 samples, 0.02%)</title><rect x="97.7286%" y="853" width="0.0158%" height="15" fill="rgb(244,29,26)" fg:x="117332" fg:w="19"/><text x="97.9786%" y="863.50"></text></g><g><title>exit_to_user_mode_prepare (76 samples, 0.06%)</title><rect x="97.6820%" y="885" width="0.0633%" height="15" fill="rgb(216,16,5)" fg:x="117276" fg:w="76"/><text x="97.9320%" y="895.50"></text></g><g><title>switch_fpu_return (26 samples, 0.02%)</title><rect x="97.7236%" y="869" width="0.0217%" height="15" fill="rgb(249,76,35)" fg:x="117326" fg:w="26"/><text x="97.9736%" y="879.50"></text></g><g><title>do_syscall_64 (620 samples, 0.52%)</title><rect x="97.2314%" y="917" width="0.5164%" height="15" fill="rgb(207,11,44)" fg:x="116735" fg:w="620"/><text x="97.4814%" y="927.50"></text></g><g><title>syscall_exit_to_user_mode (109 samples, 0.09%)</title><rect x="97.6570%" y="901" width="0.0908%" height="15" fill="rgb(228,190,49)" fg:x="117246" fg:w="109"/><text x="97.9070%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (640 samples, 0.53%)</title><rect x="97.2172%" y="933" width="0.5331%" height="15" fill="rgb(214,173,12)" fg:x="116718" fg:w="640"/><text x="97.4672%" y="943.50"></text></g><g><title>syscall_return_via_sysret (31 samples, 0.03%)</title><rect x="97.7511%" y="933" width="0.0258%" height="15" fill="rgb(218,26,35)" fg:x="117359" fg:w="31"/><text x="98.0011%" y="943.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (701 samples, 0.58%)</title><rect x="97.1939%" y="949" width="0.5839%" height="15" fill="rgb(220,200,19)" fg:x="116690" fg:w="701"/><text x="97.4439%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.03%)</title><rect x="97.7811%" y="917" width="0.0308%" height="15" fill="rgb(239,95,49)" fg:x="117395" fg:w="37"/><text x="98.0311%" y="927.50"></text></g><g><title>do_syscall_64 (27 samples, 0.02%)</title><rect x="97.7894%" y="901" width="0.0225%" height="15" fill="rgb(235,85,53)" fg:x="117405" fg:w="27"/><text x="98.0394%" y="911.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.01%)</title><rect x="97.7994%" y="885" width="0.0125%" height="15" fill="rgb(233,133,31)" fg:x="117417" fg:w="15"/><text x="98.0494%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (46 samples, 0.04%)</title><rect x="97.7778%" y="949" width="0.0383%" height="15" fill="rgb(218,25,20)" fg:x="117391" fg:w="46"/><text x="98.0278%" y="959.50"></text></g><g><title>__GI___lll_lock_wake (44 samples, 0.04%)</title><rect x="97.7794%" y="933" width="0.0366%" height="15" fill="rgb(252,210,38)" fg:x="117393" fg:w="44"/><text x="98.0294%" y="943.50"></text></g><g><title>futex_wait_queue (14 samples, 0.01%)</title><rect x="97.8294%" y="837" width="0.0117%" height="15" fill="rgb(242,134,21)" fg:x="117453" fg:w="14"/><text x="98.0794%" y="847.50"></text></g><g><title>schedule (14 samples, 0.01%)</title><rect x="97.8294%" y="821" width="0.0117%" height="15" fill="rgb(213,28,48)" fg:x="117453" fg:w="14"/><text x="98.0794%" y="831.50"></text></g><g><title>__schedule (13 samples, 0.01%)</title><rect x="97.8302%" y="805" width="0.0108%" height="15" fill="rgb(250,196,2)" fg:x="117454" fg:w="13"/><text x="98.0802%" y="815.50"></text></g><g><title>do_futex (26 samples, 0.02%)</title><rect x="97.8277%" y="869" width="0.0217%" height="15" fill="rgb(227,5,17)" fg:x="117451" fg:w="26"/><text x="98.0777%" y="879.50"></text></g><g><title>futex_wait (26 samples, 0.02%)</title><rect x="97.8277%" y="853" width="0.0217%" height="15" fill="rgb(221,226,24)" fg:x="117451" fg:w="26"/><text x="98.0777%" y="863.50"></text></g><g><title>__x64_sys_futex (29 samples, 0.02%)</title><rect x="97.8277%" y="885" width="0.0242%" height="15" fill="rgb(211,5,48)" fg:x="117451" fg:w="29"/><text x="98.0777%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (46 samples, 0.04%)</title><rect x="97.8227%" y="917" width="0.0383%" height="15" fill="rgb(219,150,6)" fg:x="117445" fg:w="46"/><text x="98.0727%" y="927.50"></text></g><g><title>do_syscall_64 (42 samples, 0.03%)</title><rect x="97.8261%" y="901" width="0.0350%" height="15" fill="rgb(251,46,16)" fg:x="117449" fg:w="42"/><text x="98.0761%" y="911.50"></text></g><g><title>__pthread_mutex_cond_lock (56 samples, 0.05%)</title><rect x="97.8161%" y="949" width="0.0466%" height="15" fill="rgb(220,204,40)" fg:x="117437" fg:w="56"/><text x="98.0661%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (53 samples, 0.04%)</title><rect x="97.8186%" y="933" width="0.0441%" height="15" fill="rgb(211,85,2)" fg:x="117440" fg:w="53"/><text x="98.0686%" y="943.50"></text></g><g><title>pthread_cond_wait@@GLIBC_2.3.2 (839 samples, 0.70%)</title><rect x="97.1656%" y="965" width="0.6988%" height="15" fill="rgb(229,17,7)" fg:x="116656" fg:w="839"/><text x="97.4156%" y="975.50"></text></g><g><title>uv_cond_wait (849 samples, 0.71%)</title><rect x="97.1639%" y="981" width="0.7072%" height="15" fill="rgb(239,72,28)" fg:x="116654" fg:w="849"/><text x="97.4139%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (39 samples, 0.03%)</title><rect x="97.8960%" y="933" width="0.0325%" height="15" fill="rgb(230,47,54)" fg:x="117533" fg:w="39"/><text x="98.1460%" y="943.50"></text></g><g><title>do_syscall_64 (32 samples, 0.03%)</title><rect x="97.9019%" y="917" width="0.0267%" height="15" fill="rgb(214,50,8)" fg:x="117540" fg:w="32"/><text x="98.1519%" y="927.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.01%)</title><rect x="97.9135%" y="901" width="0.0150%" height="15" fill="rgb(216,198,43)" fg:x="117554" fg:w="18"/><text x="98.1635%" y="911.50"></text></g><g><title>pthread_mutex_unlock@@GLIBC_2.2.5 (63 samples, 0.05%)</title><rect x="97.8852%" y="965" width="0.0525%" height="15" fill="rgb(234,20,35)" fg:x="117520" fg:w="63"/><text x="98.1352%" y="975.50"></text></g><g><title>__GI___lll_lock_wake (54 samples, 0.04%)</title><rect x="97.8927%" y="949" width="0.0450%" height="15" fill="rgb(254,45,19)" fg:x="117529" fg:w="54"/><text x="98.1427%" y="959.50"></text></g><g><title>uv_mutex_unlock (74 samples, 0.06%)</title><rect x="97.8794%" y="981" width="0.0616%" height="15" fill="rgb(219,14,44)" fg:x="117513" fg:w="74"/><text x="98.1294%" y="991.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (16 samples, 0.01%)</title><rect x="97.9485%" y="869" width="0.0133%" height="15" fill="rgb(217,220,26)" fg:x="117596" fg:w="16"/><text x="98.1985%" y="879.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (14 samples, 0.01%)</title><rect x="97.9502%" y="853" width="0.0117%" height="15" fill="rgb(213,158,28)" fg:x="117598" fg:w="14"/><text x="98.2002%" y="863.50"></text></g><g><title>v8::internal::compiler::(anonymous namespace)::SourcePositionWrapper::Reduce (13 samples, 0.01%)</title><rect x="97.9510%" y="837" width="0.0108%" height="15" fill="rgb(252,51,52)" fg:x="117599" fg:w="13"/><text x="98.2010%" y="847.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (25 samples, 0.02%)</title><rect x="97.9435%" y="917" width="0.0208%" height="15" fill="rgb(246,89,16)" fg:x="117590" fg:w="25"/><text x="98.1935%" y="927.50"></text></g><g><title>v8::internal::compiler::InliningPhase::Run (19 samples, 0.02%)</title><rect x="97.9485%" y="901" width="0.0158%" height="15" fill="rgb(216,158,49)" fg:x="117596" fg:w="19"/><text x="98.1985%" y="911.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (19 samples, 0.02%)</title><rect x="97.9485%" y="885" width="0.0158%" height="15" fill="rgb(236,107,19)" fg:x="117596" fg:w="19"/><text x="98.1985%" y="895.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::SelectInstructions (25 samples, 0.02%)</title><rect x="98.0251%" y="901" width="0.0208%" height="15" fill="rgb(228,185,30)" fg:x="117688" fg:w="25"/><text x="98.2751%" y="911.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (18 samples, 0.01%)</title><rect x="98.0310%" y="885" width="0.0150%" height="15" fill="rgb(246,134,8)" fg:x="117695" fg:w="18"/><text x="98.2810%" y="895.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (131 samples, 0.11%)</title><rect x="97.9410%" y="981" width="0.1091%" height="15" fill="rgb(214,143,50)" fg:x="117587" fg:w="131"/><text x="98.1910%" y="991.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (130 samples, 0.11%)</title><rect x="97.9418%" y="965" width="0.1083%" height="15" fill="rgb(228,75,8)" fg:x="117588" fg:w="130"/><text x="98.1918%" y="975.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (130 samples, 0.11%)</title><rect x="97.9418%" y="949" width="0.1083%" height="15" fill="rgb(207,175,4)" fg:x="117588" fg:w="130"/><text x="98.1918%" y="959.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (130 samples, 0.11%)</title><rect x="97.9418%" y="933" width="0.1083%" height="15" fill="rgb(205,108,24)" fg:x="117588" fg:w="130"/><text x="98.1918%" y="943.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (103 samples, 0.09%)</title><rect x="97.9643%" y="917" width="0.0858%" height="15" fill="rgb(244,120,49)" fg:x="117615" fg:w="103"/><text x="98.2143%" y="927.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (13 samples, 0.01%)</title><rect x="98.4424%" y="917" width="0.0108%" height="15" fill="rgb(223,47,38)" fg:x="118189" fg:w="13"/><text x="98.6924%" y="927.50"></text></g><g><title>pthread_mutex_unlock@@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="98.4574%" y="917" width="0.0125%" height="15" fill="rgb(229,179,11)" fg:x="118207" fg:w="15"/><text x="98.7074%" y="927.50"></text></g><g><title>__memmove_avx_unaligned_erms (39 samples, 0.03%)</title><rect x="99.5527%" y="869" width="0.0325%" height="15" fill="rgb(231,122,1)" fg:x="119522" fg:w="39"/><text x="99.8027%" y="879.50"></text></g><g><title>v8::internal::EvacuationAllocator::AllocateInNewSpace (164 samples, 0.14%)</title><rect x="99.5910%" y="869" width="0.1366%" height="15" fill="rgb(245,119,9)" fg:x="119568" fg:w="164"/><text x="99.8410%" y="879.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateShortcutCandidate&lt;v8::internal::FullHeapObjectSlot&gt; (1,041 samples, 0.87%)</title><rect x="98.8830%" y="885" width="0.8671%" height="15" fill="rgb(241,163,25)" fg:x="118718" fg:w="1041"/><text x="99.1330%" y="895.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::ShouldBePromoted (27 samples, 0.02%)</title><rect x="99.7276%" y="869" width="0.0225%" height="15" fill="rgb(217,214,3)" fg:x="119732" fg:w="27"/><text x="99.9776%" y="879.50"></text></g><g><title>v8::internal::HeapObject::SizeFromMap (36 samples, 0.03%)</title><rect x="99.7601%" y="885" width="0.0300%" height="15" fill="rgb(240,86,28)" fg:x="119771" fg:w="36"/><text x="100.0101%" y="895.50"></text></g><g><title>std::__detail::_Map_base&lt;v8::internal::AllocationSite, std::pair&lt;v8::internal::AllocationSite const, unsigned long&gt;, std::allocator&lt;std::pair&lt;v8::internal::AllocationSite const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;v8::internal::AllocationSite&gt;, v8::internal::Object::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (14 samples, 0.01%)</title><rect x="99.7959%" y="869" width="0.0117%" height="15" fill="rgb(215,47,9)" fg:x="119814" fg:w="14"/><text x="100.0459%" y="879.50"></text></g><g><title>v8::internal::PretenuringHandler::UpdateAllocationSite (22 samples, 0.02%)</title><rect x="99.7901%" y="885" width="0.0183%" height="15" fill="rgb(252,25,45)" fg:x="119807" fg:w="22"/><text x="100.0401%" y="895.50"></text></g><g><title>v8::internal::Scavenger::Process (2,060 samples, 1.72%)</title><rect x="98.0934%" y="933" width="1.7158%" height="15" fill="rgb(251,164,9)" fg:x="117770" fg:w="2060"/><text x="98.3434%" y="943.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (1,590 samples, 1.32%)</title><rect x="98.4849%" y="917" width="1.3243%" height="15" fill="rgb(233,194,0)" fg:x="118240" fg:w="1590"/><text x="98.7349%" y="927.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (1,305 samples, 1.09%)</title><rect x="98.7223%" y="901" width="1.0870%" height="15" fill="rgb(249,111,24)" fg:x="118525" fg:w="1305"/><text x="98.9723%" y="911.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ConcurrentScavengePages (18 samples, 0.01%)</title><rect x="99.8093%" y="933" width="0.0150%" height="15" fill="rgb(250,223,3)" fg:x="119830" fg:w="18"/><text x="100.0593%" y="943.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (2,098 samples, 1.75%)</title><rect x="98.0818%" y="949" width="1.7475%" height="15" fill="rgb(236,178,37)" fg:x="117756" fg:w="2098"/><text x="98.3318%" y="959.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::Run (2,128 samples, 1.77%)</title><rect x="98.0585%" y="965" width="1.7725%" height="15" fill="rgb(241,158,50)" fg:x="117728" fg:w="2128"/><text x="98.3085%" y="975.50">v..</text></g><g><title>v8::platform::DefaultJobState::CanRunFirstTask (30 samples, 0.02%)</title><rect x="99.8309%" y="965" width="0.0250%" height="15" fill="rgb(213,121,41)" fg:x="119856" fg:w="30"/><text x="100.0809%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="99.8617%" y="933" width="0.0108%" height="15" fill="rgb(240,92,3)" fg:x="119893" fg:w="13"/><text x="100.1117%" y="943.50"></text></g><g><title>do_syscall_64 (13 samples, 0.01%)</title><rect x="99.8617%" y="917" width="0.0108%" height="15" fill="rgb(205,123,3)" fg:x="119893" fg:w="13"/><text x="100.1117%" y="927.50"></text></g><g><title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.01%)</title><rect x="99.8592%" y="949" width="0.0142%" height="15" fill="rgb(205,97,47)" fg:x="119890" fg:w="17"/><text x="100.1092%" y="959.50"></text></g><g><title>v8::platform::DefaultJobState::DidRunTask (26 samples, 0.02%)</title><rect x="99.8559%" y="965" width="0.0217%" height="15" fill="rgb(247,152,14)" fg:x="119886" fg:w="26"/><text x="100.1059%" y="975.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (2,195 samples, 1.83%)</title><rect x="98.0501%" y="981" width="1.8283%" height="15" fill="rgb(248,195,53)" fg:x="117718" fg:w="2195"/><text x="98.3001%" y="991.50">v..</text></g><g><title>node::(anonymous namespace)::PlatformWorkerThread (3,318 samples, 2.76%)</title><rect x="97.1173%" y="997" width="2.7636%" height="15" fill="rgb(226,201,16)" fg:x="116598" fg:w="3318"/><text x="97.3673%" y="1007.50">no..</text></g><g><title>clone3 (3,326 samples, 2.77%)</title><rect x="97.1173%" y="1029" width="2.7703%" height="15" fill="rgb(205,98,0)" fg:x="116598" fg:w="3326"/><text x="97.3673%" y="1039.50">cl..</text></g><g><title>start_thread (3,326 samples, 2.77%)</title><rect x="97.1173%" y="1013" width="2.7703%" height="15" fill="rgb(214,191,48)" fg:x="116598" fg:w="3326"/><text x="97.3673%" y="1023.50">st..</text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="99.8876%" y="1029" width="0.0175%" height="15" fill="rgb(237,112,39)" fg:x="119924" fg:w="21"/><text x="100.1376%" y="1039.50"></text></g><g><title>do_syscall_64 (20 samples, 0.02%)</title><rect x="99.8884%" y="1013" width="0.0167%" height="15" fill="rgb(247,203,27)" fg:x="119925" fg:w="20"/><text x="100.1384%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (53 samples, 0.04%)</title><rect x="99.9050%" y="1029" width="0.0441%" height="15" fill="rgb(235,124,28)" fg:x="119945" fg:w="53"/><text x="100.1550%" y="1039.50"></text></g><g><title>v8::internal::Builtin_IsTraceCategoryEnabled (41 samples, 0.03%)</title><rect x="99.9575%" y="1029" width="0.0341%" height="15" fill="rgb(208,207,46)" fg:x="120008" fg:w="41"/><text x="100.2075%" y="1039.50"></text></g><g><title>v8::internal::tracing::TraceEventHelper::GetTracingController (41 samples, 0.03%)</title><rect x="99.9575%" y="1013" width="0.0341%" height="15" fill="rgb(234,176,4)" fg:x="120008" fg:w="41"/><text x="100.2075%" y="1023.50"></text></g><g><title>all (120,059 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(230,133,28)" fg:x="0" fg:w="120059"/><text x="0.2500%" y="1071.50"></text></g><g><title>node (119,997 samples, 99.95%)</title><rect x="0.0516%" y="1045" width="99.9484%" height="15" fill="rgb(211,137,40)" fg:x="62" fg:w="119997"/><text x="0.3016%" y="1055.50">node</text></g></svg></svg>